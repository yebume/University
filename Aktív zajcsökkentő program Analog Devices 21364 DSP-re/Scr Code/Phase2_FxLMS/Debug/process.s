	.file "process.c";

//  Compilation time: Mon May 08 18:32:05 2023


//  Compiler options: -c -file-attr ProjectName=FxLMS_with_A3_minden_hat_dec -O -Ov100 -g -save-temps -path-output Debug -ED -no-multiline -double-size-32 -flags-compiler --diag_warning,implicit_func_decl -warn-protos -force-circbuf -proc ADSP-21364 -o Debug\process.doj -MM

//  Architecture: ADSP-21364

//  Silicon revision: 0.2

	.section/pm/DOUBLE32 seg_pmco;

.epctext:
_handle_LED:
.LN_handle_LED:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r1-r2,r8,r12,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":637
	modify(i7,-2); 
// Diagnostic: Optimizer now optimizing for speed
	r2=m13; 
	r8=r2+1, r12=i6; 
.LN1:
// line 640
	r1=-2; 
	r12=r12+r1, dm(-2,i6)=r4; 
	dm(6144)=r2; 
	dm(6168)=r12; 
	dm(6169)=r8; 
	dm(6170)=r8; 
	dm(6161)=r8; 
.LN2:
// line 645
	r2=4194304; 
	dm(6162)=r8; 
.LN3:
// line 647
	r12=871; 
	dm(6160)=r2; 
	dm(6144)=r12; 
.LN4:
// line 648
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._handle_LED.end:
._handle_LED.end:
	.global _handle_LED;
	.type _handle_LED,STT_FUNC;

_readDAIpin:
.LN_readDAIpin:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,r2,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":618
	modify(i7,-2); 
.LN5:
// line 621
		f2 = flags;
	
	r2=dm(9401); 
.LN6:
// line 630
	r0=r2 and r4; 
.LN7:
// line 632
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._readDAIpin.end:
._readDAIpin.end:
	.global _readDAIpin;
	.type _readDAIpin,STT_FUNC;

_flagTest:
.LN_flagTest:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":603
	modify(i7,-2); 
.LN8:
// line 606
		 r2 = flags;
	
.LN9:
// line 612
	r0=r4 and r2; 
.LN10:
// line 614
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._flagTest.end:
._flagTest.end:
	.global _flagTest;
	.type _flagTest,STT_FUNC;

_process:
.LN_process:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 12 words
//
//   Scratch registers used:{r0-r2,r4,r8,r12,i4,i12,m4,s0,s2,s4,acc,mcc,scc,lcntr}
//
//   Call preserved registers used:{r3,r5-r7,r13,i0-i1,i3,l3,b3,m0}
//
//   Registers clobbered by function calls:{r0-r2,r4,r8,r12,i4,i12-i13,b4,b12-b13,m4,m12,s0-s15,ustat1-ustat4,acc,mcc,scc,btf,lcntr,smrf,smrb,sacc,smcc,sscc,sbtf}
//
//   Registers used in mul add instructions:{r1-r2,r4,r8,r12-r13}
//-------------------------------------------------------------------
//-------------------------------------------------------------------
 // Original Loop at "process.c" line 216 col 6 --  unrolled
//-------------------------------------------------------------------
// line "process.c":141
	modify(i7,-12); 
	r2=b3; 
	dm(-8,i6)=r2; 
	r2=m0; 
	dm(-7,i6)=r2; 
	r2=i0; 
	dm(-6,i6)=r2; 
	r2=i1; 
	dm(-5,i6)=r2; 
	r2=i3; 
	dm(-13,i6)=r3; 
	dm(-12,i6)=r5; 
	dm(-11,i6)=r6; 
	dm(-10,i6)=r7; 
	dm(-9,i6)=r13; 
	dm(-4,i6)=r2; 
	r6=m14; 
// Diagnostic: Optimizer now optimizing for speed
.LN11:
// line 144
	dm(_isProcessing)=r6; 
.LN12:
// line 159
	r3=524288; 
.LN13:
// line 147
	cjump _setDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	r4=r3; 
.LN14:
// line 159
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN15:
// line 160
	r2=8; 
	r8=dm(_led_value); 
	r2=r8 or r2, r12=m14; 
.LN16:
// line 162
	r1=-9; 
.LN17:
// line 159
	r4=pass r0; 
	if le r2=r8 and r1; 
.LN18:
// line 166
	r4=262144; 
.LN19:
// line 160
	dm(_led_value)=r2; 
.LN20:
// line 166
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN21:
// line 167
	r5=4; 
	r8=dm(_led_value); 
	r2=r8 or r5; 
.LN22:
// line 169
	r3=-5; 
.LN23:
// line 166
	r4=pass r0; 
	if le r2=r8 and r3; 
.LN24:
// line 173
	r4=16; 
.LN25:
// line 167
	dm(_led_value)=r2; 
.LN26:
// line 173
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN27:
// line 174
	r1=2; 
	r7=dm(_led_value); 
	r2=r7 or r1, r4=r5; 
.LN28:
// line 176
	r8=-3; 
.LN29:
// line 173
	r0=pass r0; 
	if eq r2=r7 and r8; 
.LN30:
// line 174
	dm(_led_value)=r2; 
.LN31:
// line 180
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN32:
// line 181
	r7=dm(_led_value); 
	r2=r7 or r12; 
.LN33:
// line 183
	r12=-2; 
.LN34:
// line 180
	r4=pass r0; 
	if eq r2=r7 and r12; 
.LN35:
// line 187
	r4=16; 
.LN36:
// line 181
	dm(_led_value)=r2; 
.LN37:
// line 187
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN38:
	r2=pass r0; 
	if eq jump(pc,.P4L206) (DB); 
	r4=r5; 
	nop; 
.LN39:
	r2=dm(_delayCtnr); 
	r2=r2+1; 
	dm(_delayCtnr)=r2; 
	r4=r5; 

.P4L206:
.LN40:
// line 188
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN41:
	r2=pass r0; 
	if eq jump(pc,.P4L207) (DB); 
.LN42:
// line 189
	r4=524288; 
	nop; 
.LN43:
// line 188
	r2=dm(_delayCtnr2); 
	r2=r2+1; 
	dm(_delayCtnr2)=r2; 
.LN44:
// line 189
	r4=524288; 

.P4L207:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN45:
	r2=pass r0; 
	if gt jump(pc,.P4L5) (DB); 
.LN46:
	r4=262144; 
	nop; 

.P4L6:
.LN47:
// line 190
	r4=524288; 

.P4L231:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN48:
	r2=pass r0; 
	if le jump(pc,.P4L208) (DB); 
.LN49:
// line 191
	r4=262144; 
	nop; 
.LN50:
// line 190
	r2=dm(_delayCtnr4); 
	r2=r2+1; 
	dm(_delayCtnr4)=r2; 
.LN51:
// line 191
	r4=262144; 

.P4L208:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN52:
	r2=pass r0; 
	if le jump(pc,.P4L209) (DB); 
.LN53:
// line 195
	r4=16; 
	nop; 
.LN54:
// line 191
	r2=dm(_delayCtnr5); 
	r2=r2+1; 
	dm(_delayCtnr5)=r2; 
.LN55:
// line 195
	r4=16; 

.P4L209:
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN56:
	r2=pass r0; 
	if ne jump(pc,.P4L210) (DB); 
	r4=r5; 
	nop; 
	r2=dm(_delayCtnr); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L211) (DB); 
	r4=r5; 
	nop; 
.LN57:
// line 197
	r2=dm(_fxlmsFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L16) (DB); 
.LN58:
// line 196
	dm(_delayCtnr)=r2; 
	nop; 
.LN59:
// line 197
	dm(_fxlmsFlag)=r6; 

.P4L13:
	r4=r5; 

.P4L211:

.P4L210:
.LN60:
// line 202
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN61:
	r2=pass r0; 
	if ne jump(pc,.P4L212) (DB); 
.LN62:
// line 210
	r4=262144; 
	nop; 
.LN63:
// line 202
	r2=dm(_delayCtnr2); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L213) (DB); 
.LN64:
// line 210
	r4=262144; 
	nop; 
.LN65:
// line 204
	r2=dm(_identFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L21) (DB); 
.LN66:
// line 203
	dm(_delayCtnr2)=r2; 
	nop; 
.LN67:
// line 204
	dm(_identFlag)=r6; 

.P4L18:
.LN68:
// line 210
	r4=262144; 

.P4L213:

.P4L212:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN69:
	r2=pass r0; 
	if le jump(pc,.P4L214) (DB); 
.LN70:
// line 236
	r4=524288; 
	nop; 
.LN71:
// line 210
	r4=dm(_resetFlag); 
	r2=m14; 
	comp(r4, r2); 
	if ne jump(pc,.P4L215) (DB); 
.LN72:
// line 236
	r4=524288; 
	nop; 
	r2=r2-1; 
.LN73:
// line 212
	r4=dm(_mu2def); 
.LN74:
// line 215
	dm(_err2)=r2; 
.LN75:
// line 214
	dm(_yfila3)=r2; 
.LN76:
// line 213
	dm(_inputRfil_n)=r2; 
.LN77:
// line 211
	dm(_fxlmsFlag)=r2; 
.LN78:
// line 212
	dm(_mu2)=r4; 
.LN79:
// line 216
	bit set mode1 0x200000; nop; 
	i4=_coefs_filter_2; 
	r2=m13; 
.LN80:
// line 217
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
	dm(i4,2)=r2; 
.LN81:
// line 216
	bit clr mode1 0x200000; nop; 
.LN82:
// line 219
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray1; 
	i0=_input1R2; 
	r2=m13; 
	lcntr=50, do(pc,.P4L32-1)until lce; 

.P4L31:
//-------------------------------------------------------------------
//   Loop at "process.c" line 219 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN83:
// line 220
	dm(i0,2)=r2; 
.LN84:
// line 221
	dm(i4,2)=r2; 
.LN85:
// line 219
	//end loop .P4L31; 
//-------------------------------------------------------------------
//   End Loop L31
//-------------------------------------------------------------------

.P4L32:

.P4L35:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN86:
// line 220
	dm(m5,i0)=m13; 
.LN87:
// line 221
	dm(m5,i4)=m13; 
.LN88:
// line 224
	bit set mode1 0x200000; nop; 
	i4=_inputRfil; 
	i0=_input2R2; 
	r2=m13; 
	lcntr=50, do(pc,.P4L40-1)until lce; 

.P4L39:
//-------------------------------------------------------------------
//   Loop at "process.c" line 224 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN89:
// line 225
	dm(i0,2)=r2; 
.LN90:
// line 226
	dm(i4,2)=r2; 
.LN91:
// line 224
	//end loop .P4L39; 
//-------------------------------------------------------------------
//   End Loop L39
//-------------------------------------------------------------------

.P4L40:

.P4L43:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN92:
// line 225
	dm(m5,i0)=m13; 
.LN93:
// line 226
	dm(m5,i4)=m13; 
.LN94:
// line 229
	bit set mode1 0x200000; nop; 
	r4=m13; 
	i4=_inNoiseArray3; 
	i0=_yn2array; 
.LN95:
	r0=2; 
	r2=r4; 
.LN96:
	lcntr=50, do(pc,.P4L48-1)until lce; 

.P4L47:
//-------------------------------------------------------------------
//   Loop at "process.c" line 229 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//     multifunction alu               used   1 out of    2 ( 50.0%)
//     multifunction float multiply    used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN97:
	r2=r2+r0, dm(i0,2)=r4; 
.LN98:
// line 231
	dm(i4,2)=r4; 
.LN99:
// line 229
	//end loop .P4L47; 
//-------------------------------------------------------------------
//   End Loop L47
//-------------------------------------------------------------------

.P4L48:

.P4L51:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN100:
	r2=r2+1; 
.LN101:
// line 230
	dm(m5,i0)=m13; 
.LN102:
// line 231
	dm(m5,i4)=m13; 
.LN103:
// line 229
	dm(_k)=r2; 
.LN104:
// line 236
	r4=524288; 

.P4L215:

.P4L214:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN105:
	r2=pass r0; 
	if le jump(pc,.P4L53) (DB); 
.LN106:
	r4=262144; 
	nop; 

.P4L54:
.LN107:
// line 243
	r2=dm(_resetFlag); 

.P4L230:
	r2=pass r2; 

.P4L229:

.P4L228:
	if eq jump(pc,.P4L59) (DB); 
.LN108:
	r4=524288; 
	nop; 

.P4L60:
.LN109:
// line 249
	r2=dm(_resetFlag); 
	r2=pass r2; 

.P4L227:

.P4L226:
	if eq jump(pc,.P4L63) (DB); 
.LN110:
	r4=262144; 
	nop; 

.P4L64:
.LN111:
// line 256
	r4=dm(_resetFlag); 
	r2=m14; 

.P4L225:

.P4L224:
	comp(r4, r2); 
	if ne jump(pc,.P4L68) (DB); 
.LN112:
// line 257
	r2=dm(_led_value); 
	nop; 
.LN113:
// line 260
	r4=240; 
	r2=r2 or r4; 

.P4L69:
	r4=m14; 
.LN114:
// line 270
	r6=dm(_identFlag); 
.LN115:
// line 271
	r0=r2 or r4; 
.LN116:
// line 270
	comp(r6, r4); 
	if ne r0=r2 and r12; 
.LN117:
// line 278
	r12=dm(_fxlmsFlag); 
.LN118:
// line 279
	r2=r0 or r1; 
.LN119:
// line 278
	comp(r12, r4); 
	if ne r2=r0 and r8; 
.LN120:
// line 286
	r8=dm(_ident3Flag); 
.LN121:
// line 287
	r12=r2 or r5; 
.LN122:
// line 286
	comp(r8, r4); 
.LN123:
// line 295
	r4=dm(_l); 
	if ne r12=r2 and r3; 
	r2=r4-1; 
.LN124:
// line 296
	r4=pass r2; 
	if ge jump(pc,.P4L71) (DB); 
.LN125:
// line 287
	dm(_led_value)=r12; 
.LN126:
// line 295
	dm(_l)=r2; 
	r2=r5+1; 
.LN127:
// line 298
	dm(_l)=r2; 

.P4L71:
	r2=m14; 
.LN128:
// line 303
	comp(r6, r2); 
	if eq jump(pc,.P4L72); 
	r2=m14; 
	comp(r8, r2); 
	if eq jump(pc,.P4L72); 

.P4L74:
.LN129:
// line 334
	r2=dm(_i_dec); 
	r2=r2-1; 
.LN130:
// line 335
	r12=pass r2; 
	if ge jump(pc,.P4L216) (DB); 
.LN131:
// line 334
	dm(_i_dec)=r2; 
.LN132:
// line 346
	r2=dm(_RightInPrev); 
.LN133:
// line 337
	r2=50; 
	dm(_i_dec)=r2; 
.LN134:
// line 346
	r2=dm(_RightInPrev); 

.P4L216:
	r12=dm(_rightIn); 
.LN135:
// line 347
	r8=dm(_alpha); 
.LN136:
// line 346
	F12=F12-F2; 
.LN137:
// line 383
	i4=_inputR; 
	m4=dm(_i_dec); 
.LN138:
// line 347
	F8=F12*F8; 
.LN139:
// line 384
	i0=_inputL; 
.LN140:
// line 385
	i1=_noise1; 
.LN141:
// line 386
	r4=dm(_i1); 
.LN142:
// line 347
	F2=F8+F2, modify(i4,m4); 
.LN143:
// line 386
	r8=pass r4, dm(m5,i4)=r12; 
.LN144:
// line 385
	r4=dm(_noise_n); 
.LN145:
// line 384
	r8=dm(_leftIn); 
.LN146:
// line 346
	dm(_rightIn)=r12; 
.LN147:
// line 347
	dm(_RightInPrev)=r2; 
.LN148:
// line 386
	if ne jump(pc,.P4L78) (DB); 
.LN149:
// line 385
	dm(m4,i1)=r4; 
.LN150:
// line 384
	dm(m4,i0)=r8; 
.LN151:
// line 387
	dm(_inputR+51)=r12; 
.LN152:
// line 388
	dm(_inputL+51)=r8; 
.LN153:
// line 389
	dm(_noiseN+51)=r4; 

.P4L78:
.LN154:
// line 394
	r2=dm(_l); 
	r2=pass r2; 
	if eq jump(pc,.P4L79) (DB); 
.LN155:
// line 396
	r2=dm(_m1); 
	r2=r2-1; 

.P4L80:
.LN156:
// line 426
	modify(i7,m7); 
	r2=51; 
	r12=_inputR; 
	dm(i7,m7)=r2; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	r2=m14; 
.LN157:
// line 440
	r12=dm(_identFlag); 
	comp(r12, r2); 
	if ne jump(pc,.P4L88) (DB); 
.LN158:
// line 426
	modify(i7,2); 
.LN159:
	dm(_out_test1)=r0; 
.LN160:
// line 440
	r12=dm(_l); 
	r12=pass r12; 
	if eq jump(pc,.P4L89); 

.P4L88:
.LN161:
// line 476
	r12=dm(_ident3Flag); 
	r2=m14; 
	comp(r12, r2); 
	if ne jump(pc,.P4L95); 
	r12=dm(_l); 
	r12=pass r12; 
	if eq jump(pc,.P4L96) (DB); 
.LN162:
// line 484
	r6=100; 
	nop; 

.P4L95:
.LN163:
// line 510
	r2=dm(_fxlmsFlag); 
	r12=m14; 
	comp(r2, r12); 
	if ne jump(pc,.P4L102); 
	r2=dm(_l); 
	r2=pass r2; 
	if eq jump(pc,.P4L103) (DB); 
.LN164:
// line 514
	r2=dm(_m1); 
	r8=dm(_inRdata); 

.P4L102:
.LN165:
// line 557
	r12=dm(_l); 
	r2=pass r12; 
	if ne jump(pc,.P4L217) (DB); 
.LN166:
// line 565
	r8=dm(_fxlmsFlag); 
	r2=m14; 
.LN167:
// line 559
	r8=dm(_identFlag); 
	r2=m14; 
	comp(r8, r2); 
	if ne jump(pc,.P4L218) (DB); 
.LN168:
// line 565
	r8=dm(_fxlmsFlag); 
	r2=m14; 
.LN169:
// line 561
	m4=dm(_m1); 
	i4=_inNoiseArray1; 
	r2=dm(m4,i4); 
	dm(_out_1)=r2; 
.LN170:
// line 565
	r8=dm(_fxlmsFlag); 
	r2=m14; 

.P4L218:

.P4L217:
	comp(r8, r2); 
	if ne jump(pc,.P4L219) (DB); 
.LN171:
// line 568
	r2=pass r12; 
	nop; 
.LN172:
// line 566
	r2=dm(_yn2); 
	dm(_out_1)=r2; 
.LN173:
// line 568
	r2=pass r12; 

.P4L219:
	if ne jump(pc,.P4L220) (DB); 
.LN174:
// line 582
	r2=dm(_out_1); 
.LN175:
// line 583
	r12=dm(_inRdata); 
.LN176:
// line 569
	r12=dm(_ident3Flag); 
	r2=m14; 
	comp(r12, r2); 
	if ne jump(pc,.P4L221) (DB); 
.LN177:
// line 582
	r2=dm(_out_1); 
.LN178:
// line 583
	r12=dm(_inRdata); 
.LN179:
// line 571
	m4=dm(_m3); 
	i4=_inNoiseArray3; 
	r2=dm(m4,i4); 
	dm(_out_1)=r2; 
.LN180:
// line 582
	r2=dm(_out_1); 
.LN181:
// line 583
	r12=dm(_inRdata); 

.P4L221:

.P4L220:
.LN182:
// line 585
	r8=dm(_err1); 
.LN183:
// line 586
	r4=dm(_out_test1); 
.LN184:
// line 588
	r1=dm(_err3); 
.LN185:
// line 582
	dm(_rightOut1)=r2; 
.LN186:
// line 583
	dm(_leftOut1)=r12; 
.LN187:
// line 585
	dm(_rightOut2)=r8; 
.LN188:
// line 586
	dm(_leftOut2)=r4; 
.LN189:
// line 588
	dm(_rightOut3)=r1; 
.LN190:
// line 589
	dm(_leftOut3)=r1; 
.LN191:
// line 596
	cjump _clrDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN192:
// line 597
	r4=dm(_led_value); 
	r0=m13; 
	cjump _handle_LED (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN193:
// line 601
	jump(pc,.P4L205) (DB); 
.LN194:
// line 600
	dm(_isProcessing)=r0; 
.LN195:
// line 601
	r3=dm(-13,i6); 

.P4L103:
.LN196:
// line 514
	r4=dm(_yfila3); 
	i4=_input1R2; 
	r3=r12-1, m4=r2; 
	F12=F8-F4; 
.LN197:
// line 515
	r2=pass r2; 
.LN198:
// line 514
	dm(m4,i4)=r12; 
.LN199:
// line 515
	if ne jump(pc,.P4L105) (DB); 
.LN200:
// line 512
	dm(_yn2)=r3; 
.LN201:
// line 514
	modify(i4,m4); 
.LN202:
// line 516
	dm(_input1R2+100)=r12; 

.P4L105:
.LN203:
// line 519
	r2=dm(_m2); 
	i0=_input2R2; 
.LN204:
// line 521
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L107) (DB); 
.LN205:
// line 519
	dm(m4,i0)=r12; 
	nop; 
.LN206:
// line 522
	dm(_input2R2+100)=r12; 

.P4L107:
.LN207:
// line 525
	modify(i7,m7); 
	r5=100; 
	r12=_input1R2; 
	r8=i4; 
	r4=_coefs_filter_1; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN208:
// line 526
	r2=dm(_m2); 
	i4=_inputRfil; 
.LN209:
// line 527
	r2=pass r2, m4=r2; 
.LN210:
// line 525
	modify(i7,2); 
.LN211:
// line 527
	if ne jump(pc,.P4L109) (DB); 
.LN212:
// line 525
	dm(_inputRfil_n)=r0; 
.LN213:
// line 526
	dm(m4,i4)=r0; 
.LN214:
// line 528
	dm(_inputRfil+100)=r0; 

.P4L109:
.LN215:
// line 531
	modify(i7,m7); 
	r12=_input2R2; 
	dm(i7,m7)=r5; 
	dm(i7,m7)=r12; 
	r2=dm(_m2); 
	r4=_coefs_filter_2; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN216:
// line 533
	r2=dm(_m3); 
	i4=_yn2array; 
.LN217:
// line 531
	F12=-F0, m4=r2; 
.LN218:
// line 534
	r2=pass r2; 
.LN219:
// line 531
	modify(i7,2); 
.LN220:
// line 533
	dm(m4,i4)=r12; 
.LN221:
// line 534
	if ne jump(pc,.P4L111) (DB); 
.LN222:
// line 531
	dm(_yn2)=r12; 
.LN223:
// line 533
	modify(i4,m4); 
.LN224:
// line 535
	dm(_yn2array+100)=r12; 

.P4L111:
.LN225:
// line 544
	r3=r3+1, modify(i7,m7); 
.LN226:
// line 538
	r12=_yn2array; 
	r4=_coefs_filter_3; 
	r8=i4; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN227:
// line 546
	r2=_inputRfil; 
.LN228:
// line 543
	r12=dm(_m2); 
.LN229:
// line 546
	i0=_coefs_filter_2; 
	r8=r2+r12, i4=i0; 
.LN230:
// line 541
	r1=dm(_inLdata); 
.LN231:
// line 546
	r4=dm(_mu2); 
	b3=r2; i3=r8; l3=100; 
	F8=F1*F4, r2=dm(i3,m6); 
	r4=r12+r5, r12=dm(i0,m6); 
.LN232:
// line 538
	modify(i7,2); 
.LN233:
	dm(_yfila3)=r0; 
.LN234:
// line 541
	dm(_err2)=r1; 
.LN235:
// line 546
	F2=F8*F2; 
	lcntr=99, do(pc,.P4L204-1)until lce; 

.P4L198:
//-------------------------------------------------------------------
//   Loop at "process.c" line 544 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 99
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN236:
// line 544
	r3=r3+1, dm(i4,m6)=r2; 
.LN237:
// line 546
	F2=F8*F12, r12=dm(i0,m6); 
	//end loop .P4L198; 
//-------------------------------------------------------------------
//   End Kernel for Loop L198
//-------------------------------------------------------------------

.P4L204:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	F2=F12+F2, l3=m13; 
.LN238:
// line 544
	dm(_k_input)=r4; 
	jump(pc,.P4L102) (DB); 
	dm(_k)=r3; 
.LN239:
// line 546
	dm(i4,m6)=r2; 

.P4L96:
.LN240:
// line 484
	r2=r2-1, modify(i7,m7); 
.LN241:
// line 489
	r5=r2+1, dm(i7,m7)=r6; 
.LN242:
// line 479
	dm(_yn3)=r2; 
.LN243:
// line 484
	r3=_inNoiseArray3; 
	r2=dm(_m3); 
	r12=pass r3, dm(i7,m7)=r3; 
	r4=_coefs_filter_3; 
	r8=r3+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN244:
// line 488
	r2=dm(_m3); 
.LN245:
// line 492
	r8=r3+r2; 
	i0=_coefs_filter_3; 
.LN246:
// line 485
	r12=dm(_inRdata); 
.LN247:
// line 492
	b3=r3; i3=r8; l3=100; 
	r4=dm(_mu3); 
.LN248:
// line 485
	F8=F12-F0, r1=dm(i3,m6); 
.LN249:
// line 492
	F4=F8*F4, i4=i0; 
	r3=r2+r6, r12=dm(i0,m6); 
.LN250:
// line 484
	modify(i7,2); 
.LN251:
	dm(_yn3)=r0; 
.LN252:
// line 485
	dm(_err3)=r8; 
.LN253:
// line 492
	F2=F4*F1; 
	lcntr=99, do(pc,.P4L195-1)until lce; 

.P4L189:
//-------------------------------------------------------------------
//   Loop at "process.c" line 489 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 99
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN254:
// line 489
	r5=r5+1, dm(i4,m6)=r2; 
.LN255:
// line 492
	F2=F4*F12, r12=dm(i0,m6); 
	//end loop .P4L189; 
//-------------------------------------------------------------------
//   End Kernel for Loop L189
//-------------------------------------------------------------------

.P4L195:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN256:
// line 498
	r8=dm(_delayCtnrIdnetLimit); 
	r4=715827883; 
	r4=r8*r4 (SSF), l3=m13; 
.LN257:
// line 496
	r1=dm(_delayCtnrIdnet); 
.LN258:
// line 498
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN259:
// line 492
	F2=F12+F2; 
.LN260:
// line 496
	r12=r1+1, dm(i4,m6)=r2; 
.LN261:
// line 498
	r2=r4-r8; 
	comp(r12, r2); 
.LN262:
// line 489
	dm(_k_input)=r3; 
.LN263:
// line 498
	if ne jump(pc,.P4L95) (DB); 
.LN264:
// line 489
	dm(_k)=r5; 
.LN265:
// line 496
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
.LN266:
// line 498
	jump(pc,.P4L95) (DB); 
	dm(_delayCtnrIdnet)=r2; 
.LN267:
	dm(_ident3Flag)=r2; 

.P4L89:
	r2=r2-1, modify(i7,m7); 
.LN268:
// line 447
	r6=100; 
.LN269:
// line 442
	dm(_yn1)=r2; 
.LN270:
// line 447
	r3=_inNoiseArray1; 
.LN271:
// line 452
	r5=r2+1, dm(i7,m7)=r6; 
	r12=pass r3, dm(i7,m7)=r3; 
.LN272:
// line 447
	r2=dm(_m1); 
	r4=_coefs_filter_1; 
	r8=r3+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN273:
// line 451
	r2=dm(_m1); 
.LN274:
// line 455
	r8=r3+r2; 
	i0=_coefs_filter_1; 
.LN275:
// line 448
	r12=dm(_inLdata); 
.LN276:
// line 455
	b3=r3; i3=r8; l3=100; 
	r4=dm(_mu1); 
.LN277:
// line 448
	F8=F12-F0, r1=dm(i3,m6); 
.LN278:
// line 455
	F4=F8*F4, i4=i0; 
	r3=r2+r6, r12=dm(i0,m6); 
.LN279:
// line 447
	modify(i7,2); 
.LN280:
	dm(_yn1)=r0; 
.LN281:
// line 448
	dm(_err1)=r8; 
.LN282:
// line 455
	F2=F4*F1; 
	lcntr=99, do(pc,.P4L186-1)until lce; 

.P4L180:
//-------------------------------------------------------------------
//   Loop at "process.c" line 452 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 99
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN283:
// line 452
	r5=r5+1, dm(i4,m6)=r2; 
.LN284:
// line 455
	F2=F4*F12, r12=dm(i0,m6); 
	//end loop .P4L180; 
//-------------------------------------------------------------------
//   End Kernel for Loop L180
//-------------------------------------------------------------------

.P4L186:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN285:
// line 461
	r8=dm(_delayCtnrIdnetLimit); 
	r4=715827883; 
	r4=r8*r4 (SSF), l3=m13; 
.LN286:
// line 459
	r1=dm(_delayCtnrIdnet); 
.LN287:
// line 461
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN288:
// line 455
	F2=F12+F2; 
.LN289:
// line 459
	r12=r1+1, dm(i4,m6)=r2; 
.LN290:
// line 461
	r2=r4-r8; 
	comp(r12, r2); 
.LN291:
// line 452
	dm(_k_input)=r3; 
.LN292:
// line 461
	if ne jump(pc,.P4L88) (DB); 
.LN293:
// line 452
	dm(_k)=r5; 
.LN294:
// line 459
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
	r12=m14; 
.LN295:
// line 463
	dm(_delayCtnrIdnet)=r2; 
.LN296:
// line 464
	jump(pc,.P4L88) (DB); 
.LN297:
// line 462
	dm(_identFlag)=r2; 
.LN298:
// line 464
	dm(_ident3Flag)=r12; 

.P4L79:
.LN299:
// line 396
.LN300:
// line 397
	r12=pass r2; 
	if ge jump(pc,.P4L222) (DB); 
.LN301:
// line 396
	dm(_m1)=r2; 
.LN302:
// line 402
	r2=dm(_m2); 
.LN303:
// line 399
	r2=99; 
	dm(_m1)=r2; 
.LN304:
// line 402
	r2=dm(_m2); 

.P4L222:
	r2=r2-1; 
.LN305:
// line 403
	r12=pass r2; 
	if ge jump(pc,.P4L223) (DB); 
.LN306:
// line 402
	dm(_m2)=r2; 
.LN307:
// line 408
	r2=dm(_m3); 
.LN308:
// line 405
	r2=99; 
	dm(_m2)=r2; 
.LN309:
// line 408
	r2=dm(_m3); 

.P4L223:
	r2=r2-1; 
.LN310:
// line 409
	r12=pass r2; 
	if ge jump(pc,.P4L86) (DB); 
.LN311:
// line 408
	dm(_m3)=r2; 
	nop; 
.LN312:
// line 411
	r2=99; 
	dm(_m3)=r2; 

.P4L86:
.LN313:
// line 419
	modify(i7,m7); 
	r3=51; 
	r12=_inputR; 
	r8=i4; 
	r4=_coefs_dec; 
	dm(i7,m7)=r3; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	modify(i7,2); 
.LN314:
	dm(_inRdata)=r0; 
.LN315:
// line 420
	modify(i7,m7); 
	r12=_inputL; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	modify(i7,2); 
.LN316:
	dm(_inLdata)=r0; 
.LN317:
// line 421
	modify(i7,m7); 
	dm(i7,m7)=r3; 
	r2=_noiseN; 
	r8=dm(_i_dec); 
	r4=_coefs_dec; 
	r12=_noise1; 
	r8=r2+r8; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN318:
// line 423
	i0=_inNoiseArray3; 
.LN319:
// line 422
	i4=_inNoiseArray1; 
	m0=dm(_m1); 
.LN320:
// line 423
	m4=dm(_m3); 
.LN321:
// line 421
	modify(i7,2); 
.LN322:
	dm(_inNoise)=r0; 
.LN323:
// line 423
	jump(pc,.P4L80) (DB); 
.LN324:
// line 422
	dm(m0,i4)=r0; 
.LN325:
// line 423
	dm(m4,i0)=r0; 

.P4L72:
.LN326:
// line 305
	cjump _rand (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN327:
// line 306
	r2=-822083584; 
.LN328:
// line 305
	r12=r0+r0; 
.LN329:
// line 306
	F1=recips F2; 
	r8=1073741824; 
.LN330:
// line 305
	F4=float r12; 
.LN331:
// line 306
	F13=F1*F2; 
	F4=F1*F4, F2=F8-F13; 
	F12=F2*F13; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
	F2=F2*F4, F12=F8-F12; 
	F12=F12*F2; 
	jump(pc,.P4L74) (DB); 
	F2=F12+F2; 
	dm(_noise_n)=r2; 

.P4L68:
.LN332:
// line 266
	jump(pc,.P4L69) (DB); 
	r4=-241; 
	r2=r2 and r4; 

.P4L63:
.LN333:
// line 249
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN334:
	r2=pass r0; 
	if gt jump(pc,.P4L224) (DB); 
.LN335:
// line 256
	r4=dm(_resetFlag); 
	r2=m14; 
.LN336:
// line 249
	r2=dm(_delayCtnr5); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L225) (DB); 
.LN337:
// line 256
	r4=dm(_resetFlag); 
	r2=m14; 
	r2=m13; 
.LN338:
// line 251
	r4=dm(_mu2); 
	r0=r2-1; 
	F4=scalb F4 by r0; 
	jump(pc,.P4L64) (DB); 
.LN339:
// line 250
	dm(_delayCtnr5)=r2; 
.LN340:
// line 251
	dm(_mu2)=r4; 

.P4L59:
.LN341:
// line 243
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN342:
	r2=pass r0; 
	if gt jump(pc,.P4L226) (DB); 
.LN343:
// line 249
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN344:
// line 243
	r2=dm(_delayCtnr4); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L227) (DB); 
.LN345:
// line 249
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN346:
// line 245
	r2=dm(_mu2); 
	F4=F2+F2, r2=m13; 
	jump(pc,.P4L60) (DB); 
	dm(_mu2)=r4; 
.LN347:
// line 244
	dm(_delayCtnr4)=r2; 

.P4L53:
.LN348:
// line 236
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN349:
	r2=pass r0; 
	if gt jump(pc,.P4L228) (DB); 
.LN350:
// line 243
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN351:
// line 236
	r2=dm(_delayCtnr3); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L229) (DB); 
.LN352:
// line 243
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN353:
// line 238
	comp(r2, r6), r2=m13; 
	if ne jump(pc,.P4L58) (DB); 
.LN354:
// line 237
	dm(_delayCtnr3)=r2; 
	nop; 
.LN355:
// line 238
	jump(pc,.P4L230) (DB); 
	dm(_resetFlag)=r2; 
.LN356:
// line 243
	r2=dm(_resetFlag); 

.P4L58:
.LN357:
// line 239
	jump(pc,.P4L54) (DB); 
	r2=m14; 
	dm(_resetFlag)=r2; 

.P4L21:
.LN358:
// line 205
	jump(pc,.P4L18) (DB); 
	r2=m13; 
	dm(_identFlag)=r2; 

.P4L16:
.LN359:
// line 198
	jump(pc,.P4L13) (DB); 
	r2=m13; 
	dm(_fxlmsFlag)=r2; 

.P4L5:
.LN360:
// line 189
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN361:
	r2=pass r0; 
	if le jump(pc,.P4L231) (DB); 
.LN362:
// line 190
	r4=524288; 
	nop; 
.LN363:
// line 189
	r2=dm(_delayCtnr3); 
	jump(pc,.P4L6) (DB); 
	r2=r2+1; 
	dm(_delayCtnr3)=r2; 

.P4L205:
.LN364:
// line 601
	r5=dm(-12,i6); 
	r6=dm(-11,i6); 
	r7=dm(-10,i6); 
	r13=dm(-9,i6); 
	b3=dm(-8,i6); 
	m0=dm(-7,i6); 
	i0=dm(-6,i6); 
	i1=dm(-5,i6); 
	i12=dm(m7,i6); 
	jump(m14,i12) (DB); 
	i3=dm(-4,i6); 
	rframe; 

.LN._process.end:
._process.end:
	.global _process;
	.type _process,STT_FUNC;

	.file_attr ProjectName="FxLMS_with_A3_minden_hat_dec";
	.file_attr FuncName="_handle_LED";
	.file_attr FuncName="_readDAIpin";
	.file_attr FuncName="_flagTest";
	.file_attr FuncName="_process";
	.file_attr Content="CodeData";
.epctext.end:

	.extern _setDAIproc;
	.type _setDAIproc,STT_FUNC;
	.extern _conv_asm;
	.type _conv_asm,STT_FUNC;
	.extern _clrDAIproc;
	.type _clrDAIproc,STT_FUNC;
	.extern _rand;
	.type _rand,STT_FUNC;

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.var =
		0x01,0x11,0x01,0x03,0x08,0x13,0x0B,0x10,0x06,0x43,0x06,0x1B,
		0x08,0x25,0x08,0x42,0x0B,0x00,0x00,0x02,0x24,0x00,0x03,0x08,
		0x3E,0x0B,0x0B,0x0F,0x00,0x00,0x03,0x16,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x00,0x00,0x04,0x13,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x0B,0x0F,0x00,0x00,0x05,0x0D,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x38,0x09,0x00,0x00,0x06,0x15,0x01,0x01,0x13,
		0x03,0x08,0x32,0x0B,0x27,0x0C,0x00,0x00,0x07,0x15,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x27,0x0C,0x49,0x13,0x00,0x00,0x08,
		0x05,0x00,0x03,0x08,0x49,0x13,0x00,0x00,0x09,0x2E,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x3F,
		0x0C,0x20,0x0B,0x00,0x00,0x0A,0x05,0x00,0x03,0x08,0x49,0x13,
		0x02,0x09,0x34,0x0C,0x00,0x00,0x0B,0x0B,0x01,0x01,0x13,0x11,
		0x01,0x12,0x01,0x00,0x00,0x0C,0x2E,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x49,0x13,0x3F,0x0C,
		0x20,0x0B,0x00,0x00,0x0D,0x34,0x00,0x03,0x08,0x32,0x0B,0x49,
		0x13,0x02,0x09,0x2C,0x06,0x3F,0x0C,0x00,0x00,0x0E,0x01,0x01,
		0x01,0x13,0x49,0x13,0x00,0x00,0x0F,0x21,0x00,0x37,0x0F,0x22,
		0x0F,0x2F,0x0F,0x00,0x00,0x00;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.var =
		0x15,0x0D,0x00,0x00,0x02,0x00;
	.var = .epcabbrev;
	.var =
		0x04,0x01,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x01;
	.var = .epcline;
	.var =
		0x00,0x00,0x00,0x00,0x45,0x3A,0x5C,0x4A,0x61,0x6B,0x61,0x62,
		0x5F,0x54,0x61,0x6D,0x61,0x73,0x5C,0x50,0x68,0x61,0x73,0x65,
		0x32,0x5F,0x46,0x78,0x4C,0x4D,0x53,0x00,0x43,0x2F,0x43,0x2B,
		0x2B,0x20,0x43,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,0x20,0x3A,
		0x20,0x53,0x48,0x41,0x52,0x43,0x20,0x76,0x65,0x72,0x73,0x69,
		0x6F,0x6E,0x20,0x37,0x2E,0x32,0x2E,0x30,0x2E,0x30,0x20,0x28,
		0x4D,0x61,0x79,0x20,0x20,0x31,0x20,0x32,0x30,0x30,0x36,0x20,
		0x32,0x33,0x3A,0x31,0x36,0x3A,0x34,0x31,0x29,0x0A,0x20,0x20,
		0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,
		0x29,0x20,0x31,0x39,0x39,0x37,0x2D,0x32,0x30,0x30,0x36,0x20,
		0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,
		0x65,0x73,0x2C,0x20,0x49,0x6E,0x63,0x2E,0x0A,0x20,0x20,0x43,
		0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,0x29,
		0x20,0x31,0x39,0x39,0x38,0x2D,0x32,0x30,0x30,0x33,0x20,0x45,
		0x64,0x69,0x73,0x6F,0x6E,0x20,0x44,0x65,0x73,0x69,0x67,0x6E,
		0x20,0x47,0x72,0x6F,0x75,0x70,0x2C,0x20,0x49,0x6E,0x63,0x2E,
		0x0A,0x20,0x20,0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,
		0x20,0x28,0x63,0x29,0x20,0x31,0x39,0x39,0x37,0x2D,0x31,0x39,
		0x39,0x39,0x20,0x45,0x64,0x69,0x6E,0x62,0x75,0x72,0x67,0x68,
		0x20,0x50,0x6F,0x72,0x74,0x61,0x62,0x6C,0x65,0x20,0x43,0x6F,
		0x6D,0x70,0x69,0x6C,0x65,0x72,0x73,0x2C,0x20,0x4C,0x74,0x64,
		0x2E,0x0A,0x00,0x00,0x02,0x62,0x6F,0x6F,0x6C,0x00,0x02,0x01,
		0x02,0x77,0x63,0x68,0x61,0x72,0x5F,0x74,0x00,0x06,0x01,0x02,
		0x63,0x68,0x61,0x72,0x00,0x06,0x01,0x02,0x73,0x69,0x67,0x6E,
		0x65,0x64,0x20,0x63,0x68,0x61,0x72,0x00,0x06,0x01,0x02,0x75,
		0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x63,0x68,0x61,0x72,
		0x00,0x08,0x01,0x02,0x73,0x68,0x6F,0x72,0x74,0x00,0x05,0x01,
		0x02,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x73,0x68,0x6F,0x72,
		0x74,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,
		0x64,0x20,0x73,0x68,0x6F,0x72,0x74,0x00,0x07,0x01,0x02,0x69,
		0x6E,0x74,0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,
		0x20,0x69,0x6E,0x74,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,0x69,
		0x67,0x6E,0x65,0x64,0x20,0x69,0x6E,0x74,0x00,0x07,0x01,0x02,
		0x6C,0x6F,0x6E,0x67,0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,
		0x65,0x64,0x20,0x6C,0x6F,0x6E,0x67,0x00,0x05,0x01,0x02,0x75,
		0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x6C,0x6F,0x6E,0x67,
		0x00,0x07,0x01,0x02,0x66,0x6C,0x6F,0x61,0x74,0x00,0x04,0x01,
		0x02,0x64,0x6F,0x75,0x62,0x6C,0x65,0x00,0x04,0x01,0x02,0x6C,
		0x6F,0x6E,0x67,0x20,0x64,0x6F,0x75,0x62,0x6C,0x65,0x00,0x04,
		0x02,0x02,0x76,0x6F,0x69,0x64,0x20,0x2A,0x00,0x01,0x01,0x03,
		0x73,0x69,0x67,0x5F,0x61,0x74,0x6F,0x6D,0x69,0x63,0x5F,0x74,
		0x00,0x01,0x81,0x01,0x00,0x00,0x03,0x73,0x69,0x7A,0x65,0x5F,
		0x74,0x00,0x01,0xBD,0x01,0x00,0x00,0x03,0x77,0x63,0x68,0x61,
		0x72,0x5F,0x74,0x00,0x01,0x81,0x01,0x00,0x00,0x04,0x4C,0x02,
		0x00,0x00,0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,0x01,
		0x81,0x01,0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,0x00,
		0x01,0x81,0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x64,0x69,
		0x76,0x5F,0x74,0x00,0x01,0x28,0x02,0x00,0x00,0x04,0x7C,0x02,
		0x00,0x00,0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,0x01,
		0xA6,0x01,0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,0x00,
		0x01,0xA6,0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x6C,0x64,
		0x69,0x76,0x5F,0x74,0x00,0x01,0x58,0x02,0x00,0x00,0x06,0x92,
		0x02,0x00,0x00,0x00,0x01,0x01,0x00,0x03,0x5F,0x74,0x5F,0x61,
		0x74,0x65,0x78,0x69,0x74,0x5F,0x66,0x70,0x00,0x01,0x89,0x02,
		0x00,0x00,0x07,0xBE,0x02,0x00,0x00,0x00,0x01,0x01,0x81,0x01,
		0x00,0x00,0x08,0x00,0xF0,0x01,0x00,0x00,0x08,0x00,0xF0,0x01,
		0x00,0x00,0x00,0x03,0x5F,0x74,0x5F,0x63,0x6F,0x6D,0x70,0x61,
		0x72,0x65,0x5F,0x66,0x70,0x00,0x01,0xA5,0x02,0x00,0x00,0x09,
		0x10,0x03,0x00,0x00,0x68,0x61,0x6E,0x64,0x6C,0x65,0x5F,0x4C,
		0x45,0x44,0x00,0x01;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end;
	.var =
		0x01,0x01,0x00,0x0A,0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,
		0x65,0x00,0x81,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,
		0x00,0x00,0x00;
	.var = .LN1;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x00,0x0C,0x4D,0x03,0x00,0x00,0x72,0x65,0x61,0x64,0x44,
		0x41,0x49,0x70,0x69,0x6E,0x00,0x01;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end;
	.var =
		0x01,0x81,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x81,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN5;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x00,0x0C,0x88,0x03,0x00,0x00,0x66,0x6C,0x61,0x67,0x54,
		0x65,0x73,0x74,0x00,0x01;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end;
	.var =
		0x01,0x81,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x81,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN8;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x00,0x09,0xB0,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x00,0x01;
	.var = .LN_process;
	.var = .LN._process.end;
	.var =
		0x01,0x01,0x00,0x0B,0x00,0x00,0x00,0x00;
	.var = .LN11;
	.var = .LN._process.end;
	.var =
		0x00,0x00,0x0D,0x69,0x73,0x50,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x69,0x6E,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _isProcessing;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightIn;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x6C,0x65,0x66,0x74,0x49,0x6E,
		0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _leftIn;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x4F,
		0x75,0x74,0x31,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightOut1;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x6C,0x65,0x66,0x74,0x4F,0x75,
		0x74,0x31,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _leftOut1;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x4F,
		0x75,0x74,0x32,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightOut2;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x6C,0x65,0x66,0x74,0x4F,0x75,
		0x74,0x32,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _leftOut2;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x4F,
		0x75,0x74,0x33,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightOut3;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x6C,0x65,0x66,0x74,0x4F,0x75,
		0x74,0x33,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _leftOut3;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x00,0x01,0x0A,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input1R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x4C,0x00,0x01,0xFC,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input1L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x00,0x01,0xEE,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x4C,0x00,0x01,0xE0,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x52,0x00,0x01,0xD2,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input3R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x4C,0x00,0x01,0xC4,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input3L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x32,0x00,0x01,0xB6,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input1R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x32,0x00,0x01,0xA8,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x00,0x01,0x9A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputR;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x4C,
		0x00,0x01,0x8C,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputL;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x4E,
		0x00,0x01,0x7E,0x0C,0x00,0x00,0x05,0x0C;
	.var = _noiseN;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x31,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x32,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x33,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6A,0x00,0x01,0x81,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _j;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x00,0x01,0x81,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _k;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x5F,0x69,0x6E,0x70,0x75,
		0x74,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _k_input;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x78,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _ix;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x31,0x00,
		0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x32,0x00,
		0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x00,0x01,0x81,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _l;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x32,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x33,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x5F,0x64,0x65,0x63,0x00,
		0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_dec;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x74,0x65,
		0x73,0x74,0x31,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_test1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x74,0x65,
		0x73,0x74,0x32,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_test2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x66,0x78,0x6C,0x6D,0x73,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _fxlmsFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _identFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x33,
		0x46,0x6C,0x61,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _ident3Flag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x72,0x65,0x73,0x65,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _resetFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x32,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x33,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x34,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr4;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x35,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr5;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0x01,0x81,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnet;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,0x6D,0x69,
		0x74,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnetLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x65,0x64,0x5F,0x76,0x61,
		0x6C,0x75,0x65,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _led_value;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x64,0x65,0x63,0x00,0x01,0x70,0x0C,0x00,0x00,0x05,0x0C;
	.var = _coefs_dec;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x52,0x64,0x61,0x74,
		0x61,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _inRdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4C,0x64,0x61,0x74,
		0x61,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _inLdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _inNoise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x00,0x01,0x62,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x01,0x54,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x01,0x46,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x31,0x00,0x01,0x38,
		0x0C,0x00,0x00,0x05,0x0C;
	.var = _un1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x31,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x31,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x31,0x00,0x01,
		0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _err1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0x01,0x2A,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x32,0x00,0x01,0x1C,
		0x0C,0x00,0x00,0x05,0x0C;
	.var = _un2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x64,0x65,0x66,
		0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2def;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x00,0x01,
		0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _err2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x5F,0x6E,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _inputRfil_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x00,0x01,0x0E,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputRfil;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0x01,0x00,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x33,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x33,0x00,0x01,0xCE,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x33,0x00,0x01,
		0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _err3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x66,0x69,0x6C,0x61,0x33,
		0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _yfila3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x61,0x72,0x72,
		0x61,0x79,0x00,0x01,0xF2,0x0B,0x00,0x00,0x05,0x0C;
	.var = _yn2array;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x31,
		0x00,0x01,0xE4,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x32,
		0x00,0x01,0xD6,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x33,
		0x00,0x01,0xC8,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _noise_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x01,0xB8,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x81,0x01,0x00,0x00,0x05,0x0C;
	.var = _noiseFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0x01,0xCE,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _RightInPrev;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x61,0x6C,0x70,0x68,0x61,0x00,
		0x01,0xCE,0x01,0x00,0x00,0x05,0x0C;
	.var = _alpha;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0E,0xC8,0x0B,0x00,0x00,0xCE,0x01,
		0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,0x00,0x0E,0xD6,0x0B,
		0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,
		0xE4,0x0B,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,
		0x00,0x0E,0xF2,0x0B,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,
		0x00,0x64,0x00,0x0E,0x00,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,
		0x0F,0x65,0x00,0x64,0x00,0x0E,0x0E,0x0C,0x00,0x00,0xCE,0x01,
		0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x0E,0x1C,0x0C,0x00,0x00,
		0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,0x2A,0x0C,
		0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x0E,
		0x38,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x64,0x00,0x63,
		0x00,0x0E,0x46,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x64,
		0x00,0x63,0x00,0x0E,0x54,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,
		0x0F,0x64,0x00,0x63,0x00,0x0E,0x62,0x0C,0x00,0x00,0xCE,0x01,
		0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x0E,0x70,0x0C,0x00,0x00,
		0xCE,0x01,0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x0E,0x7E,0x0C,
		0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x33,0x00,0x32,0x00,0x0E,
		0x8C,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x34,0x00,0x33,
		0x00,0x0E,0x9A,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x34,
		0x00,0x33,0x00,0x0E,0xA8,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,
		0x0F,0x34,0x00,0x33,0x00,0x0E,0xB6,0x0C,0x00,0x00,0xCE,0x01,
		0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,0xC4,0x0C,0x00,0x00,
		0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,0xD2,0x0C,
		0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,
		0xE0,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,
		0x00,0x0E,0xEE,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,0x0F,0x65,
		0x00,0x64,0x00,0x0E,0xFC,0x0C,0x00,0x00,0xCE,0x01,0x00,0x00,
		0x0F,0x65,0x00,0x64,0x00,0x0E,0x0A,0x0D,0x00,0x00,0xCE,0x01,
		0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x0E,0x00,0x00,0x00,0x00,
		0xCE,0x01,0x00,0x00,0x0F,0x65,0x00,0x64,0x00,0x00;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.var =
		0x13,0x11,0x00,0x00,0x02,0x00,0x5A,0x02,0x00,0x00,0x01,0x01,
		0x01,0xF6,0x0A,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,
		0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,
		0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,
		0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,
		0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,
		0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x00,
		0xFD,0xC7,0xE4,0xA2,0x06,0xF7,0x68,0x74,0x74,0x2E,0x68,0x00,
		0x00,0xB0,0xF5,0x84,0x93,0x06,0xAC,0x0F,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x63,0x64,0x65,0x66,
		0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,0x01,0xD2,0xE0,0xD8,
		0xA3,0x04,0xAF,0x04,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x43,0x64,0x65,0x66,0x32,0x31,0x33,0x36,
		0x33,0x2E,0x68,0x00,0x01,0xD2,0xE0,0xD8,0xA3,0x04,0x84,0xA9,
		0x02,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,
		0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,
		0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,
		0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,
		0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,
		0x5C,0x64,0x65,0x66,0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,
		0x01,0xD2,0xE0,0xD8,0xA3,0x04,0xD6,0x04,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x64,0x65,0x66,0x32,
		0x31,0x33,0x36,0x33,0x2E,0x68,0x00,0x01,0xD2,0xE0,0xD8,0xA3,
		0x04,0x83,0x8B,0x08,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x73,0x69,0x67,0x6E,0x61,0x6C,0x2E,0x68,
		0x00,0x01,0xD2,0xE0,0xD8,0xA3,0x04,0x91,0x55,0x43,0x3A,0x5C,
		0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,
		0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,
		0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,
		0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,
		0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x73,0x74,0x64,
		0x6C,0x69,0x62,0x2E,0x68,0x00,0x01,0xD2,0xE0,0xD8,0xA3,0x04,
		0x9F,0x68,0x63,0x6F,0x65,0x66,0x5F,0x64,0x65,0x63,0x2E,0x64,
		0x61,0x74,0x00,0x00,0xBA,0xC7,0xE4,0xA2,0x06,0x96,0x04,0x00,
		0x00,0x05,0x02;
	.var = .LN_handle_LED;
	.var =
		0x04,0x01,0x05,0x1F,0x03,0xFC,0x04,0x01,0x00,0x05,0x02;
	.var = .LN1;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN2;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN3;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN4;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_readDAIpin;
	.var =
		0x04,0x01,0x05,0x19,0x03,0xE9,0x04,0x01,0x00,0x05,0x02;
	.var = .LN5;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN6;
	.var =
		0x05,0x06,0x12,0x00,0x05,0x02;
	.var = .LN7;
	.var =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_flagTest;
	.var =
		0x04,0x01,0x05,0x17,0x03,0xDA,0x04,0x01,0x00,0x05,0x02;
	.var = .LN8;
	.var =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.var = .LN9;
	.var =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.var = .LN10;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_process;
	.var =
		0x04,0x01,0x05,0x01,0x95,0x00,0x05,0x02;
	.var = .LN11;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN12;
	.var =
		0x05,0x0F,0x18,0x00,0x05,0x02;
	.var = .LN13;
	.var =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN14;
	.var =
		0x15,0x00,0x05,0x02;
	.var = .LN15;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN16;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN17;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN18;
	.var =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.var = .LN19;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN20;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN21;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN22;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN23;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN24;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN25;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN26;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN27;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN28;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN29;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN30;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN31;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN32;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN33;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN34;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN35;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN36;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN37;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN38;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN39;
	.var =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.var = .LN40;
	.var =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.var = .LN41;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN42;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN43;
	.var =
		0x05,0x19,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN44;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN45;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN46;
	.var =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.var = .LN47;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN48;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN49;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN50;
	.var =
		0x05,0x1B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN51;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN52;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN53;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN54;
	.var =
		0x05,0x1B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN55;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN56;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN57;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN58;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN59;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN60;
	.var =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.var = .LN61;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN62;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN63;
	.var =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN64;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN65;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN66;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN67;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN68;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN69;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN70;
	.var =
		0x05,0x11,0x23,0x00,0x05,0x02;
	.var = .LN71;
	.var =
		0x05,0x02,0x03,0x66,0x01,0x00,0x05,0x02;
	.var = .LN72;
	.var =
		0x05,0x11,0x23,0x00,0x05,0x02;
	.var = .LN73;
	.var =
		0x05,0x06,0x03,0x68,0x01,0x00,0x05,0x02;
	.var = .LN74;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN75;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN76;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN77;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN78;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN79;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN80;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN81;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN82;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN83;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN84;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN85;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN86;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN87;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN88;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN89;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN90;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN91;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN92;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN93;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN94;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN95;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN96;
	.var =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.var = .LN97;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN98;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN99;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN100;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN101;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN102;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN103;
	.var =
		0x05,0x18,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN104;
	.var =
		0x05,0x11,0x10,0x00,0x05,0x02;
	.var = .LN105;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN106;
	.var =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.var = .LN107;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN108;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN109;
	.var =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.var = .LN110;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN111;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN112;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN113;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN114;
	.var =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.var = .LN115;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN116;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN117;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN118;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN119;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN120;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN121;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN122;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN123;
	.var =
		0x12,0x00,0x05,0x02;
	.var = .LN124;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN125;
	.var =
		0x05,0x06,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN126;
	.var =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.var = .LN127;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN128;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN129;
	.var =
		0x28,0x00,0x05,0x02;
	.var = .LN130;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN131;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN132;
	.var =
		0x05,0x02,0x15,0x00,0x05,0x02;
	.var = .LN133;
	.var =
		0x05,0x03,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN134;
	.var =
		0x05,0x02,0x12,0x00,0x05,0x02;
	.var = .LN135;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN136;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN137;
	.var =
		0x05,0x05,0x2E,0x00,0x05,0x02;
	.var = .LN138;
	.var =
		0x05,0x02,0x03,0x5C,0x01,0x00,0x05,0x02;
	.var = .LN139;
	.var =
		0x05,0x05,0x2E,0x00,0x05,0x02;
	.var = .LN140;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN141;
	.var =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.var = .LN142;
	.var =
		0x03,0x59,0x01,0x00,0x05,0x02;
	.var = .LN143;
	.var =
		0x30,0x00,0x05,0x02;
	.var = .LN144;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN145;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN146;
	.var =
		0x05,0x02,0x03,0x5A,0x01,0x00,0x05,0x02;
	.var = .LN147;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN148;
	.var =
		0x30,0x00,0x05,0x02;
	.var = .LN149;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN150;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN151;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN152;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN153;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN154;
	.var =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.var = .LN155;
	.var =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.var = .LN156;
	.var =
		0x05,0x16,0x27,0x00,0x05,0x02;
	.var = .LN157;
	.var =
		0x05,0x02,0x17,0x00,0x05,0x02;
	.var = .LN158;
	.var =
		0x05,0x16,0x03,0x72,0x01,0x00,0x05,0x02;
	.var = .LN159;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN160;
	.var =
		0x17,0x00,0x05,0x02;
	.var = .LN161;
	.var =
		0x2D,0x00,0x05,0x02;
	.var = .LN162;
	.var =
		0x05,0x11,0x11,0x00,0x05,0x02;
	.var = .LN163;
	.var =
		0x05,0x02,0x23,0x00,0x05,0x02;
	.var = .LN164;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN165;
	.var =
		0x05,0x01,0x34,0x00,0x05,0x02;
	.var = .LN166;
	.var =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.var = .LN167;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN168;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN169;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN170;
	.var =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.var = .LN171;
	.var =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.var = .LN172;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN173;
	.var =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.var = .LN174;
	.var =
		0x05,0x02,0x17,0x00,0x05,0x02;
	.var = .LN175;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN176;
	.var =
		0x05,0x02,0x03,0x72,0x01,0x00,0x05,0x02;
	.var = .LN177;
	.var =
		0x16,0x00,0x05,0x02;
	.var = .LN178;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN179;
	.var =
		0x05,0x06,0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN180;
	.var =
		0x05,0x02,0x14,0x00,0x05,0x02;
	.var = .LN181;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN182;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN183;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN184;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN185;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN186;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN187;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN188;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN189;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN190;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN191;
	.var =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.var = .LN192;
	.var =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.var = .LN193;
	.var =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.var = .LN194;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN195;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN196;
	.var =
		0x05,0x03,0x03,0xA9,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN197;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN198;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN199;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN200;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN201;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN202;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN203;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN204;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN205;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN206;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN207;
	.var =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.var = .LN208;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN209;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN210;
	.var =
		0x05,0x19,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN211;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN212;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN213;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN214;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN215;
	.var =
		0x05,0x13,0x0C,0x00,0x05,0x02;
	.var = .LN216;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN217;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN218;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN219;
	.var =
		0x05,0x13,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN220;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN221;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN222;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN223;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN224;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN225;
	.var =
		0x05,0x10,0x12,0x00,0x05,0x02;
	.var = .LN226;
	.var =
		0x05,0x14,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN227;
	.var =
		0x05,0x07,0x11,0x00,0x05,0x02;
	.var = .LN228;
	.var =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN229;
	.var =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.var = .LN230;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN231;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN232;
	.var =
		0x05,0x14,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN233;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN234;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN235;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN236;
	.var =
		0x05,0x10,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN237;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN238;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN239;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN240;
	.var =
		0x05,0x11,0x03,0x42,0x01,0x00,0x05,0x02;
	.var = .LN241;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN242;
	.var =
		0x05,0x03,0x03,0x76,0x01,0x00,0x05,0x02;
	.var = .LN243;
	.var =
		0x05,0x11,0x0E,0x00,0x05,0x02;
	.var = .LN244;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN245;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN246;
	.var =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN247;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN248;
	.var =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN249;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN250;
	.var =
		0x05,0x11,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN251;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN252;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN253;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN254;
	.var =
		0x05,0x12,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN255;
	.var =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.var = .LN256;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN257;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN258;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN259;
	.var =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN260;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN261;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN262;
	.var =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN263;
	.var =
		0x12,0x00,0x05,0x02;
	.var = .LN264;
	.var =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN265;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN266;
	.var =
		0x05,0x3D,0x0B,0x00,0x05,0x02;
	.var = .LN267;
	.var =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.var = .LN268;
	.var =
		0x05,0x11,0x03,0x4D,0x01,0x00,0x05,0x02;
	.var = .LN269;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN270;
	.var =
		0x05,0x11,0x0E,0x00,0x05,0x02;
	.var = .LN271;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN272;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN273;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN274;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN275;
	.var =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN276;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN277;
	.var =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN278;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN279;
	.var =
		0x05,0x11,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN280;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN281;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN282;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN283;
	.var =
		0x05,0x12,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN284;
	.var =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.var = .LN285;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN286;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN287;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN288;
	.var =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN289;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN290;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN291;
	.var =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN292;
	.var =
		0x12,0x00,0x05,0x02;
	.var = .LN293;
	.var =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN294;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN295;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN296;
	.var =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.var = .LN297;
	.var =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN298;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN299;
	.var =
		0x05,0x06,0x03,0xBC,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN300;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN301;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN302;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN303;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN304;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN305;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN306;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN307;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN308;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN309;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN310;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN311;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN312;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN313;
	.var =
		0x05,0x19,0x11,0x00,0x05,0x02;
	.var = .LN314;
	.var =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.var = .LN315;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN316;
	.var =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.var = .LN317;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN318;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN319;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN320;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN321;
	.var =
		0x05,0x16,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN322;
	.var =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.var = .LN323;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN324;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN325;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN326;
	.var =
		0x05,0x1B,0x03,0x8A,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN327;
	.var =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.var = .LN328;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN329;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN330;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN331;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN332;
	.var =
		0x05,0x06,0x03,0x58,0x01,0x00,0x05,0x02;
	.var = .LN333;
	.var =
		0x05,0x23,0x03,0x6F,0x01,0x00,0x05,0x02;
	.var = .LN334;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN335;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN336;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN337;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN338;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN339;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN340;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN341;
	.var =
		0x05,0x23,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN342;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN343;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN344;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN345;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN346;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN347;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN348;
	.var =
		0x05,0x2B,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN349;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN350;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN351;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN352;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN353;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN354;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN355;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN356;
	.var =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.var = .LN357;
	.var =
		0x05,0x0C,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN358;
	.var =
		0x03,0x5E,0x01,0x00,0x05,0x02;
	.var = .LN359;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN360;
	.var =
		0x05,0x26,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN361;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN362;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN363;
	.var =
		0x05,0x32,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN364;
	.var =
		0x05,0x01,0x03,0x9C,0x03,0x01,0x00,0x05,0x02;
	.var = .LN._process.end;
	.var =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.var =
		0xAA,0x03,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x19,0x0D,0x00,0x00,0xD2,0x02,0x00,0x00,0x68,0x61,0x6E,0x64,
		0x6C,0x65,0x5F,0x4C,0x45,0x44,0x00,0x10,0x03,0x00,0x00,0x72,
		0x65,0x61,0x64,0x44,0x41,0x49,0x70,0x69,0x6E,0x00,0x4D,0x03,
		0x00,0x00,0x66,0x6C,0x61,0x67,0x54,0x65,0x73,0x74,0x00,0x88,
		0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x9E,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x00,0xB7,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x4C,0x00,0xD0,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x00,0xE9,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x4C,0x00,0x02,
		0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x52,0x00,0x1B,
		0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x4C,0x00,0x34,
		0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x32,0x00,
		0x4E,0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x32,
		0x00,0x68,0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x52,0x00,
		0x80,0x05,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x4C,0x00,0x98,
		0x05,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x4E,0x00,0xB0,0x05,
		0x00,0x00,0x69,0x31,0x00,0xC4,0x05,0x00,0x00,0x69,0x32,0x00,
		0xD8,0x05,0x00,0x00,0x69,0x33,0x00,0xEC,0x05,0x00,0x00,0x6A,
		0x00,0xFF,0x05,0x00,0x00,0x6B,0x00,0x12,0x06,0x00,0x00,0x6B,
		0x5F,0x69,0x6E,0x70,0x75,0x74,0x00,0x2B,0x06,0x00,0x00,0x69,
		0x78,0x00,0x3F,0x06,0x00,0x00,0x6F,0x75,0x74,0x5F,0x31,0x00,
		0x56,0x06,0x00,0x00,0x6F,0x75,0x74,0x5F,0x32,0x00,0x6D,0x06,
		0x00,0x00,0x6C,0x00,0x80,0x06,0x00,0x00,0x6D,0x31,0x00,0x94,
		0x06,0x00,0x00,0x6D,0x32,0x00,0xA8,0x06,0x00,0x00,0x6D,0x33,
		0x00,0xBC,0x06,0x00,0x00,0x69,0x5F,0x64,0x65,0x63,0x00,0xD3,
		0x06,0x00,0x00,0x6F,0x75,0x74,0x5F,0x74,0x65,0x73,0x74,0x31,
		0x00,0xEE,0x06,0x00,0x00,0x6F,0x75,0x74,0x5F,0x74,0x65,0x73,
		0x74,0x32,0x00,0x09,0x07,0x00,0x00,0x66,0x78,0x6C,0x6D,0x73,
		0x46,0x6C,0x61,0x67,0x00,0x24,0x07,0x00,0x00,0x69,0x64,0x65,
		0x6E,0x74,0x46,0x6C,0x61,0x67,0x00,0x3F,0x07,0x00,0x00,0x69,
		0x64,0x65,0x6E,0x74,0x33,0x46,0x6C,0x61,0x67,0x00,0x5B,0x07,
		0x00,0x00,0x72,0x65,0x73,0x65,0x74,0x46,0x6C,0x61,0x67,0x00,
		0x76,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,
		0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0x96,0x07,0x00,0x00,0x64,
		0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x00,0xB1,0x07,0x00,
		0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x32,0x00,
		0xCD,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,
		0x72,0x33,0x00,0xE9,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,
		0x43,0x74,0x6E,0x72,0x34,0x00,0x05,0x08,0x00,0x00,0x64,0x65,
		0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x35,0x00,0x21,0x08,0x00,
		0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x49,0x64,
		0x6E,0x65,0x74,0x00,0x41,0x08,0x00,0x00,0x64,0x65,0x6C,0x61,
		0x79,0x43,0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,
		0x6D,0x69,0x74,0x00,0x66,0x08,0x00,0x00,0x6C,0x65,0x64,0x5F,
		0x76,0x61,0x6C,0x75,0x65,0x00,0x81,0x08,0x00,0x00,0x63,0x6F,
		0x65,0x66,0x73,0x5F,0x64,0x65,0x63,0x00,0x9C,0x08,0x00,0x00,
		0x69,0x6E,0x52,0x64,0x61,0x74,0x61,0x00,0xB5,0x08,0x00,0x00,
		0x69,0x6E,0x4C,0x64,0x61,0x74,0x61,0x00,0xCE,0x08,0x00,0x00,
		0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x00,0xE7,0x08,0x00,0x00,
		0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x41,0x72,0x72,0x61,0x79,
		0x31,0x00,0x06,0x09,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x25,0x09,0x00,0x00,
		0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,
		0x5F,0x31,0x00,0x45,0x09,0x00,0x00,0x75,0x6E,0x31,0x00,0x5A,
		0x09,0x00,0x00,0x6D,0x75,0x31,0x00,0x6F,0x09,0x00,0x00,0x79,
		0x6E,0x31,0x00,0x84,0x09,0x00,0x00,0x65,0x72,0x72,0x31,0x00,
		0x9A,0x09,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,
		0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0xBA,0x09,0x00,0x00,0x75,
		0x6E,0x32,0x00,0xCF,0x09,0x00,0x00,0x6D,0x75,0x32,0x00,0xE4,
		0x09,0x00,0x00,0x6D,0x75,0x32,0x64,0x65,0x66,0x00,0xFC,0x09,
		0x00,0x00,0x79,0x6E,0x32,0x00,0x11,0x0A,0x00,0x00,0x65,0x72,
		0x72,0x32,0x00,0x27,0x0A,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,
		0x52,0x66,0x69,0x6C,0x5F,0x6E,0x00,0x44,0x0A,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x52,0x66,0x69,0x6C,0x00,0x5F,0x0A,0x00,
		0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,
		0x72,0x5F,0x33,0x00,0x7F,0x0A,0x00,0x00,0x6D,0x75,0x33,0x00,
		0x94,0x0A,0x00,0x00,0x79,0x6E,0x33,0x00,0xA9,0x0A,0x00,0x00,
		0x65,0x72,0x72,0x33,0x00,0xBF,0x0A,0x00,0x00,0x79,0x66,0x69,
		0x6C,0x61,0x33,0x00,0xD7,0x0A,0x00,0x00,0x79,0x6E,0x32,0x61,
		0x72,0x72,0x61,0x79,0x00,0xF1,0x0A,0x00,0x00,0x6E,0x6F,0x69,
		0x73,0x65,0x31,0x00,0x09,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,
		0x65,0x32,0x00,0x21,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,
		0x33,0x00,0x39,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x52,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x69,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x46,0x6C,0x61,
		0x67,0x00,0x84,0x0B,0x00,0x00,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0xA1,0x0B,0x00,0x00,0x61,0x6C,
		0x70,0x68,0x61,0x00,0x00,0x00,0x00,0x00;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.var =
		0x30,0x00,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x01,0x00;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end-.LN_handle_LED;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end-.LN_readDAIpin;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end-.LN_flagTest;
	.var = .LN_process;
	.var = .LN._process.end-.LN_process;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section .annotations SHT_DEBUGINFO;

	.align 1;
.epcannot:
	.type .epcannot,STT_OBJECT;
	.var =
		0x01,0x00,0x00,0x00,0xB0,0x12,0x00,0x00,0x2A,0x00,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x0C,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x54,0x00,0x00,0x00,0x16,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x4D,0x6F,0x6E,0x20,0x4D,0x61,
		0x79,0x20,0x30,0x38,0x20,0x31,0x38,0x3A,0x33,0x32,0x3A,0x30,
		0x35,0x20,0x32,0x30,0x32,0x33,0x0A,0x00,0x36,0x00,0x00,0x00,
		0x61,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x2D,0x63,0x20,0x2D,0x66,0x69,0x6C,0x65,0x2D,0x61,0x74,0x74,
		0x72,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x4E,0x61,0x6D,
		0x65,0x3D,0x46,0x78,0x4C,0x4D,0x53,0x5F,0x77,0x69,0x74,0x68,
		0x5F,0x41,0x33,0x5F,0x6D,0x69,0x6E,0x64,0x65,0x6E,0x5F,0x68,
		0x61,0x74,0x5F,0x64,0x65,0x63,0x20,0x2D,0x4F,0x20,0x2D,0x4F,
		0x76,0x31,0x30,0x30,0x20,0x2D,0x67,0x20,0x2D,0x73,0x61,0x76,
		0x65,0x2D,0x74,0x65,0x6D,0x70,0x73,0x20,0x2D,0x70,0x61,0x74,
		0x68,0x2D,0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x44,0x65,0x62,
		0x75,0x67,0x20,0x2D,0x45,0x44,0x20,0x2D,0x6E,0x6F,0x2D,0x6D,
		0x75,0x6C,0x74,0x69,0x6C,0x69,0x6E,0x65,0x20,0x2D,0x64,0x6F,
		0x75,0x62,0x6C,0x65,0x2D,0x73,0x69,0x7A,0x65,0x2D,0x33,0x32,
		0x20,0x2D,0x66,0x6C,0x61,0x67,0x73,0x2D,0x63,0x6F,0x6D,0x70,
		0x69,0x6C,0x65,0x72,0x20,0x2D,0x2D,0x64,0x69,0x61,0x67,0x5F,
		0x77,0x61,0x72,0x6E,0x69,0x6E,0x67,0x2C,0x69,0x6D,0x70,0x6C,
		0x69,0x63,0x69,0x74,0x5F,0x66,0x75,0x6E,0x63,0x5F,0x64,0x65,
		0x63,0x6C,0x20,0x2D,0x77,0x61,0x72,0x6E,0x2D,0x70,0x72,0x6F,
		0x74,0x6F,0x73,0x20,0x2D,0x66,0x6F,0x72,0x63,0x65,0x2D,0x63,
		0x69,0x72,0x63,0x62,0x75,0x66,0x20,0x2D,0x70,0x72,0x6F,0x63,
		0x20,0x41,0x44,0x53,0x50,0x2D,0x32,0x31,0x33,0x36,0x34,0x20,
		0x2D,0x6F,0x20,0x44,0x65,0x62,0x75,0x67,0x5C,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x64,0x6F,0x6A,0x20,0x2D,0x4D,0x4D,
		0x00,0x60,0x00,0x00,0x00,0x7C,0x01,0x00,0x00,0x16,0x00,0x00,
		0x00,0x2E,0x00,0x00,0x00,0x41,0x44,0x53,0x50,0x2D,0x32,0x31,
		0x33,0x36,0x34,0x00,0x6D,0x01,0x00,0x00,0xAE,0x01,0x00,0x00,
		0x16,0x00,0x00,0x00,0x2D,0x00,0x00,0x00,0x30,0x2E,0x32,0x00,
		0x88,0x01,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x90,0x01,0x00,0x00,0x7D,0x02,0x00,0x00,0x06,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC8,0x01,
		0x00,0x00,0x9A,0x01,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,
		0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0xBE,0x01,0x00,0x00,
		0xEF,0x01,0x00,0x00,0x9A,0x01,0x00,0x00,0x34,0x00,0x00,0x00,
		0x7B,0x72,0x31,0x2D,0x72,0x32,0x2C,0x72,0x38,0x2C,0x72,0x31,
		0x32,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,0xD4,
		0x01,0x00,0x00,0x19,0x02,0x00,0x00,0x9A,0x01,0x00,0x00,0x33,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xFB,0x01,0x00,0x00,0x6A,0x02,0x00,0x00,0x05,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x02,0x00,
		0x00,0x05,0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0x29,0x02,0x00,0x00,0x53,
		0x02,0x00,0x00,0x05,0x02,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,
		0x72,0x30,0x2C,0x72,0x32,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,
		0x63,0x7D,0x00,0x3F,0x02,0x00,0x00,0x7D,0x02,0x00,0x00,0x05,
		0x02,0x00,0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0x5F,0x02,0x00,0x00,0x5B,0x02,0x00,
		0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x97,0x02,0x00,0x00,0x69,0x02,0x00,0x00,0x30,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0x8D,
		0x02,0x00,0x00,0xB4,0x02,0x00,0x00,0x69,0x02,0x00,0x00,0x34,
		0x00,0x00,0x00,0x7B,0x72,0x30,0x2C,0x69,0x31,0x32,0x2C,0x61,
		0x63,0x63,0x7D,0x00,0xA3,0x02,0x00,0x00,0xDE,0x02,0x00,0x00,
		0x69,0x02,0x00,0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,
		0x65,0x73,0x73,0x2E,0x63,0x00,0xC0,0x02,0x00,0x00,0x8C,0x00,
		0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0xF8,0x02,0x00,0x00,0xCA,0x02,0x00,0x00,0x30,0x00,
		0x00,0x00,0x0C,0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,
		0xEE,0x02,0x00,0x00,0x3F,0x03,0x00,0x00,0xCA,0x02,0x00,0x00,
		0x34,0x00,0x00,0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,
		0x34,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,
		0x69,0x31,0x32,0x2C,0x6D,0x34,0x2C,0x73,0x30,0x2C,0x73,0x32,
		0x2C,0x73,0x34,0x2C,0x61,0x63,0x63,0x2C,0x6D,0x63,0x63,0x2C,
		0x73,0x63,0x63,0x2C,0x6C,0x63,0x6E,0x74,0x72,0x7D,0x00,0x04,
		0x03,0x00,0x00,0x70,0x03,0x00,0x00,0xCA,0x02,0x00,0x00,0x35,
		0x00,0x00,0x00,0x7B,0x72,0x33,0x2C,0x72,0x35,0x2D,0x72,0x37,
		0x2C,0x72,0x31,0x33,0x2C,0x69,0x30,0x2D,0x69,0x31,0x2C,0x69,
		0x33,0x2C,0x6C,0x33,0x2C,0x62,0x33,0x2C,0x6D,0x30,0x7D,0x00,
		0x4B,0x03,0x00,0x00,0xF8,0x03,0x00,0x00,0xCA,0x02,0x00,0x00,
		0x36,0x00,0x00,0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,
		0x34,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,
		0x69,0x31,0x32,0x2D,0x69,0x31,0x33,0x2C,0x62,0x34,0x2C,0x62,
		0x31,0x32,0x2D,0x62,0x31,0x33,0x2C,0x6D,0x34,0x2C,0x6D,0x31,
		0x32,0x2C,0x73,0x30,0x2D,0x73,0x31,0x35,0x2C,0x75,0x73,0x74,
		0x61,0x74,0x31,0x2D,0x75,0x73,0x74,0x61,0x74,0x34,0x2C,0x61,
		0x63,0x63,0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,0x63,0x2C,0x62,
		0x74,0x66,0x2C,0x6C,0x63,0x6E,0x74,0x72,0x2C,0x73,0x6D,0x72,
		0x66,0x2C,0x73,0x6D,0x72,0x62,0x2C,0x73,0x61,0x63,0x63,0x2C,
		0x73,0x6D,0x63,0x63,0x2C,0x73,0x73,0x63,0x63,0x2C,0x73,0x62,
		0x74,0x66,0x7D,0x00,0x7C,0x03,0x00,0x00,0x3C,0x04,0x00,0x00,
		0xCA,0x02,0x00,0x00,0x37,0x00,0x00,0x00,0x7B,0x72,0x31,0x2D,
		0x72,0x32,0x2C,0x72,0x34,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,
		0x2D,0x72,0x31,0x33,0x7D,0x00,0x04,0x04,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x1E,0x04,0x00,0x00,
		0xD8,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x66,0x04,0x00,0x00,0x28,0x04,0x00,0x00,
		0x20,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x48,0x04,0x00,0x00,0xDB,0x00,0x00,0x00,0x06,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7A,0x04,
		0x00,0x00,0x52,0x04,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0xE4,0x05,0x00,0x00,0x52,0x04,
		0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,
		0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,
		0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x00,0x86,0x04,0x00,0x00,0xF4,0x05,0x00,0x00,
		0x52,0x04,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
		0x40,0x06,0x00,0x00,0x52,0x04,0x00,0x00,0x1C,0x00,0x00,0x00,
		0x01,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x04,0x06,0x00,0x00,0xDB,0x00,0x00,0x00,0x06,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x22,0x06,0x00,0x00,
		0xE0,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x54,0x06,0x00,0x00,0x2C,0x06,0x00,0x00,
		0x0B,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
		0xBE,0x07,0x00,0x00,0x2C,0x06,0x00,0x00,0x38,0x00,0x00,0x00,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,
		0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,
		0x69,0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,
		0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,
		0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,
		0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x60,0x06,
		0x00,0x00,0xCE,0x07,0x00,0x00,0x2C,0x06,0x00,0x00,0x16,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0x1A,0x08,0x00,0x00,0x2C,0x06,
		0x00,0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xDE,0x07,0x00,0x00,
		0xE0,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0xFC,0x07,0x00,0x00,0xE5,0x00,0x00,0x00,0x06,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2E,0x08,
		0x00,0x00,0x06,0x08,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0x22,0x0A,0x00,0x00,0x06,0x08,
		0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,
		0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,
		0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x61,0x6C,0x75,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,
		0x61,0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x3A,0x08,
		0x00,0x00,0x32,0x0A,0x00,0x00,0x06,0x08,0x00,0x00,0x16,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0x7E,0x0A,0x00,0x00,0x06,0x08,
		0x00,0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x42,0x0A,0x00,0x00,
		0xE5,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x60,0x0A,0x00,0x00,0x20,0x02,0x00,0x00,0x03,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x0A,
		0x00,0x00,0x6A,0x0A,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,
		0x00,0x00,0x03,0x00,0x00,0x00,0xA2,0x0A,0x00,0x00,0x6A,0x0A,
		0x00,0x00,0x10,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0xAE,0x0A,
		0x00,0x00,0x6A,0x0A,0x00,0x00,0x14,0x00,0x00,0x00,0xCE,0x0A,
		0x00,0x00,0x6A,0x0A,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x0D,0x00,0x00,0x6A,0x0A,
		0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,
		0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,
		0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x6D,0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,
		0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,
		0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,
		0x72,0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,
		0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,0xDA,0x0A,0x00,0x00,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x07,0x0D,0x00,
		0x00,0x20,0x02,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0x25,0x0D,0x00,0x00,0xE9,0x01,0x00,0x00,0x03,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x57,
		0x0D,0x00,0x00,0x2F,0x0D,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x67,0x0D,0x00,0x00,0x2F,
		0x0D,0x00,0x00,0x10,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x73,
		0x0D,0x00,0x00,0x2F,0x0D,0x00,0x00,0x14,0x00,0x00,0x00,0x93,
		0x0D,0x00,0x00,0x2F,0x0D,0x00,0x00,0x13,0x00,0x00,0x00,0x03,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x00,0x00,0x2F,
		0x0D,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,
		0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,
		0x75,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,
		0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,
		0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,
		0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,
		0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,
		0x20,0x6D,0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,
		0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,
		0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,
		0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,
		0x65,0x72,0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,
		0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,0x9F,0x0D,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xCC,0x0F,
		0x00,0x00,0xE9,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x2E,0x63,0x00,0xEA,0x0F,0x00,0x00,0xC4,0x01,0x00,0x00,
		0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x1C,0x10,0x00,0x00,0xF4,0x0F,0x00,0x00,0x0B,0x00,0x00,0x00,
		0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x2C,0x10,0x00,0x00,
		0xF4,0x0F,0x00,0x00,0x10,0x00,0x00,0x00,0x63,0x00,0x00,0x00,
		0x38,0x10,0x00,0x00,0xF4,0x0F,0x00,0x00,0x14,0x00,0x00,0x00,
		0x58,0x10,0x00,0x00,0xF4,0x0F,0x00,0x00,0x13,0x00,0x00,0x00,
		0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0xF4,0x0F,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,
		0x6C,0x75,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,
		0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,
		0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,
		0x6E,0x20,0x6D,0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,
		0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x36,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,
		0x67,0x65,0x72,0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x20,0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,0x64,0x10,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x91,
		0x12,0x00,0x00,0xC4,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcannot.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 1;
_i1:
	.global _i1;
	.type _i1,STT_OBJECT;
	.var ..TW0[1] =
		 0x00000000;
._i1.end:
	.align 1;
_i2:
	.global _i2;
	.type _i2,STT_OBJECT;
	.var ..TW1[1] =
		 0x00000000;
._i2.end:
	.align 1;
_i3:
	.global _i3;
	.type _i3,STT_OBJECT;
	.var ..TW2[1] =
		 0x00000000;
._i3.end:
	.align 1;
_m1:
	.global _m1;
	.type _m1,STT_OBJECT;
	.var ..TW3[1] =
		 0x00000000;
._m1.end:
	.align 1;
_m2:
	.global _m2;
	.type _m2,STT_OBJECT;
	.var ..TW4[1] =
		 0x00000000;
._m2.end:
	.align 1;
_m3:
	.global _m3;
	.type _m3,STT_OBJECT;
	.var ..TW5[1] =
		 0x00000000;
._m3.end:
	.align 1;
_i_dec:
	.global _i_dec;
	.type _i_dec,STT_OBJECT;
	.var ..TW6[1] =
		 0x00000000;
._i_dec.end:
	.align 1;
_fxlmsFlag:
	.global _fxlmsFlag;
	.type _fxlmsFlag,STT_OBJECT;
	.var ..TW7[1] =
		 0x00000000;
._fxlmsFlag.end:
	.align 1;
_identFlag:
	.global _identFlag;
	.type _identFlag,STT_OBJECT;
	.var ..TW8[1] =
		 0x00000000;
._identFlag.end:
	.align 1;
_ident3Flag:
	.global _ident3Flag;
	.type _ident3Flag,STT_OBJECT;
	.var ..TW9[1] =
		 0x00000000;
._ident3Flag.end:
	.align 1;
_resetFlag:
	.global _resetFlag;
	.type _resetFlag,STT_OBJECT;
	.var ..TW10[1] =
		 0x00000001;
._resetFlag.end:
	.align 1;
_delayCtnrLimit:
	.global _delayCtnrLimit;
	.type _delayCtnrLimit,STT_OBJECT;
	.var ..TW11[1] =
		 0x000009C4;
._delayCtnrLimit.end:
	.align 1;
_delayCtnr:
	.global _delayCtnr;
	.type _delayCtnr,STT_OBJECT;
	.var ..TW12[1] =
		 0x00000000;
._delayCtnr.end:
	.align 1;
_delayCtnr2:
	.global _delayCtnr2;
	.type _delayCtnr2,STT_OBJECT;
	.var ..TW13[1] =
		 0x00000000;
._delayCtnr2.end:
	.align 1;
_delayCtnr3:
	.global _delayCtnr3;
	.type _delayCtnr3,STT_OBJECT;
	.var ..TW14[1] =
		 0x00000000;
._delayCtnr3.end:
	.align 1;
_delayCtnr4:
	.global _delayCtnr4;
	.type _delayCtnr4,STT_OBJECT;
	.var ..TW15[1] =
		 0x00000000;
._delayCtnr4.end:
	.align 1;
_delayCtnr5:
	.global _delayCtnr5;
	.type _delayCtnr5,STT_OBJECT;
	.var ..TW16[1] =
		 0x00000000;
._delayCtnr5.end:
	.align 1;
_delayCtnrIdnet:
	.global _delayCtnrIdnet;
	.type _delayCtnrIdnet,STT_OBJECT;
	.var ..TW17[1] =
		 0x00000000;
._delayCtnrIdnet.end:
	.align 1;
_delayCtnrIdnetLimit:
	.global _delayCtnrIdnetLimit;
	.type _delayCtnrIdnetLimit,STT_OBJECT;
	.var ..TW18[1] =
		 0x0007A120;
._delayCtnrIdnetLimit.end:
	.align 1;
_led_value:
	.global _led_value;
	.type _led_value,STT_OBJECT;
	.var ..TW19[1] =
		 0x00000000;
._led_value.end:

	.section/pm/DOUBLE32 seg_pmda;

	.align 4;
_coefs_dec:
	.global _coefs_dec;
	.type _coefs_dec,STT_OBJECT;
	.var ..TW20[51] =
		 0xBBD794A7, 0xBD0203E6, 0xBB6A0770, 0xBBEB5F5F,
		 0xBAFB86F4, 0x3B47C0F4, 0x3C0BA83F, 0x3C53F184,
		 0x3C785D74, 0x3C6AAB04, 0x3C2454DE, 0x3B290471,
		 0xBBE53EB4, 0xBC8AB4FA, 0xBCCDE5D2, 0xBCF0AE53,
		 0xBCE36D22, 0xBC9B90EB, 0xBB3BA12B, 0x3CA2120E,
		 0x3D40A17B, 0x3D9BA2BE, 0x3DD3C686, 0x3E00EC31,
		 0x3E100D5F, 0x3E155476, 0x3E100D5F, 0x3E00EC31,
		 0x3DD3C686, 0x3D9BA2BE, 0x3D40A17B, 0x3CA2120E,
		 0xBB3BA12B, 0xBC9B90EB, 0xBCE36D22, 0xBCF0AE53,
		 0xBCCDE5D2, 0xBC8AB4FA, 0xBBE53EB4, 0x3B290471,
		 0x3C2454DE, 0x3C6AAB04, 0x3C785D74, 0x3C53F184,
		 0x3C0BA83F, 0x3B47C0F4, 0xBAFB86F4, 0xBBEB5F5F,
		 0xBB6A0770, 0xBD0203E6, 0xBBD794A7;
._coefs_dec.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 1;
_mu1:
	.global _mu1;
	.type _mu1,STT_OBJECT;
	.var ..TW21[1] =
		 0x38D1B717;
._mu1.end:
	.align 1;
_yn1:
	.global _yn1;
	.type _yn1,STT_OBJECT;
	.var ..TW22[1] =
		 0x00000000;
._yn1.end:
	.align 1;
_err1:
	.global _err1;
	.type _err1,STT_OBJECT;
	.var ..TW23[1] =
		 0x00000000;
._err1.end:
	.align 1;
_mu2:
	.global _mu2;
	.type _mu2,STT_OBJECT;
	.var ..TW24[1] =
		 0x3E4CCCCD;
._mu2.end:
	.align 1;
_mu2def:
	.global _mu2def;
	.type _mu2def,STT_OBJECT;
	.var ..TW25[1] =
		 0x3E4CCCCD;
._mu2def.end:
	.align 1;
_yn2:
	.global _yn2;
	.type _yn2,STT_OBJECT;
	.var ..TW26[1] =
		 0x00000000;
._yn2.end:
	.align 1;
_err2:
	.global _err2;
	.type _err2,STT_OBJECT;
	.var ..TW27[1] =
		 0x00000000;
._err2.end:
	.align 1;
_inputRfil_n:
	.global _inputRfil_n;
	.type _inputRfil_n,STT_OBJECT;
	.var ..TW28[1] =
		 0x00000000;
._inputRfil_n.end:
	.align 1;
_mu3:
	.global _mu3;
	.type _mu3,STT_OBJECT;
	.var ..TW29[1] =
		 0x38D1B717;
._mu3.end:
	.align 1;
_yn3:
	.global _yn3;
	.type _yn3,STT_OBJECT;
	.var ..TW30[1] =
		 0x00000000;
._yn3.end:
	.align 1;
_err3:
	.global _err3;
	.type _err3,STT_OBJECT;
	.var ..TW31[1] =
		 0x00000000;
._err3.end:
	.align 1;
_yfila3:
	.global _yfila3;
	.type _yfila3,STT_OBJECT;
	.var ..TW32[1] =
		 0x00000000;
._yfila3.end:
	.align 1;
_noiseFlag:
	.global _noiseFlag;
	.type _noiseFlag,STT_OBJECT;
	.var ..TW33[1] =
		 0x00000000;
._noiseFlag.end:
	.align 1;
_RightInPrev:
	.global _RightInPrev;
	.type _RightInPrev,STT_OBJECT;
	.var ..TW34[1] =
		 0x00000000;
._RightInPrev.end:
	.align 1;
_alpha:
	.global _alpha;
	.type _alpha,STT_OBJECT;
	.var ..TW35[1] =
		 0x3727C5AC;
._alpha.end:

	.align 4;
	.var _input1R[101];
	.weak _input1R;
	.align 4;
	.var _input1L[101];
	.weak _input1L;
	.align 4;
	.var _input2R[101];
	.weak _input2R;
	.align 4;
	.var _input2L[101];
	.weak _input2L;
	.align 4;
	.var _input3R[101];
	.weak _input3R;
	.align 4;
	.var _input3L[101];
	.weak _input3L;
	.align 4;
	.var _input1R2[101];
	.weak _input1R2;
	.align 4;
	.var _input2R2[101];
	.weak _input2R2;
	.align 4;
	.var _inputR[52];
	.weak _inputR;
	.align 4;
	.var _inputL[52];
	.weak _inputL;
	.align 4;
	.var _noiseN[52];
	.weak _noiseN;
	.align 1;
	.var _j[1];
	.weak _j;
	.align 1;
	.var _k[1];
	.weak _k;
	.align 1;
	.var _k_input[1];
	.weak _k_input;
	.align 1;
	.var _ix[1];
	.weak _ix;
	.align 1;
	.var _out_1[1];
	.weak _out_1;
	.align 1;
	.var _out_2[1];
	.weak _out_2;
	.align 1;
	.var _l[1];
	.weak _l;
	.align 1;
	.var _out_test1[1];
	.weak _out_test1;
	.align 1;
	.var _out_test2[1];
	.weak _out_test2;
	.align 1;
	.var _inRdata[1];
	.weak _inRdata;
	.align 1;
	.var _inLdata[1];
	.weak _inLdata;
	.align 1;
	.var _inNoise[1];
	.weak _inNoise;
	.align 2;
	.var _inNoiseArray1[100];
	.weak _inNoiseArray1;
	.align 2;
	.var _inNoiseArray3[100];
	.weak _inNoiseArray3;
	.align 2;
	.var _coefs_filter_1[100];
	.weak _coefs_filter_1;
	.align 2;
	.var _un1[100];
	.weak _un1;
	.align 2;
	.var _coefs_filter_2[100];
	.weak _coefs_filter_2;
	.align 2;
	.var _un2[100];
	.weak _un2;
	.align 2;
	.var _inputRfil[101];
	.weak _inputRfil;
	.align 2;
	.var _coefs_filter_3[100];
	.weak _coefs_filter_3;
	.align 2;
	.var _yn2array[101];
	.weak _yn2array;
	.align 2;
	.var _noise1[101];
	.weak _noise1;
	.align 2;
	.var _noise2[101];
	.weak _noise2;
	.align 2;
	.var _noise3[101];
	.weak _noise3;
	.align 1;
	.var _noise_n[1];
	.weak _noise_n;
	.align 2;
	.var _noise[2000];
	.weak _noise;

	.extern _isProcessing;
	.type _isProcessing,STT_OBJECT;
	.extern _rightIn;
	.type _rightIn,STT_OBJECT;
	.extern _leftIn;
	.type _leftIn,STT_OBJECT;
	.extern _rightOut1;
	.type _rightOut1,STT_OBJECT;
	.extern _leftOut1;
	.type _leftOut1,STT_OBJECT;
	.extern _rightOut2;
	.type _rightOut2,STT_OBJECT;
	.extern _leftOut2;
	.type _leftOut2,STT_OBJECT;
	.extern _rightOut3;
	.type _rightOut3,STT_OBJECT;
	.extern _leftOut3;
	.type _leftOut3,STT_OBJECT;
