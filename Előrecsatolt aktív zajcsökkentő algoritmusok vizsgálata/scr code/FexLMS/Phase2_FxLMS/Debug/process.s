	.file "process.c";

//  Compilation time: Mon Nov 20 18:30:36 2023


//  Compiler options: -c -file-attr ProjectName=FexLMS_with_A3 -O -Ov100 -g -save-temps -path-output Debug -ED -no-multiline -double-size-32 -flags-compiler --diag_warning,implicit_func_decl -warn-protos -force-circbuf -proc ADSP-21364 -o Debug\process.doj -MM

//  Architecture: ADSP-21364

//  Silicon revision: 0.2

	.section/pm/DOUBLE32 seg_pmco;

.epctext:
_handle_LED:
.LN_handle_LED:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r1-r2,r8,r12,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":607
	modify(i7,-2); 
// Diagnostic: Optimizer now optimizing for speed
	r2=m13; 
	r8=r2+1, r12=i6; 
.LN1:
// line 610
	r1=-2; 
	r12=r12+r1, dm(-2,i6)=r4; 
	dm(6144)=r2; 
	dm(6168)=r12; 
	dm(6169)=r8; 
	dm(6170)=r8; 
	dm(6161)=r8; 
.LN2:
// line 615
	r2=4194304; 
	dm(6162)=r8; 
.LN3:
// line 617
	r12=871; 
	dm(6160)=r2; 
	dm(6144)=r12; 
.LN4:
// line 618
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._handle_LED.end:
._handle_LED.end:
	.global _handle_LED;
	.type _handle_LED,STT_FUNC;

_readDAIpin:
.LN_readDAIpin:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,r2,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":588
	modify(i7,-2); 
.LN5:
// line 591
		f2 = flags;
	
	r2=dm(9401); 
.LN6:
// line 600
	r0=r2 and r4; 
.LN7:
// line 602
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._readDAIpin.end:
._readDAIpin.end:
	.global _readDAIpin;
	.type _readDAIpin,STT_FUNC;

_flagTest:
.LN_flagTest:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":573
	modify(i7,-2); 
.LN8:
// line 576
		 r2 = flags;
	
.LN9:
// line 582
	r0=r4 and r2; 
.LN10:
// line 584
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._flagTest.end:
._flagTest.end:
	.global _flagTest;
	.type _flagTest,STT_FUNC;

_process:
.LN_process:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 14 words
//
//   Scratch registers used:{r0-r2,r4,r8,r12,i4,i12,m4,s0,s2,s7,acc,mcc,scc,lcntr}
//
//   Call preserved registers used:{r3,r5-r7,r9,r13,i0-i3,l3,b3,m0}
//
//   Registers clobbered by function calls:{r0-r2,r4,r8,r12,i4,i12-i13,b4,b12-b13,m4,m12,s0-s15,ustat1-ustat4,acc,mcc,scc,btf,lcntr,smrf,smrb,sacc,smcc,sscc,sbtf}
//
//   Registers used in mul add instructions:{r1-r2,r4,r8-r9,r12-r13}
//-------------------------------------------------------------------
//-------------------------------------------------------------------
 // Original Loop at "process.c" line 265 col 6 --  unrolled
//-------------------------------------------------------------------
// line "process.c":172
	modify(i7,-14); 
	r2=b3; 
	dm(-9,i6)=r2; 
	r2=m0; 
	dm(-8,i6)=r2; 
	r2=i0; 
	dm(-7,i6)=r2; 
	r2=i1; 
	dm(-6,i6)=r2; 
	r2=i2; 
	dm(-5,i6)=r2; 
	r2=i3; 
	dm(-15,i6)=r3; 
	dm(-14,i6)=r5; 
	dm(-13,i6)=r6; 
	dm(-12,i6)=r7; 
	dm(-11,i6)=r9; 
	dm(-10,i6)=r13; 
	dm(-4,i6)=r2; 
	r6=m14; 
// Diagnostic: Optimizer now optimizing for speed
.LN11:
// line 175
	dm(_isProcessing)=r6; 
.LN12:
// line 190
	r3=524288; 
.LN13:
// line 178
	cjump _setDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	r4=r3; 
.LN14:
// line 190
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN15:
// line 191
	r2=8; 
	r8=dm(_led_value); 
	r2=r8 or r2, r12=m14; 
.LN16:
// line 193
	r1=-9; 
.LN17:
// line 190
	r4=pass r0; 
	if le r2=r8 and r1; 
.LN18:
// line 197
	r4=262144; 
.LN19:
// line 191
	dm(_led_value)=r2; 
.LN20:
// line 197
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN21:
// line 198
	r5=4; 
	r8=dm(_led_value); 
	r2=r8 or r5; 
.LN22:
// line 200
	r3=-5; 
.LN23:
// line 197
	r4=pass r0; 
	if le r2=r8 and r3; 
.LN24:
// line 204
	r4=16; 
.LN25:
// line 198
	dm(_led_value)=r2; 
.LN26:
// line 204
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN27:
// line 205
	r1=2; 
	r7=dm(_led_value); 
	r2=r7 or r1, r4=r5; 
.LN28:
// line 207
	r8=-3; 
.LN29:
// line 204
	r0=pass r0; 
	if eq r2=r7 and r8; 
.LN30:
// line 205
	dm(_led_value)=r2; 
.LN31:
// line 211
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN32:
// line 212
	r7=dm(_led_value); 
	r2=r7 or r12; 
.LN33:
// line 214
	r12=-2; 
.LN34:
// line 211
	r4=pass r0; 
	if eq r2=r7 and r12; 
.LN35:
// line 218
	r4=16; 
.LN36:
// line 212
	dm(_led_value)=r2; 
.LN37:
// line 218
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN38:
	r2=pass r0; 
	if eq jump(pc,.P4L215) (DB); 
	r4=r5; 
	nop; 
.LN39:
	r2=dm(_delayCtnr); 
	r2=r2+1; 
	dm(_delayCtnr)=r2; 
	r4=r5; 

.P4L215:
.LN40:
// line 219
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN41:
	r2=pass r0; 
	if eq jump(pc,.P4L216) (DB); 
.LN42:
// line 220
	r4=524288; 
	nop; 
.LN43:
// line 219
	r2=dm(_delayCtnr2); 
	r2=r2+1; 
	dm(_delayCtnr2)=r2; 
.LN44:
// line 220
	r4=524288; 

.P4L216:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN45:
	r2=pass r0; 
	if gt jump(pc,.P4L5) (DB); 
.LN46:
	r4=262144; 
	nop; 

.P4L6:
.LN47:
// line 221
	r4=524288; 

.P4L238:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN48:
	r2=pass r0; 
	if le jump(pc,.P4L217) (DB); 
.LN49:
// line 222
	r4=262144; 
	nop; 
.LN50:
// line 221
	r2=dm(_delayCtnr4); 
	r2=r2+1; 
	dm(_delayCtnr4)=r2; 
.LN51:
// line 222
	r4=262144; 

.P4L217:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN52:
	r2=pass r0; 
	if le jump(pc,.P4L218) (DB); 
.LN53:
// line 226
	r4=16; 
	nop; 
.LN54:
// line 222
	r2=dm(_delayCtnr5); 
	r2=r2+1; 
	dm(_delayCtnr5)=r2; 
.LN55:
// line 226
	r4=16; 

.P4L218:
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN56:
	r2=pass r0; 
	if ne jump(pc,.P4L219) (DB); 
	r4=r5; 
	nop; 
	r2=dm(_delayCtnr); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L220) (DB); 
	r4=r5; 
	nop; 
.LN57:
// line 228
	r2=dm(_fxlmsFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L16) (DB); 
.LN58:
// line 227
	dm(_delayCtnr)=r2; 
	nop; 
.LN59:
// line 228
	dm(_fxlmsFlag)=r6; 

.P4L13:
	r4=r5; 

.P4L220:

.P4L219:
.LN60:
// line 233
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN61:
	r2=pass r0; 
	if ne jump(pc,.P4L221) (DB); 
.LN62:
// line 241
	r4=262144; 
	nop; 
.LN63:
// line 233
	r2=dm(_delayCtnr2); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L222) (DB); 
.LN64:
// line 241
	r4=262144; 
	nop; 
.LN65:
// line 235
	r2=dm(_identFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L21) (DB); 
.LN66:
// line 234
	dm(_delayCtnr2)=r2; 
	nop; 
.LN67:
// line 235
	dm(_identFlag)=r6; 

.P4L18:
.LN68:
// line 241
	r4=262144; 

.P4L222:

.P4L221:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN69:
	r2=pass r0; 
	if le jump(pc,.P4L223) (DB); 
.LN70:
// line 272
	r4=524288; 
	nop; 
.LN71:
// line 241
	r4=dm(_resetFlag); 
	r2=m14; 
	comp(r4, r2); 
	if ne jump(pc,.P4L224) (DB); 
.LN72:
// line 272
	r4=524288; 
	nop; 
	r4=r2-1; 
.LN73:
// line 243
	r2=dm(_mu2def); 
.LN74:
// line 246
	dm(_err2)=r4; 
.LN75:
// line 245
	dm(_yfila3)=r4; 
.LN76:
// line 244
	dm(_inputRfil_n)=r4; 
.LN77:
// line 242
	dm(_fxlmsFlag)=r4; 
.LN78:
// line 243
	dm(_mu2)=r2; 
.LN79:
// line 247
	bit set mode1 0x200000; nop; 
	i4=_inputH; 
	i0=_coefs_filter_2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L28-1)until lce; 

.P4L27:
//-------------------------------------------------------------------
//   Loop at "process.c" line 247 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
.LN80:
// line 248
	dm(i0,2)=r2; 
.LN81:
// line 249
	dm(i4,2)=r2; 
.LN82:
// line 247
	//end loop .P4L27; 
//-------------------------------------------------------------------
//   End Loop L27
//-------------------------------------------------------------------

.P4L28:

.P4L32:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN83:
// line 251
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray1; 
	i0=_input1R2; 
	r2=m13; 
	lcntr=250, do(pc,.P4L37-1)until lce; 

.P4L36:
//-------------------------------------------------------------------
//   Loop at "process.c" line 251 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN84:
// line 252
	dm(i0,2)=r2; 
.LN85:
// line 253
	dm(i4,2)=r2; 
.LN86:
// line 251
	//end loop .P4L36; 
//-------------------------------------------------------------------
//   End Loop L36
//-------------------------------------------------------------------

.P4L37:

.P4L41:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN87:
// line 252
	dm(m5,i0)=m13; 
.LN88:
// line 253
	dm(m5,i4)=m13; 
.LN89:
// line 256
	bit set mode1 0x200000; nop; 
	i4=_input2R2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L46-1)until lce; 

.P4L45:
//-------------------------------------------------------------------
//   Loop at "process.c" line 256 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 1 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   1 out of    1 (100.0%)
//     dm dag                          used   1 out of    1 (100.0%)
//     pm dag                          used   1 out of    1 (100.0%)
//     shift immediate                 used   1 out of    1 (100.0%)
//     memory access                   used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN90:
// line 257
	dm(i4,2)=r2; 
.LN91:
// line 256
	//end loop .P4L45; 
//-------------------------------------------------------------------
//   End Loop L45
//-------------------------------------------------------------------

.P4L46:

.P4L50:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN92:
// line 257
	dm(m5,i4)=m13; 
.LN93:
// line 261
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray3; 
	i0=_yn2array; 
	r2=m13; 
	lcntr=250, do(pc,.P4L55-1)until lce; 

.P4L54:
//-------------------------------------------------------------------
//   Loop at "process.c" line 261 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN94:
// line 262
	dm(i0,2)=r2; 
.LN95:
// line 263
	dm(i4,2)=r2; 
.LN96:
// line 261
	//end loop .P4L54; 
//-------------------------------------------------------------------
//   End Loop L54
//-------------------------------------------------------------------

.P4L55:

.P4L59:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN97:
// line 262
	dm(m5,i0)=m13; 
.LN98:
// line 263
	dm(m5,i4)=m13; 
.LN99:
// line 265
	bit set mode1 0x200000; nop; 
	i4=_err2arr; 
	i0=_inputRfil; 
	r0=m13; 
.LN100:
	r7=2; 
	r2=r0+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
	r2=r2+r7, dm(i0,2)=r0; 
	r2=r2+r7, dm(i4,2)=r0; 
.LN101:
// line 266
	dm(i0,2)=r0; 
.LN102:
// line 267
	dm(i4,2)=r0; 
.LN103:
// line 266
	dm(i0,2)=r0; 
.LN104:
// line 267
	dm(i4,2)=r0; 
.LN105:
// line 266
	dm(i0,2)=r0; 
.LN106:
// line 267
	dm(i4,2)=r0; 
.LN107:
// line 266
	dm(i0,2)=r0; 
.LN108:
// line 267
	dm(i4,2)=r0; 
.LN109:
// line 266
	dm(i0,2)=r0; 
.LN110:
// line 267
	dm(i4,2)=r0; 
.LN111:
// line 266
	dm(i0,2)=r0; 
.LN112:
// line 267
	dm(i4,2)=r0; 
.LN113:
// line 266
	dm(i0,2)=r0; 
.LN114:
// line 267
	dm(i4,2)=r0; 
.LN115:
// line 266
	dm(i0,2)=r0; 
.LN116:
// line 267
	dm(i4,2)=r0; 
.LN117:
// line 266
	dm(i0,2)=r0; 
.LN118:
// line 267
	dm(i4,2)=r0; 
.LN119:
// line 266
	dm(i0,2)=r0; 
.LN120:
// line 267
	dm(i4,2)=r0; 
.LN121:
// line 266
	dm(i0,2)=r0; 
.LN122:
// line 267
	dm(i4,2)=r0; 
.LN123:
// line 266
	dm(i0,2)=r0; 
.LN124:
// line 267
	dm(i4,2)=r0; 
.LN125:
// line 266
	dm(i0,2)=r0; 
.LN126:
// line 265
	bit clr mode1 0x200000; nop; 
.LN127:
	r2=r2+1, dm(m5,i0)=r4; 
.LN128:
// line 267
	dm(m5,i4)=r4; 
.LN129:
// line 265
	dm(_k)=r2; 
.LN130:
// line 272
	r4=524288; 

.P4L224:

.P4L223:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN131:
	r2=pass r0; 
	if le jump(pc,.P4L65) (DB); 
.LN132:
	r4=262144; 
	nop; 

.P4L66:
.LN133:
// line 279
	r2=dm(_resetFlag); 

.P4L237:
	r2=pass r2; 

.P4L236:

.P4L235:
	if eq jump(pc,.P4L71) (DB); 
.LN134:
	r4=524288; 
	nop; 

.P4L72:
.LN135:
// line 285
	r2=dm(_resetFlag); 
	r2=pass r2; 

.P4L234:

.P4L233:
	if eq jump(pc,.P4L75) (DB); 
.LN136:
	r4=262144; 
	nop; 

.P4L76:
.LN137:
// line 292
	r4=dm(_resetFlag); 
	r2=m14; 

.P4L232:

.P4L231:
	comp(r4, r2); 
	if ne jump(pc,.P4L80) (DB); 
.LN138:
// line 293
	r2=dm(_led_value); 
	nop; 
.LN139:
// line 296
	r4=240; 
	r2=r2 or r4; 

.P4L81:
	r4=m14; 
.LN140:
// line 306
	r6=dm(_identFlag); 
.LN141:
// line 307
	r0=r2 or r4; 
.LN142:
// line 306
	comp(r6, r4); 
	if ne r0=r2 and r12; 
.LN143:
// line 314
	r12=dm(_fxlmsFlag); 
.LN144:
// line 315
	r2=r0 or r1; 
.LN145:
// line 314
	comp(r12, r4); 
	if ne r2=r0 and r8; 
.LN146:
// line 322
	r8=dm(_ident3Flag); 
.LN147:
// line 323
	r12=r2 or r5; 
.LN148:
// line 322
	comp(r8, r4); 
	if ne r12=r2 and r3; 
.LN149:
// line 334
	comp(r6, r4); 
	if eq jump(pc,.P4L82) (DB); 
.LN150:
// line 323
	dm(_led_value)=r12; 
	nop; 
	r2=m14; 
.LN151:
// line 334
	comp(r8, r2); 
	if eq jump(pc,.P4L82); 

.P4L84:
.LN152:
// line 350
	r2=dm(_m1); 
	r2=r2-1; 
.LN153:
// line 351
	r12=pass r2; 
	if ge jump(pc,.P4L225) (DB); 
.LN154:
// line 350
	dm(_m1)=r2; 
.LN155:
// line 355
	r2=dm(_mh); 
.LN156:
// line 353
	r2=499; 
	dm(_m1)=r2; 
.LN157:
// line 355
	r2=dm(_mh); 

.P4L225:
	r2=r2-1; 
.LN158:
// line 356
	r12=pass r2; 
	if ge jump(pc,.P4L226) (DB); 
.LN159:
// line 355
	dm(_mh)=r2; 
.LN160:
// line 361
	r2=dm(_m2); 
.LN161:
// line 358
	r2=50; 
	dm(_mh)=r2; 
.LN162:
// line 361
	r2=dm(_m2); 

.P4L226:
	r2=r2-1; 
.LN163:
// line 362
	r12=pass r2; 
	if ge jump(pc,.P4L227) (DB); 
.LN164:
// line 361
	dm(_m2)=r2; 
.LN165:
// line 367
	r2=dm(_m3); 
.LN166:
// line 364
	r2=1999; 
	dm(_m2)=r2; 
.LN167:
// line 367
	r2=dm(_m3); 

.P4L227:
	r2=r2-1; 
.LN168:
// line 368
	r12=pass r2; 
	if ge jump(pc,.P4L92) (DB); 
.LN169:
// line 367
	dm(_m3)=r2; 
	nop; 
.LN170:
// line 370
	r2=499; 
	dm(_m3)=r2; 

.P4L92:
.LN171:
// line 378
	modify(i7,m7); 
	r3=41; 
	r12=_inputR; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	modify(i7,2); 
.LN172:
	dm(_inRdata)=r0; 
.LN173:
// line 379
	modify(i7,m7); 
	r12=_inputL; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN174:
// line 382
	i1=_inNoiseArray1; 
	r2=dm(_m1); 
.LN175:
// line 383
	r12=pass r2, i4=i1; 
.LN176:
// line 382
	m4=r2; 
.LN177:
// line 381
	r12=dm(_noise_n); 
.LN178:
// line 379
	modify(i7,2); 
.LN179:
	dm(_inLdata)=r0; 
.LN180:
// line 381
	dm(_inNoise)=r12; 
.LN181:
// line 383
	if ne jump(pc,.P4L94) (DB); 
.LN182:
// line 382
	modify(i4,m4); 
	dm(m4,i1)=r12; 
.LN183:
// line 385
	dm(_inNoiseArray1+500)=r12; 

.P4L94:
.LN184:
// line 387
	r2=dm(_m3); 
	i0=_inNoiseArray3; 
.LN185:
// line 388
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L228) (DB); 
.LN186:
// line 387
	dm(m4,i0)=r12; 
.LN187:
// line 396
	r2=dm(_i_tmp); 
.LN188:
// line 390
	dm(_inNoiseArray3+500)=r12; 
.LN189:
// line 396
	r2=dm(_i_tmp); 

.P4L228:
	r2=r2-1; 
.LN190:
// line 397
	r12=pass r2; 
.LN191:
// line 392
	r12=dm(_rightIn); 
.LN192:
// line 397
	if ge jump(pc,.P4L98) (DB); 
.LN193:
// line 396
	dm(_i_tmp)=r2; 
.LN194:
// line 392
	dm(_out_2)=r12; 
.LN195:
// line 399
	r2=99; 
	dm(_i_tmp)=r2; 

.P4L98:
.LN196:
// line 409
	m4=dm(_i_tmp); 
	F1=F0*F0, r2=m4; 
.LN197:
// line 404
	r8=99; 
	r4=pass r2, r12=m14; 
.LN198:
// line 409
	i2=_buff_tmp; 
	if ne r8=r2-1; 
.LN199:
// line 410
	m0=r8; 
.LN200:
// line 409
	dm(m4,i2)=r1; 
.LN201:
// line 410
	r4=1008981770; 
	r13=dm(m0,i2); 
	r5=1120403456; 
	F9=F13*F4; 
	F8=F9*F5; 
	F2=F1*F4, F8=F8-F13; 
	F13=F8*F4; 
	F8=F2*F5, F13=F9-F13; 
	r9=dm(_performance); 
	F1=F8-F1; 
	F8=F1*F4, F4=F9-F13; 
	F2=F2-F8; 
.LN202:
// line 423
	r8=dm(_identFlag); 
	comp(r8, r12); 
	if eq jump(pc,.P4L99) (DB); 
.LN203:
// line 410
	F2=F4+F2; 
	dm(_performance)=r2; 

.P4L100:
.LN204:
// line 453
	r12=dm(_ident3Flag); 
	r2=m14; 
	comp(r12, r2); 
	if eq jump(pc,.P4L105) (DB); 
.LN205:
// line 457
	r5=500; 
	nop; 

.P4L106:
.LN206:
// line 481
	r2=dm(_fxlmsFlag); 
	r12=m14; 
	comp(r2, r12); 
	if eq jump(pc,.P4L111) (DB); 
.LN207:
// line 485
	r2=dm(_m1); 
	r8=dm(_inRdata); 

.P4L112:
.LN208:
// line 540
	r12=dm(_identFlag); 
	r2=m14; 
	comp(r12, r2); 
	if ne jump(pc,.P4L229) (DB); 
.LN209:
// line 544
	r12=dm(_fxlmsFlag); 
	r2=m14; 
.LN210:
// line 541
	m4=dm(_m1); 
	r2=dm(m4,i1); 
	dm(_out_1)=r2; 
.LN211:
// line 544
	r12=dm(_fxlmsFlag); 
	r2=m14; 

.P4L229:
	comp(r12, r2); 
	if ne jump(pc,.P4L230) (DB); 
.LN212:
// line 547
	r12=dm(_ident3Flag); 
	r2=m14; 
.LN213:
// line 545
	r2=dm(_yn2); 
	dm(_out_1)=r2; 
.LN214:
// line 547
	r12=dm(_ident3Flag); 
	r2=m14; 

.P4L230:
	comp(r12, r2); 
	if ne jump(pc,.P4L133); 
.LN215:
// line 548
	m4=dm(_m3); 
	r2=dm(m4,i0); 
	dm(_out_1)=r2; 

.P4L133:
.LN216:
// line 566
	cjump _clrDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN217:
// line 567
	r4=dm(_led_value); 
	r0=m13; 
	cjump _handle_LED (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN218:
// line 571
	jump(pc,.P4L214) (DB); 
.LN219:
// line 570
	dm(_isProcessing)=r0; 
.LN220:
// line 571
	r3=dm(-15,i6); 

.P4L111:
.LN221:
// line 485
	r4=dm(_yfila3); 
	i4=_input1R2; 
	r3=r12-1, m4=r2; 
	F12=F8-F4; 
.LN222:
// line 486
	r2=pass r2; 
.LN223:
// line 485
	dm(m4,i4)=r12; 
.LN224:
// line 486
	if ne jump(pc,.P4L114) (DB); 
.LN225:
// line 483
	dm(_yn2)=r3; 
.LN226:
// line 485
	modify(i4,m4); 
.LN227:
// line 487
	dm(_input1R2+500)=r12; 

.P4L114:
.LN228:
// line 490
	r2=dm(_m2); 
	i2=_input2R2; 
.LN229:
// line 491
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L116) (DB); 
.LN230:
// line 490
	dm(m4,i2)=r12; 
	nop; 
.LN231:
// line 492
	dm(_input2R2+2000)=r12; 

.P4L116:
.LN232:
// line 495
	modify(i7,m7); 
	r5=500; 
	r12=_input1R2; 
	r8=i4; 
	r4=_coefs_filter_1; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN233:
// line 496
	r2=dm(_mh); 
	i4=_inputRfil; 
.LN234:
// line 497
	r12=pass r2, m4=r2; 
.LN235:
// line 495
	modify(i7,2); 
.LN236:
	dm(_inputRfil_n)=r0; 
.LN237:
// line 497
	if ne jump(pc,.P4L118) (DB); 
.LN238:
// line 496
	dm(m4,i4)=r0; 
	modify(i4,m4); 
.LN239:
// line 498
	dm(_inputRfil+51)=r0; 

.P4L118:
.LN240:
// line 501
	modify(i7,m7); 
	r6=51; 
	r12=_inputRfil; 
	r8=i4; 
	r4=_coefs_h; 
	dm(i7,m7)=r6; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN241:
// line 502
	r2=dm(_m2); 
	i4=_inputH; 
.LN242:
// line 503
	r2=pass r2, m4=r2; 
.LN243:
// line 501
	modify(i7,2); 
.LN244:
// line 503
	if ne jump(pc,.P4L120) (DB); 
.LN245:
// line 501
	dm(_inputH_n)=r0; 
.LN246:
// line 502
	dm(m4,i4)=r0; 
.LN247:
// line 504
	dm(_inputH+2000)=r0; 

.P4L120:
.LN248:
// line 506
	modify(i7,m7); 
	r7=2000; 
	r12=_input2R2; 
	dm(i7,m7)=r7; 
	dm(i7,m7)=r12; 
	r2=dm(_m2); 
	r4=_coefs_filter_2; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN249:
// line 508
	r2=dm(_m3); 
	i4=_yn2array; 
.LN250:
// line 506
	F12=-F0, m4=r2; 
.LN251:
// line 509
	r2=pass r2; 
.LN252:
// line 506
	modify(i7,2); 
.LN253:
// line 508
	dm(m4,i4)=r12; 
.LN254:
// line 509
	if ne jump(pc,.P4L122) (DB); 
.LN255:
// line 506
	dm(_yn2)=r12; 
.LN256:
// line 508
	modify(i4,m4); 
.LN257:
// line 510
	dm(_yn2array+500)=r12; 

.P4L122:
.LN258:
// line 513
	modify(i7,m7); 
	r12=_yn2array; 
	r8=i4; 
	r4=_coefs_filter_3; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN259:
// line 517
	r2=dm(_mh); 
	i4=_err2arr; 
.LN260:
// line 518
	r12=pass r2, m4=r2; 
.LN261:
// line 517
	r2=dm(_inLdata); 
.LN262:
// line 513
	modify(i7,2); 
.LN263:
// line 517
	dm(m4,i4)=r2; 
.LN264:
// line 518
	if ne jump(pc,.P4L124) (DB); 
.LN265:
// line 513
	dm(_yfila3)=r0; 
.LN266:
// line 517
	modify(i4,m4); 
.LN267:
// line 519
	dm(_err2arr+51)=r2; 

.P4L124:
.LN268:
// line 527
	r3=r3+1, modify(i7,m7); 
.LN269:
// line 520
	r12=_err2arr; 
	r4=_coefs_h; 
	r8=i4; 
	dm(i7,m7)=r6; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN270:
// line 525
	r12=dm(_performance); 
	r2=dm(_lambda); 
	F12=F12+F2; 
	F2=recips F12; 
	r8=1073741824; 
	r4=dm(_mu2_0); 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
.LN271:
// line 529
	r1=_inputH; 
.LN272:
// line 522
	r5=dm(_m2); 
	F2=F2*F4, F12=F8-F12; 
.LN273:
// line 529
	i2=_coefs_filter_2; 
	r8=r1+r5, i4=i2; 
.LN274:
// line 525
	F12=F12*F2; 
.LN275:
// line 529
	b3=r1; i3=r8; l3=2000; 
.LN276:
// line 525
	F2=F12+F2, r8=dm(i3,m6); 
	dm(_mu2)=r2; 
.LN277:
// line 529
	F1=F0*F2, r12=dm(i2,m6); 
.LN278:
// line 520
	modify(i7,2); 
.LN279:
// line 529
	r4=r5+r7; 
	F2=F1*F8; 
	lcntr=1999, do(pc,.P4L213-1)until lce; 

.P4L207:
//-------------------------------------------------------------------
//   Loop at "process.c" line 527 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 1999
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN280:
// line 527
	r3=r3+1, dm(i4,m6)=r2; 
.LN281:
// line 529
	F2=F1*F12, r12=dm(i2,m6); 
	//end loop .P4L207; 
//-------------------------------------------------------------------
//   End Kernel for Loop L207
//-------------------------------------------------------------------

.P4L213:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	F2=F12+F2, l3=m13; 
.LN282:
// line 527
	dm(_k_input)=r4; 
	jump(pc,.P4L112) (DB); 
	dm(_k)=r3; 
.LN283:
// line 529
	dm(i4,m6)=r2; 

.P4L105:
.LN284:
// line 457
	r2=r2-1, modify(i7,m7); 
.LN285:
// line 462
	r3=r2+1, dm(i7,m7)=r5; 
.LN286:
// line 457
	r6=_inNoiseArray3; 
	r12=dm(_m3); 
	r8=r6+r12, dm(i7,m7)=r6; 
.LN287:
// line 456
	dm(_yn3)=r2; 
.LN288:
// line 457
	r12=dm(m6,i7); 
	r4=_coefs_filter_3; 
	modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN289:
// line 461
	r2=dm(_m3); 
.LN290:
// line 463
	r8=r6+r2; 
	i2=_coefs_filter_3; 
.LN291:
// line 458
	r12=dm(_inRdata); 
.LN292:
// line 463
	b3=r6; i3=r8; l3=500; 
	r4=dm(_mu3); 
.LN293:
// line 458
	F8=F12-F0, r1=dm(i3,m6); 
.LN294:
// line 463
	F6=F8*F4, i4=i2; 
	r4=r2+r5, r12=dm(i2,m6); 
.LN295:
// line 457
	modify(i7,2); 
.LN296:
	dm(_yn3)=r0; 
.LN297:
// line 458
	dm(_err3)=r8; 
.LN298:
// line 463
	F2=F6*F1; 
	lcntr=499, do(pc,.P4L204-1)until lce; 

.P4L198:
//-------------------------------------------------------------------
//   Loop at "process.c" line 462 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN299:
// line 462
	r3=r3+1, dm(i4,m6)=r2; 
.LN300:
// line 463
	F2=F6*F12, r12=dm(i2,m6); 
	//end loop .P4L198; 
//-------------------------------------------------------------------
//   End Kernel for Loop L198
//-------------------------------------------------------------------

.P4L204:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN301:
// line 467
	r8=dm(_delayCtnrIdnet); 
.LN302:
// line 463
	F2=F12+F2, l3=m13; 
.LN303:
// line 469
	r12=dm(_delayCtnrIdnetLimit); 
.LN304:
// line 467
	r8=r8+1, dm(i4,m6)=r2; 
.LN305:
// line 469
	r2=pass r12; 
	if lt r2=r12+1; 
	r2=ashift r2 by -1; 
	comp(r8, r2); 
.LN306:
// line 462
	dm(_k_input)=r4; 
.LN307:
// line 469
	if ne jump(pc,.P4L106) (DB); 
.LN308:
// line 462
	dm(_k)=r3; 
.LN309:
// line 467
	dm(_delayCtnrIdnet)=r8; 
	r2=m13; 
.LN310:
// line 469
	jump(pc,.P4L106) (DB); 
	dm(_delayCtnrIdnet)=r2; 
.LN311:
	dm(_ident3Flag)=r2; 

.P4L99:
.LN312:
// line 426
	r5=500; 
	r2=r12-1, modify(i7,m7); 
.LN313:
// line 431
	r3=r2+1, dm(i7,m7)=r5; 
.LN314:
// line 426
	r4=_coefs_filter_1; 
	r8=i4; 
	r12=_inNoiseArray1; 
.LN315:
// line 425
	dm(_yn1)=r2; 
.LN316:
// line 426
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN317:
// line 432
	r2=_inNoiseArray1; 
.LN318:
// line 430
	r12=dm(_m1); 
.LN319:
// line 432
	r4=r2+r12; 
	i2=_coefs_filter_1; 
.LN320:
// line 427
	r8=dm(_inLdata); 
.LN321:
// line 432
	b3=r2; i3=r4; l3=500; 
	r1=dm(_mu1); 
.LN322:
// line 427
	F2=F8-F0, r8=dm(i3,m6); 
	dm(_err1)=r2; 
.LN323:
// line 432
	F1=F2*F1, i4=i2; 
	r4=r12+r5, r12=dm(i2,m6); 
.LN324:
// line 426
	modify(i7,2); 
.LN325:
	dm(_yn1)=r0; 
.LN326:
// line 432
	F2=F1*F8; 
	lcntr=499, do(pc,.P4L195-1)until lce; 

.P4L189:
//-------------------------------------------------------------------
//   Loop at "process.c" line 431 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN327:
// line 431
	r3=r3+1, dm(i4,m6)=r2; 
.LN328:
// line 432
	F2=F1*F12, r12=dm(i2,m6); 
	//end loop .P4L189; 
//-------------------------------------------------------------------
//   End Kernel for Loop L189
//-------------------------------------------------------------------

.P4L195:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN329:
// line 436
	r8=dm(_delayCtnrIdnet); 
.LN330:
// line 432
	F2=F12+F2, l3=m13; 
.LN331:
// line 438
	r12=dm(_delayCtnrIdnetLimit); 
.LN332:
// line 436
	r8=r8+1, dm(i4,m6)=r2; 
.LN333:
// line 438
	r2=pass r12; 
	if lt r2=r12+1; 
	r2=ashift r2 by -1; 
	comp(r8, r2); 
.LN334:
// line 431
	dm(_k_input)=r4; 
.LN335:
// line 438
	if ne jump(pc,.P4L100) (DB); 
.LN336:
// line 431
	dm(_k)=r3; 
.LN337:
// line 436
	dm(_delayCtnrIdnet)=r8; 
	r2=m13; 
	r12=m14; 
.LN338:
// line 440
	dm(_delayCtnrIdnet)=r2; 
.LN339:
// line 441
	jump(pc,.P4L100) (DB); 
.LN340:
// line 439
	dm(_identFlag)=r2; 
.LN341:
// line 441
	dm(_ident3Flag)=r12; 

.P4L82:
.LN342:
// line 336
	cjump _rand (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN343:
// line 337
	r2=-822083584; 
.LN344:
// line 336
	r12=r0+r0; 
.LN345:
// line 337
	F1=recips F2; 
	r8=1073741824; 
.LN346:
// line 336
	F4=float r12; 
.LN347:
// line 337
	F13=F1*F2; 
	F4=F1*F4, F2=F8-F13; 
	F12=F2*F13; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
	F2=F2*F4, F12=F8-F12; 
	F12=F12*F2; 
	jump(pc,.P4L84) (DB); 
	F2=F12+F2; 
	dm(_noise_n)=r2; 

.P4L80:
.LN348:
// line 302
	jump(pc,.P4L81) (DB); 
	r4=-241; 
	r2=r2 and r4; 

.P4L75:
.LN349:
// line 285
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN350:
	r2=pass r0; 
	if gt jump(pc,.P4L231) (DB); 
.LN351:
// line 292
	r4=dm(_resetFlag); 
	r2=m14; 
.LN352:
// line 285
	r2=dm(_delayCtnr5); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L232) (DB); 
.LN353:
// line 292
	r4=dm(_resetFlag); 
	r2=m14; 
	r2=m13; 
.LN354:
// line 287
	r4=dm(_mu2); 
	r0=r2-1; 
	F4=scalb F4 by r0; 
	jump(pc,.P4L76) (DB); 
.LN355:
// line 286
	dm(_delayCtnr5)=r2; 
.LN356:
// line 287
	dm(_mu2)=r4; 

.P4L71:
.LN357:
// line 279
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN358:
	r2=pass r0; 
	if gt jump(pc,.P4L233) (DB); 
.LN359:
// line 285
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN360:
// line 279
	r2=dm(_delayCtnr4); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L234) (DB); 
.LN361:
// line 285
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN362:
// line 281
	r2=dm(_mu2); 
	F4=F2+F2, r2=m13; 
	jump(pc,.P4L72) (DB); 
	dm(_mu2)=r4; 
.LN363:
// line 280
	dm(_delayCtnr4)=r2; 

.P4L65:
.LN364:
// line 272
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN365:
	r2=pass r0; 
	if gt jump(pc,.P4L235) (DB); 
.LN366:
// line 279
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN367:
// line 272
	r2=dm(_delayCtnr3); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L236) (DB); 
.LN368:
// line 279
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN369:
// line 274
	comp(r2, r6), r2=m13; 
	if ne jump(pc,.P4L70) (DB); 
.LN370:
// line 273
	dm(_delayCtnr3)=r2; 
	nop; 
.LN371:
// line 274
	jump(pc,.P4L237) (DB); 
	dm(_resetFlag)=r2; 
.LN372:
// line 279
	r2=dm(_resetFlag); 

.P4L70:
.LN373:
// line 275
	jump(pc,.P4L66) (DB); 
	r2=m14; 
	dm(_resetFlag)=r2; 

.P4L21:
.LN374:
// line 236
	jump(pc,.P4L18) (DB); 
	r2=m13; 
	dm(_identFlag)=r2; 

.P4L16:
.LN375:
// line 229
	jump(pc,.P4L13) (DB); 
	r2=m13; 
	dm(_fxlmsFlag)=r2; 

.P4L5:
.LN376:
// line 220
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN377:
	r2=pass r0; 
	if le jump(pc,.P4L238) (DB); 
.LN378:
// line 221
	r4=524288; 
	nop; 
.LN379:
// line 220
	r2=dm(_delayCtnr3); 
	jump(pc,.P4L6) (DB); 
	r2=r2+1; 
	dm(_delayCtnr3)=r2; 

.P4L214:
.LN380:
// line 571
	r5=dm(-14,i6); 
	r6=dm(-13,i6); 
	r7=dm(-12,i6); 
	r9=dm(-11,i6); 
	r13=dm(-10,i6); 
	b3=dm(-9,i6); 
	m0=dm(-8,i6); 
	i0=dm(-7,i6); 
	i1=dm(-6,i6); 
	i2=dm(-5,i6); 
	i12=dm(m7,i6); 
	jump(m14,i12) (DB); 
	i3=dm(-4,i6); 
	rframe; 

.LN._process.end:
._process.end:
	.global _process;
	.type _process,STT_FUNC;

	.file_attr ProjectName="FexLMS_with_A3";
	.file_attr FuncName="_handle_LED";
	.file_attr FuncName="_readDAIpin";
	.file_attr FuncName="_flagTest";
	.file_attr FuncName="_process";
	.file_attr Content="CodeData";
.epctext.end:

	.extern _setDAIproc;
	.type _setDAIproc,STT_FUNC;
	.extern _conv_asm;
	.type _conv_asm,STT_FUNC;
	.extern _clrDAIproc;
	.type _clrDAIproc,STT_FUNC;
	.extern _rand;
	.type _rand,STT_FUNC;

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.var =
		0x01,0x11,0x01,0x03,0x08,0x13,0x0B,0x10,0x06,0x43,0x06,0x1B,
		0x08,0x25,0x08,0x42,0x0B,0x00,0x00,0x02,0x24,0x00,0x03,0x08,
		0x3E,0x0B,0x0B,0x0F,0x00,0x00,0x03,0x16,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x00,0x00,0x04,0x13,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x0B,0x0F,0x00,0x00,0x05,0x0D,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x38,0x09,0x00,0x00,0x06,0x15,0x01,0x01,0x13,
		0x03,0x08,0x32,0x0B,0x27,0x0C,0x00,0x00,0x07,0x15,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x27,0x0C,0x49,0x13,0x00,0x00,0x08,
		0x05,0x00,0x03,0x08,0x49,0x13,0x00,0x00,0x09,0x2E,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x3F,
		0x0C,0x20,0x0B,0x00,0x00,0x0A,0x05,0x00,0x03,0x08,0x49,0x13,
		0x02,0x09,0x34,0x0C,0x00,0x00,0x0B,0x0B,0x01,0x01,0x13,0x11,
		0x01,0x12,0x01,0x00,0x00,0x0C,0x2E,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x49,0x13,0x3F,0x0C,
		0x20,0x0B,0x00,0x00,0x0D,0x34,0x00,0x03,0x08,0x32,0x0B,0x49,
		0x13,0x02,0x09,0x2C,0x06,0x3F,0x0C,0x00,0x00,0x0E,0x01,0x01,
		0x01,0x13,0x49,0x13,0x00,0x00,0x0F,0x21,0x00,0x37,0x0F,0x22,
		0x0F,0x2F,0x0F,0x00,0x00,0x00;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.var =
		0xB9,0x0D,0x00,0x00,0x02,0x00;
	.var = .epcabbrev;
	.var =
		0x04,0x01,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x01;
	.var = .epcline;
	.var =
		0x00,0x00,0x00,0x00,0x45,0x3A,0x5C,0x4A,0x61,0x6B,0x61,0x62,
		0x5F,0x54,0x61,0x6D,0x61,0x73,0x5C,0x53,0x7A,0x61,0x6B,0x64,
		0x6F,0x6C,0x67,0x6F,0x7A,0x61,0x74,0x5C,0x32,0x33,0x2E,0x31,
		0x31,0x2E,0x31,0x33,0x20,0x65,0x78,0x4C,0x4D,0x53,0x20,0x2D,
		0x20,0x63,0x68,0x65,0x72,0x72,0x79,0x5C,0x50,0x68,0x61,0x73,
		0x65,0x32,0x5F,0x46,0x78,0x4C,0x4D,0x53,0x00,0x43,0x2F,0x43,
		0x2B,0x2B,0x20,0x43,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,0x20,
		0x3A,0x20,0x53,0x48,0x41,0x52,0x43,0x20,0x76,0x65,0x72,0x73,
		0x69,0x6F,0x6E,0x20,0x37,0x2E,0x32,0x2E,0x30,0x2E,0x30,0x20,
		0x28,0x4D,0x61,0x79,0x20,0x20,0x31,0x20,0x32,0x30,0x30,0x36,
		0x20,0x32,0x33,0x3A,0x31,0x36,0x3A,0x34,0x31,0x29,0x0A,0x20,
		0x20,0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,
		0x63,0x29,0x20,0x31,0x39,0x39,0x37,0x2D,0x32,0x30,0x30,0x36,
		0x20,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x2C,0x20,0x49,0x6E,0x63,0x2E,0x0A,0x20,0x20,
		0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,
		0x29,0x20,0x31,0x39,0x39,0x38,0x2D,0x32,0x30,0x30,0x33,0x20,
		0x45,0x64,0x69,0x73,0x6F,0x6E,0x20,0x44,0x65,0x73,0x69,0x67,
		0x6E,0x20,0x47,0x72,0x6F,0x75,0x70,0x2C,0x20,0x49,0x6E,0x63,
		0x2E,0x0A,0x20,0x20,0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,
		0x74,0x20,0x28,0x63,0x29,0x20,0x31,0x39,0x39,0x37,0x2D,0x31,
		0x39,0x39,0x39,0x20,0x45,0x64,0x69,0x6E,0x62,0x75,0x72,0x67,
		0x68,0x20,0x50,0x6F,0x72,0x74,0x61,0x62,0x6C,0x65,0x20,0x43,
		0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,0x73,0x2C,0x20,0x4C,0x74,
		0x64,0x2E,0x0A,0x00,0x00,0x02,0x62,0x6F,0x6F,0x6C,0x00,0x02,
		0x01,0x02,0x77,0x63,0x68,0x61,0x72,0x5F,0x74,0x00,0x06,0x01,
		0x02,0x63,0x68,0x61,0x72,0x00,0x06,0x01,0x02,0x73,0x69,0x67,
		0x6E,0x65,0x64,0x20,0x63,0x68,0x61,0x72,0x00,0x06,0x01,0x02,
		0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x63,0x68,0x61,
		0x72,0x00,0x08,0x01,0x02,0x73,0x68,0x6F,0x72,0x74,0x00,0x05,
		0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x73,0x68,0x6F,
		0x72,0x74,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,
		0x65,0x64,0x20,0x73,0x68,0x6F,0x72,0x74,0x00,0x07,0x01,0x02,
		0x69,0x6E,0x74,0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,
		0x64,0x20,0x69,0x6E,0x74,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,
		0x69,0x67,0x6E,0x65,0x64,0x20,0x69,0x6E,0x74,0x00,0x07,0x01,
		0x02,0x6C,0x6F,0x6E,0x67,0x00,0x05,0x01,0x02,0x73,0x69,0x67,
		0x6E,0x65,0x64,0x20,0x6C,0x6F,0x6E,0x67,0x00,0x05,0x01,0x02,
		0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x6C,0x6F,0x6E,
		0x67,0x00,0x07,0x01,0x02,0x66,0x6C,0x6F,0x61,0x74,0x00,0x04,
		0x01,0x02,0x64,0x6F,0x75,0x62,0x6C,0x65,0x00,0x04,0x01,0x02,
		0x6C,0x6F,0x6E,0x67,0x20,0x64,0x6F,0x75,0x62,0x6C,0x65,0x00,
		0x04,0x02,0x02,0x76,0x6F,0x69,0x64,0x20,0x2A,0x00,0x01,0x01,
		0x03,0x73,0x69,0x67,0x5F,0x61,0x74,0x6F,0x6D,0x69,0x63,0x5F,
		0x74,0x00,0x01,0xA6,0x01,0x00,0x00,0x03,0x73,0x69,0x7A,0x65,
		0x5F,0x74,0x00,0x01,0xE2,0x01,0x00,0x00,0x03,0x77,0x63,0x68,
		0x61,0x72,0x5F,0x74,0x00,0x01,0xA6,0x01,0x00,0x00,0x04,0x71,
		0x02,0x00,0x00,0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,
		0x01,0xA6,0x01,0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,
		0x00,0x01,0xA6,0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x64,
		0x69,0x76,0x5F,0x74,0x00,0x01,0x4D,0x02,0x00,0x00,0x04,0xA1,
		0x02,0x00,0x00,0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,
		0x01,0xCB,0x01,0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,
		0x00,0x01,0xCB,0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x6C,
		0x64,0x69,0x76,0x5F,0x74,0x00,0x01,0x7D,0x02,0x00,0x00,0x06,
		0xB7,0x02,0x00,0x00,0x00,0x01,0x01,0x00,0x03,0x5F,0x74,0x5F,
		0x61,0x74,0x65,0x78,0x69,0x74,0x5F,0x66,0x70,0x00,0x01,0xAE,
		0x02,0x00,0x00,0x07,0xE3,0x02,0x00,0x00,0x00,0x01,0x01,0xA6,
		0x01,0x00,0x00,0x08,0x00,0x15,0x02,0x00,0x00,0x08,0x00,0x15,
		0x02,0x00,0x00,0x00,0x03,0x5F,0x74,0x5F,0x63,0x6F,0x6D,0x70,
		0x61,0x72,0x65,0x5F,0x66,0x70,0x00,0x01,0xCA,0x02,0x00,0x00,
		0x09,0x35,0x03,0x00,0x00,0x68,0x61,0x6E,0x64,0x6C,0x65,0x5F,
		0x4C,0x45,0x44,0x00,0x01;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end;
	.var =
		0x01,0x01,0x00,0x0A,0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,
		0x65,0x00,0xA6,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,
		0x00,0x00,0x00;
	.var = .LN1;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x00,0x0C,0x72,0x03,0x00,0x00,0x72,0x65,0x61,0x64,0x44,
		0x41,0x49,0x70,0x69,0x6E,0x00,0x01;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end;
	.var =
		0x01,0xA6,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0xA6,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN5;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x00,0x0C,0xAD,0x03,0x00,0x00,0x66,0x6C,0x61,0x67,0x54,
		0x65,0x73,0x74,0x00,0x01;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end;
	.var =
		0x01,0xA6,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0xA6,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN8;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x00,0x09,0xE3,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x00,0x01;
	.var = .LN_process;
	.var = .LN._process.end;
	.var =
		0x01,0x01,0x00,0x0B,0x00,0x00,0x00,0x00;
	.var = .LN11;
	.var = .LN._process.end;
	.var =
		0x0B,0x00,0x00,0x00,0x00;
	.var = .LN207;
	.var = .LN284;
	.var =
		0x00,0x00,0x00,0x0D,0x69,0x73,0x50,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x69,0x6E,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _isProcessing;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightIn;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x62,0x75,0x66,0x66,0x5F,0x74,
		0x6D,0x70,0x00,0x01,0xAE,0x0D,0x00,0x00,0x05,0x0C;
	.var = _buff_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x5F,0x74,0x6D,0x70,0x00,
		0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x00,0x01,0x9E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input1R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x4C,0x00,0x01,0x8E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input1L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x00,0x01,0x7E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input2R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x4C,0x00,0x01,0x6E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input2L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x52,0x00,0x01,0x5E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input3R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x4C,0x00,0x01,0x4E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input3L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x32,0x00,0x01,0x3E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input1R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x32,0x00,0x01,0x2E,0x0D,0x00,0x00,0x05,0x0C;
	.var = _input2R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x00,0x01,0x20,0x0D,0x00,0x00,0x05,0x0C;
	.var = _inputR;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x6E,0x70,0x75,0x74,0x4C,
		0x00,0x01,0x12,0x0D,0x00,0x00,0x05,0x0C;
	.var = _inputL;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x31,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x32,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x33,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6A,0x00,0x01,0xA6,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _j;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x00,0x01,0xA6,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _k;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x5F,0x69,0x6E,0x70,0x75,
		0x74,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _k_input;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x78,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _ix;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x68,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _mh;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x32,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x33,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x32,0x00,
		0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x31,0x00,
		0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_1;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x5F,0x64,0x65,0x63,0x00,
		0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_dec;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x66,0x78,0x6C,0x6D,0x73,0x46,
		0x6C,0x61,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _fxlmsFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _identFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x33,
		0x46,0x6C,0x61,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _ident3Flag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x72,0x65,0x73,0x65,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _resetFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x32,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x33,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x34,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr4;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x35,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr5;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnet;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,0x6D,0x69,
		0x74,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnetLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x65,0x64,0x5F,0x76,0x61,
		0x6C,0x75,0x65,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _led_value;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x64,0x65,0x63,0x00,0x01,0x04,0x0D,0x00,0x00,0x05,0x0C;
	.var = _coefs_dec;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x68,0x00,0x01,0xF6,0x0C,0x00,0x00,0x05,0x0C;
	.var = _coefs_h;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x52,0x64,0x61,0x74,
		0x61,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _inRdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4C,0x64,0x61,0x74,
		0x61,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _inLdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _inNoise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x00,0x01,0xE6,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x01,0xD6,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x01,0xC6,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x31,0x00,0x01,0xB6,
		0x0C,0x00,0x00,0x05,0x0C;
	.var = _un1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x31,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x31,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x31,0x00,0x01,
		0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _err1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0x01,0xA6,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x32,0x00,0x01,0x96,
		0x0C,0x00,0x00,0x05,0x0C;
	.var = _un2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x70,0x65,0x72,0x66,0x6F,0x72,
		0x6D,0x61,0x6E,0x63,0x65,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _performance;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x41,0x44,0x5F,0x62,0x69,0x74,
		0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _AD_bit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x46,0x53,0x00,0x01,0xA6,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _FS;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x61,0x6D,0x62,0x64,0x61,
		0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _lambda;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x62,0x65,0x74,0x61,0x00,0x01,
		0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _beta;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x64,0x65,0x66,
		0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2def;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x5F,0x30,0x00,
		0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2_0;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x00,0x01,
		0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _err2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x61,0x72,
		0x72,0x00,0x01,0x88,0x0C,0x00,0x00,0x05,0x0C;
	.var = _err2arr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x5F,0x6E,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _inputRfil_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x00,0x01,0x7A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputRfil;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x48,
		0x5F,0x6E,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _inputH_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x48,
		0x00,0x01,0x6A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputH;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0x01,0x5A,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x33,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x33,0x00,0x01,0xF3,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x33,0x00,0x01,
		0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _err3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x66,0x69,0x6C,0x61,0x33,
		0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _yfila3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x61,0x72,0x72,
		0x61,0x79,0x00,0x01,0x4A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _yn2array;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x31,
		0x00,0x01,0x3A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _noise1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x32,
		0x00,0x01,0x2A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _noise2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x33,
		0x00,0x01,0x1A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _noise3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _noise_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x01,0x0A,0x0C,0x00,0x00,0x05,0x0C;
	.var = _noise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x46,
		0x6C,0x61,0x67,0x00,0x01,0xA6,0x01,0x00,0x00,0x05,0x0C;
	.var = _noiseFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0x01,0xF3,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _RightInPrev;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x61,0x6C,0x70,0x68,0x61,0x00,
		0x01,0xF3,0x01,0x00,0x00,0x05,0x0C;
	.var = _alpha;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0E,0x1A,0x0C,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,0x00,0x0E,0x2A,0x0C,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x3A,0x0C,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xD1,
		0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x4A,0x0C,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x5A,0x0C,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x6A,0x0C,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF4,
		0x03,0x00,0xF3,0x03,0x00,0x0E,0x7A,0x0C,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x88,0x0C,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0x34,0x00,0x33,0x00,0x0E,
		0x96,0x0C,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0x34,0x00,0x33,
		0x00,0x0E,0xA6,0x0C,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xD0,
		0x0F,0x00,0xCF,0x0F,0x00,0x0E,0xB6,0x0C,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,0x00,0x0E,0xC6,0x0C,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,
		0x00,0x0E,0xD6,0x0C,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF4,
		0x03,0x00,0xF3,0x03,0x00,0x0E,0xE6,0x0C,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0xF6,0x0C,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x04,0x0D,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0x33,
		0x00,0x32,0x00,0x0E,0x12,0x0D,0x00,0x00,0xF3,0x01,0x00,0x00,
		0x0F,0x29,0x00,0x28,0x00,0x0E,0x20,0x0D,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0x2A,0x00,0x29,0x00,0x0E,0x2E,0x0D,0x00,0x00,
		0xF3,0x01,0x00,0x00,0x0F,0x2A,0x00,0x29,0x00,0x0E,0x3E,0x0D,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,
		0x00,0x0E,0x4E,0x0D,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,
		0x03,0x00,0xF4,0x03,0x00,0x0E,0x5E,0x0D,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x6E,0x0D,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x7E,0x0D,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xD1,
		0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x8E,0x0D,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x9E,0x0D,
		0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0xAE,0x0D,0x00,0x00,0xF3,0x01,0x00,0x00,0x0F,0xF5,
		0x03,0x00,0xF4,0x03,0x00,0x0E,0x00,0x00,0x00,0x00,0xF3,0x01,
		0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x00;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.var =
		0xEF,0x11,0x00,0x00,0x02,0x00,0x9E,0x02,0x00,0x00,0x01,0x01,
		0x01,0xF6,0x0A,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,
		0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,
		0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,
		0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,
		0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,
		0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x00,
		0xAC,0xAE,0xEE,0xAA,0x06,0xE5,0x6B,0x74,0x74,0x2E,0x68,0x00,
		0x00,0xA0,0xD9,0x84,0x93,0x06,0xAC,0x0F,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x63,0x64,0x65,0x66,
		0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,
		0xA3,0x04,0xAF,0x04,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x43,0x64,0x65,0x66,0x32,0x31,0x33,0x36,
		0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x84,0xA9,
		0x02,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,
		0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,
		0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,
		0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,
		0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,
		0x5C,0x64,0x65,0x66,0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,
		0x01,0xC2,0xC4,0xD8,0xA3,0x04,0xD6,0x04,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x64,0x65,0x66,0x32,
		0x31,0x33,0x36,0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,
		0x04,0x83,0x8B,0x08,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x73,0x69,0x67,0x6E,0x61,0x6C,0x2E,0x68,
		0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x91,0x55,0x43,0x3A,0x5C,
		0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,
		0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,
		0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,
		0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,
		0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x73,0x74,0x64,
		0x6C,0x69,0x62,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,
		0x9F,0x68,0x66,0x69,0x6C,0x74,0x5F,0x6E,0x75,0x6D,0x2E,0x68,
		0x00,0x00,0xAC,0xA2,0xB9,0xAA,0x06,0xC2,0x01,0x63,0x6F,0x65,
		0x66,0x5F,0x64,0x65,0x63,0x2E,0x64,0x61,0x74,0x00,0x00,0xF2,
		0xF1,0x97,0xA3,0x06,0xB4,0x03,0x63,0x6F,0x65,0x66,0x5F,0x68,
		0x2E,0x64,0x61,0x74,0x00,0x00,0xE3,0x9C,0xEE,0xAA,0x06,0xEB,
		0x07,0x41,0x32,0x2E,0x64,0x61,0x74,0x00,0x00,0x91,0x9D,0xEE,
		0xAA,0x06,0xED,0x3C,0x41,0x33,0x2E,0x64,0x61,0x74,0x00,0x00,
		0x9A,0x9D,0xEE,0xAA,0x06,0xA2,0x40,0x00,0x00,0x05,0x02;
	.var = .LN_handle_LED;
	.var =
		0x04,0x01,0x05,0x1F,0x03,0xDE,0x04,0x01,0x00,0x05,0x02;
	.var = .LN1;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN2;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN3;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN4;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_readDAIpin;
	.var =
		0x04,0x01,0x05,0x19,0x03,0xCB,0x04,0x01,0x00,0x05,0x02;
	.var = .LN5;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN6;
	.var =
		0x05,0x06,0x12,0x00,0x05,0x02;
	.var = .LN7;
	.var =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_flagTest;
	.var =
		0x04,0x01,0x05,0x17,0x03,0xBC,0x04,0x01,0x00,0x05,0x02;
	.var = .LN8;
	.var =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.var = .LN9;
	.var =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.var = .LN10;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_process;
	.var =
		0x04,0x01,0x05,0x01,0xB4,0x00,0x05,0x02;
	.var = .LN11;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN12;
	.var =
		0x05,0x0F,0x18,0x00,0x05,0x02;
	.var = .LN13;
	.var =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN14;
	.var =
		0x15,0x00,0x05,0x02;
	.var = .LN15;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN16;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN17;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN18;
	.var =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.var = .LN19;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN20;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN21;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN22;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN23;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN24;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN25;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN26;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN27;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN28;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN29;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN30;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN31;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN32;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN33;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN34;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN35;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN36;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN37;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN38;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN39;
	.var =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.var = .LN40;
	.var =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.var = .LN41;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN42;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN43;
	.var =
		0x05,0x19,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN44;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN45;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN46;
	.var =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.var = .LN47;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN48;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN49;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN50;
	.var =
		0x05,0x1B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN51;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN52;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN53;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN54;
	.var =
		0x05,0x1B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN55;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN56;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN57;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN58;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN59;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN60;
	.var =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.var = .LN61;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN62;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN63;
	.var =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN64;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN65;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN66;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN67;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN68;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN69;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN70;
	.var =
		0x05,0x11,0x28,0x00,0x05,0x02;
	.var = .LN71;
	.var =
		0x05,0x02,0x03,0x61,0x01,0x00,0x05,0x02;
	.var = .LN72;
	.var =
		0x05,0x11,0x28,0x00,0x05,0x02;
	.var = .LN73;
	.var =
		0x05,0x06,0x03,0x63,0x01,0x00,0x05,0x02;
	.var = .LN74;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN75;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN76;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN77;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN78;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN79;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN80;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN81;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN82;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN83;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN84;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN85;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN86;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN87;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN88;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN89;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN90;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN91;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN92;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN93;
	.var =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.var = .LN94;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN95;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN96;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN97;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN98;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN99;
	.var =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.var = .LN100;
	.var =
		0x05,0x15,0x01,0x00,0x05,0x02;
	.var = .LN101;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN102;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN103;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN104;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN105;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN106;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN107;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN108;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN109;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN110;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN111;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN112;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN113;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN114;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN115;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN116;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN117;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN118;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN119;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN120;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN121;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN122;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN123;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN124;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN125;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN126;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN127;
	.var =
		0x05,0x15,0x01,0x00,0x05,0x02;
	.var = .LN128;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN129;
	.var =
		0x05,0x15,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN130;
	.var =
		0x05,0x11,0x10,0x00,0x05,0x02;
	.var = .LN131;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN132;
	.var =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.var = .LN133;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN134;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN135;
	.var =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.var = .LN136;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN137;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN138;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN139;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN140;
	.var =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.var = .LN141;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN142;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN143;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN144;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN145;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN146;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN147;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN148;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN149;
	.var =
		0x05,0x03,0x15,0x00,0x05,0x02;
	.var = .LN150;
	.var =
		0x05,0x06,0x03,0x75,0x01,0x00,0x05,0x02;
	.var = .LN151;
	.var =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.var = .LN152;
	.var =
		0x05,0x06,0x19,0x00,0x05,0x02;
	.var = .LN153;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN154;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN155;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN156;
	.var =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN157;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN158;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN159;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN160;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN161;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN162;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN163;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN164;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN165;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN166;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN167;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN168;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN169;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN170;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN171;
	.var =
		0x05,0x19,0x11,0x00,0x05,0x02;
	.var = .LN172;
	.var =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.var = .LN173;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN174;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN175;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN176;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN177;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN178;
	.var =
		0x05,0x16,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN179;
	.var =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.var = .LN180;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN181;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN182;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN183;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN184;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN185;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN186;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN187;
	.var =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.var = .LN188;
	.var =
		0x05,0x08,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN189;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN190;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN191;
	.var =
		0x05,0x04,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN192;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN193;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN194;
	.var =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN195;
	.var =
		0x05,0x05,0x10,0x00,0x05,0x02;
	.var = .LN196;
	.var =
		0x05,0x03,0x13,0x00,0x05,0x02;
	.var = .LN197;
	.var =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN198;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN199;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN200;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN201;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN202;
	.var =
		0x05,0x02,0x16,0x00,0x05,0x02;
	.var = .LN203;
	.var =
		0x05,0x03,0x03,0x73,0x01,0x00,0x05,0x02;
	.var = .LN204;
	.var =
		0x05,0x02,0x34,0x00,0x05,0x02;
	.var = .LN205;
	.var =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.var = .LN206;
	.var =
		0x05,0x02,0x21,0x00,0x05,0x02;
	.var = .LN207;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN208;
	.var =
		0x05,0x02,0x40,0x00,0x05,0x02;
	.var = .LN209;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN210;
	.var =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN211;
	.var =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.var = .LN212;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN213;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN214;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN215;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN216;
	.var =
		0x05,0x0F,0x1B,0x00,0x05,0x02;
	.var = .LN217;
	.var =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.var = .LN218;
	.var =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.var = .LN219;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN220;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN221;
	.var =
		0x05,0x03,0x03,0xAA,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN222;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN223;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN224;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN225;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN226;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN227;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN228;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN229;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN230;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN231;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN232;
	.var =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.var = .LN233;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN234;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN235;
	.var =
		0x05,0x19,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN236;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN237;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN238;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN239;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN240;
	.var =
		0x05,0x16,0x0C,0x00,0x05,0x02;
	.var = .LN241;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN242;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN243;
	.var =
		0x05,0x16,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN244;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN245;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN246;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN247;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN248;
	.var =
		0x05,0x13,0x0B,0x00,0x05,0x02;
	.var = .LN249;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN250;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN251;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN252;
	.var =
		0x05,0x13,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN253;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN254;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN255;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN256;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN257;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN258;
	.var =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.var = .LN259;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN260;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN261;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN262;
	.var =
		0x05,0x14,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN263;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN264;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN265;
	.var =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN266;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN267;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN268;
	.var =
		0x05,0x10,0x11,0x00,0x05,0x02;
	.var = .LN269;
	.var =
		0x05,0x1C,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN270;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN271;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN272;
	.var =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN273;
	.var =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.var = .LN274;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN275;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN276;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN277;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN278;
	.var =
		0x05,0x1C,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN279;
	.var =
		0x05,0x07,0x12,0x00,0x05,0x02;
	.var = .LN280;
	.var =
		0x05,0x10,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN281;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN282;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN283;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN284;
	.var =
		0x05,0x11,0x03,0xB8,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN285;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN286;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN287;
	.var =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN288;
	.var =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.var = .LN289;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN290;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN291;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN292;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN293;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN294;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN295;
	.var =
		0x05,0x11,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN296;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN297;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN298;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN299;
	.var =
		0x05,0x12,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN300;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN301;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN302;
	.var =
		0x05,0x07,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN303;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN304;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN305;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN306;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN307;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN308;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN309;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN310;
	.var =
		0x05,0x3D,0x0B,0x00,0x05,0x02;
	.var = .LN311;
	.var =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.var = .LN312;
	.var =
		0x05,0x11,0x03,0x55,0x01,0x00,0x05,0x02;
	.var = .LN313;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN314;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN315;
	.var =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN316;
	.var =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.var = .LN317;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN318;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN319;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN320;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN321;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN322;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN323;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN324;
	.var =
		0x05,0x11,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN325;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN326;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN327;
	.var =
		0x05,0x12,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN328;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN329;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN330;
	.var =
		0x05,0x07,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN331;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN332;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN333;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN334;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN335;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN336;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN337;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN338;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN339;
	.var =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.var = .LN340;
	.var =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN341;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN342;
	.var =
		0x05,0x1B,0x03,0x97,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN343;
	.var =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.var = .LN344;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN345;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN346;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN347;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN348;
	.var =
		0x05,0x06,0x03,0x5D,0x01,0x00,0x05,0x02;
	.var = .LN349;
	.var =
		0x05,0x23,0x03,0x6F,0x01,0x00,0x05,0x02;
	.var = .LN350;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN351;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN352;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN353;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN354;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN355;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN356;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN357;
	.var =
		0x05,0x23,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN358;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN359;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN360;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN361;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN362;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN363;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN364;
	.var =
		0x05,0x2B,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN365;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN366;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN367;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN368;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN369;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN370;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN371;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN372;
	.var =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.var = .LN373;
	.var =
		0x05,0x0C,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN374;
	.var =
		0x03,0x59,0x01,0x00,0x05,0x02;
	.var = .LN375;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN376;
	.var =
		0x05,0x26,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN377;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN378;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN379;
	.var =
		0x05,0x32,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN380;
	.var =
		0x05,0x01,0x03,0xDF,0x02,0x01,0x00,0x05,0x02;
	.var = .LN._process.end;
	.var =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.var =
		0xE1,0x03,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0xBD,0x0D,0x00,0x00,0xF7,0x02,0x00,0x00,0x68,0x61,0x6E,0x64,
		0x6C,0x65,0x5F,0x4C,0x45,0x44,0x00,0x35,0x03,0x00,0x00,0x72,
		0x65,0x61,0x64,0x44,0x41,0x49,0x70,0x69,0x6E,0x00,0x72,0x03,
		0x00,0x00,0x66,0x6C,0x61,0x67,0x54,0x65,0x73,0x74,0x00,0xAD,
		0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x1A,
		0x04,0x00,0x00,0x62,0x75,0x66,0x66,0x5F,0x74,0x6D,0x70,0x00,
		0x34,0x04,0x00,0x00,0x69,0x5F,0x74,0x6D,0x70,0x00,0x4B,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x00,0x64,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x4C,0x00,0x7D,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x00,0x96,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x4C,0x00,0xAF,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x52,0x00,0xC8,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x4C,0x00,0xE1,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x32,0x00,0xFB,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x32,0x00,
		0x45,0x05,0x00,0x00,0x69,0x31,0x00,0x59,0x05,0x00,0x00,0x69,
		0x32,0x00,0x6D,0x05,0x00,0x00,0x69,0x33,0x00,0x81,0x05,0x00,
		0x00,0x6A,0x00,0x94,0x05,0x00,0x00,0x6B,0x00,0xA7,0x05,0x00,
		0x00,0x6B,0x5F,0x69,0x6E,0x70,0x75,0x74,0x00,0xC0,0x05,0x00,
		0x00,0x69,0x78,0x00,0xD4,0x05,0x00,0x00,0x6D,0x31,0x00,0xE8,
		0x05,0x00,0x00,0x6D,0x68,0x00,0xFC,0x05,0x00,0x00,0x6D,0x32,
		0x00,0x10,0x06,0x00,0x00,0x6D,0x33,0x00,0x24,0x06,0x00,0x00,
		0x6F,0x75,0x74,0x5F,0x32,0x00,0x69,0x06,0x00,0x00,0x66,0x78,
		0x6C,0x6D,0x73,0x46,0x6C,0x61,0x67,0x00,0x84,0x06,0x00,0x00,
		0x69,0x64,0x65,0x6E,0x74,0x46,0x6C,0x61,0x67,0x00,0x9F,0x06,
		0x00,0x00,0x69,0x64,0x65,0x6E,0x74,0x33,0x46,0x6C,0x61,0x67,
		0x00,0xBB,0x06,0x00,0x00,0x72,0x65,0x73,0x65,0x74,0x46,0x6C,
		0x61,0x67,0x00,0xD6,0x06,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,
		0x43,0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0xF6,0x06,
		0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x00,
		0x11,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,
		0x72,0x32,0x00,0x2D,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,
		0x43,0x74,0x6E,0x72,0x33,0x00,0x49,0x07,0x00,0x00,0x64,0x65,
		0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x34,0x00,0x65,0x07,0x00,
		0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x35,0x00,
		0x81,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,
		0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0xA1,0x07,0x00,0x00,0x64,
		0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,
		0x74,0x4C,0x69,0x6D,0x69,0x74,0x00,0xC6,0x07,0x00,0x00,0x6C,
		0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,0x65,0x00,0xE1,0x07,0x00,
		0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x64,0x65,0x63,0x00,0xFC,
		0x07,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x68,0x00,0x15,
		0x08,0x00,0x00,0x69,0x6E,0x52,0x64,0x61,0x74,0x61,0x00,0x2E,
		0x08,0x00,0x00,0x69,0x6E,0x4C,0x64,0x61,0x74,0x61,0x00,0x47,
		0x08,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x00,0x60,
		0x08,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x41,0x72,
		0x72,0x61,0x79,0x31,0x00,0x7F,0x08,0x00,0x00,0x69,0x6E,0x4E,
		0x6F,0x69,0x73,0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x9E,
		0x08,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,
		0x74,0x65,0x72,0x5F,0x31,0x00,0xBE,0x08,0x00,0x00,0x75,0x6E,
		0x31,0x00,0xD3,0x08,0x00,0x00,0x6D,0x75,0x31,0x00,0xE8,0x08,
		0x00,0x00,0x79,0x6E,0x31,0x00,0xFD,0x08,0x00,0x00,0x65,0x72,
		0x72,0x31,0x00,0x13,0x09,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,
		0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0x33,0x09,
		0x00,0x00,0x75,0x6E,0x32,0x00,0x48,0x09,0x00,0x00,0x70,0x65,
		0x72,0x66,0x6F,0x72,0x6D,0x61,0x6E,0x63,0x65,0x00,0x65,0x09,
		0x00,0x00,0x41,0x44,0x5F,0x62,0x69,0x74,0x00,0x7D,0x09,0x00,
		0x00,0x46,0x53,0x00,0x91,0x09,0x00,0x00,0x6C,0x61,0x6D,0x62,
		0x64,0x61,0x00,0xA9,0x09,0x00,0x00,0x62,0x65,0x74,0x61,0x00,
		0xBF,0x09,0x00,0x00,0x6D,0x75,0x32,0x00,0xD4,0x09,0x00,0x00,
		0x6D,0x75,0x32,0x64,0x65,0x66,0x00,0xEC,0x09,0x00,0x00,0x6D,
		0x75,0x32,0x5F,0x30,0x00,0x03,0x0A,0x00,0x00,0x79,0x6E,0x32,
		0x00,0x18,0x0A,0x00,0x00,0x65,0x72,0x72,0x32,0x00,0x2E,0x0A,
		0x00,0x00,0x65,0x72,0x72,0x32,0x61,0x72,0x72,0x00,0x47,0x0A,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x52,0x66,0x69,0x6C,0x5F,
		0x6E,0x00,0x64,0x0A,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x00,0x7F,0x0A,0x00,0x00,0x69,0x6E,0x70,0x75,
		0x74,0x48,0x5F,0x6E,0x00,0x99,0x0A,0x00,0x00,0x69,0x6E,0x70,
		0x75,0x74,0x48,0x00,0xB1,0x0A,0x00,0x00,0x63,0x6F,0x65,0x66,
		0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0xD1,
		0x0A,0x00,0x00,0x6D,0x75,0x33,0x00,0xE6,0x0A,0x00,0x00,0x79,
		0x6E,0x33,0x00,0xFB,0x0A,0x00,0x00,0x65,0x72,0x72,0x33,0x00,
		0x11,0x0B,0x00,0x00,0x79,0x66,0x69,0x6C,0x61,0x33,0x00,0x29,
		0x0B,0x00,0x00,0x79,0x6E,0x32,0x61,0x72,0x72,0x61,0x79,0x00,
		0x43,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x31,0x00,0x5B,
		0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x32,0x00,0x73,0x0B,
		0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x33,0x00,0x8B,0x0B,0x00,
		0x00,0x6E,0x6F,0x69,0x73,0x65,0x5F,0x6E,0x00,0xA4,0x0B,0x00,
		0x00,0x6E,0x6F,0x69,0x73,0x65,0x00,0xBB,0x0B,0x00,0x00,0x6E,
		0x6F,0x69,0x73,0x65,0x46,0x6C,0x61,0x67,0x00,0xD6,0x0B,0x00,
		0x00,0x52,0x69,0x67,0x68,0x74,0x49,0x6E,0x50,0x72,0x65,0x76,
		0x00,0xF3,0x0B,0x00,0x00,0x61,0x6C,0x70,0x68,0x61,0x00,0x00,
		0x00,0x00,0x00;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.var =
		0x30,0x00,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x01,0x00;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end-.LN_handle_LED;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end-.LN_readDAIpin;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end-.LN_flagTest;
	.var = .LN_process;
	.var = .LN._process.end-.LN_process;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section .annotations SHT_DEBUGINFO;

	.align 1;
.epcannot:
	.type .epcannot,STT_OBJECT;
	.var =
		0x01,0x00,0x00,0x00,0xE8,0x13,0x00,0x00,0x2A,0x00,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x0C,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x54,0x00,0x00,0x00,0x16,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x4D,0x6F,0x6E,0x20,0x4E,0x6F,
		0x76,0x20,0x32,0x30,0x20,0x31,0x38,0x3A,0x33,0x30,0x3A,0x33,
		0x36,0x20,0x32,0x30,0x32,0x33,0x0A,0x00,0x36,0x00,0x00,0x00,
		0x53,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x2D,0x63,0x20,0x2D,0x66,0x69,0x6C,0x65,0x2D,0x61,0x74,0x74,
		0x72,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x4E,0x61,0x6D,
		0x65,0x3D,0x46,0x65,0x78,0x4C,0x4D,0x53,0x5F,0x77,0x69,0x74,
		0x68,0x5F,0x41,0x33,0x20,0x2D,0x4F,0x20,0x2D,0x4F,0x76,0x31,
		0x30,0x30,0x20,0x2D,0x67,0x20,0x2D,0x73,0x61,0x76,0x65,0x2D,
		0x74,0x65,0x6D,0x70,0x73,0x20,0x2D,0x70,0x61,0x74,0x68,0x2D,
		0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x44,0x65,0x62,0x75,0x67,
		0x20,0x2D,0x45,0x44,0x20,0x2D,0x6E,0x6F,0x2D,0x6D,0x75,0x6C,
		0x74,0x69,0x6C,0x69,0x6E,0x65,0x20,0x2D,0x64,0x6F,0x75,0x62,
		0x6C,0x65,0x2D,0x73,0x69,0x7A,0x65,0x2D,0x33,0x32,0x20,0x2D,
		0x66,0x6C,0x61,0x67,0x73,0x2D,0x63,0x6F,0x6D,0x70,0x69,0x6C,
		0x65,0x72,0x20,0x2D,0x2D,0x64,0x69,0x61,0x67,0x5F,0x77,0x61,
		0x72,0x6E,0x69,0x6E,0x67,0x2C,0x69,0x6D,0x70,0x6C,0x69,0x63,
		0x69,0x74,0x5F,0x66,0x75,0x6E,0x63,0x5F,0x64,0x65,0x63,0x6C,
		0x20,0x2D,0x77,0x61,0x72,0x6E,0x2D,0x70,0x72,0x6F,0x74,0x6F,
		0x73,0x20,0x2D,0x66,0x6F,0x72,0x63,0x65,0x2D,0x63,0x69,0x72,
		0x63,0x62,0x75,0x66,0x20,0x2D,0x70,0x72,0x6F,0x63,0x20,0x41,
		0x44,0x53,0x50,0x2D,0x32,0x31,0x33,0x36,0x34,0x20,0x2D,0x6F,
		0x20,0x44,0x65,0x62,0x75,0x67,0x5C,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x64,0x6F,0x6A,0x20,0x2D,0x4D,0x4D,0x00,0x60,
		0x00,0x00,0x00,0x6E,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x2E,
		0x00,0x00,0x00,0x41,0x44,0x53,0x50,0x2D,0x32,0x31,0x33,0x36,
		0x34,0x00,0x5F,0x01,0x00,0x00,0xA0,0x01,0x00,0x00,0x16,0x00,
		0x00,0x00,0x2D,0x00,0x00,0x00,0x30,0x2E,0x32,0x00,0x7A,0x01,
		0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x82,0x01,0x00,0x00,0x5F,0x02,0x00,0x00,0x06,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xBA,0x01,0x00,0x00,
		0x8C,0x01,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
		0x77,0x6F,0x72,0x64,0x73,0x00,0xB0,0x01,0x00,0x00,0xE1,0x01,
		0x00,0x00,0x8C,0x01,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,
		0x31,0x2D,0x72,0x32,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,
		0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,0xC6,0x01,0x00,
		0x00,0x0B,0x02,0x00,0x00,0x8C,0x01,0x00,0x00,0x33,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xED,
		0x01,0x00,0x00,0x4C,0x02,0x00,0x00,0x05,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x02,0x00,0x00,0xF7,
		0x01,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,
		0x6F,0x72,0x64,0x73,0x00,0x1B,0x02,0x00,0x00,0x45,0x02,0x00,
		0x00,0xF7,0x01,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x30,
		0x2C,0x72,0x32,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,
		0x00,0x31,0x02,0x00,0x00,0x6F,0x02,0x00,0x00,0xF7,0x01,0x00,
		0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0x51,0x02,0x00,0x00,0x3D,0x02,0x00,0x00,0x05,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x89,
		0x02,0x00,0x00,0x5B,0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0x7F,0x02,0x00,
		0x00,0xA6,0x02,0x00,0x00,0x5B,0x02,0x00,0x00,0x34,0x00,0x00,
		0x00,0x7B,0x72,0x30,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,
		0x7D,0x00,0x95,0x02,0x00,0x00,0xD0,0x02,0x00,0x00,0x5B,0x02,
		0x00,0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x2E,0x63,0x00,0xB2,0x02,0x00,0x00,0xAB,0x00,0x00,0x00,
		0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0xEA,0x02,0x00,0x00,0xBC,0x02,0x00,0x00,0x30,0x00,0x00,0x00,
		0x0E,0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0xE0,0x02,
		0x00,0x00,0x31,0x03,0x00,0x00,0xBC,0x02,0x00,0x00,0x34,0x00,
		0x00,0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,
		0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,0x69,0x31,
		0x32,0x2C,0x6D,0x34,0x2C,0x73,0x30,0x2C,0x73,0x32,0x2C,0x73,
		0x37,0x2C,0x61,0x63,0x63,0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,
		0x63,0x2C,0x6C,0x63,0x6E,0x74,0x72,0x7D,0x00,0xF6,0x02,0x00,
		0x00,0x62,0x03,0x00,0x00,0xBC,0x02,0x00,0x00,0x35,0x00,0x00,
		0x00,0x7B,0x72,0x33,0x2C,0x72,0x35,0x2D,0x72,0x37,0x2C,0x72,
		0x39,0x2C,0x72,0x31,0x33,0x2C,0x69,0x30,0x2D,0x69,0x33,0x2C,
		0x6C,0x33,0x2C,0x62,0x33,0x2C,0x6D,0x30,0x7D,0x00,0x3D,0x03,
		0x00,0x00,0xEA,0x03,0x00,0x00,0xBC,0x02,0x00,0x00,0x36,0x00,
		0x00,0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,
		0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,0x69,0x31,
		0x32,0x2D,0x69,0x31,0x33,0x2C,0x62,0x34,0x2C,0x62,0x31,0x32,
		0x2D,0x62,0x31,0x33,0x2C,0x6D,0x34,0x2C,0x6D,0x31,0x32,0x2C,
		0x73,0x30,0x2D,0x73,0x31,0x35,0x2C,0x75,0x73,0x74,0x61,0x74,
		0x31,0x2D,0x75,0x73,0x74,0x61,0x74,0x34,0x2C,0x61,0x63,0x63,
		0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,0x63,0x2C,0x62,0x74,0x66,
		0x2C,0x6C,0x63,0x6E,0x74,0x72,0x2C,0x73,0x6D,0x72,0x66,0x2C,
		0x73,0x6D,0x72,0x62,0x2C,0x73,0x61,0x63,0x63,0x2C,0x73,0x6D,
		0x63,0x63,0x2C,0x73,0x73,0x63,0x63,0x2C,0x73,0x62,0x74,0x66,
		0x7D,0x00,0x6E,0x03,0x00,0x00,0x31,0x04,0x00,0x00,0xBC,0x02,
		0x00,0x00,0x37,0x00,0x00,0x00,0x7B,0x72,0x31,0x2D,0x72,0x32,
		0x2C,0x72,0x34,0x2C,0x72,0x38,0x2D,0x72,0x39,0x2C,0x72,0x31,
		0x32,0x2D,0x72,0x31,0x33,0x7D,0x00,0xF6,0x03,0x00,0x00,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x13,0x04,0x00,
		0x00,0x09,0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x5B,0x04,0x00,0x00,0x1D,0x04,0x00,
		0x00,0x20,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0x3D,0x04,0x00,0x00,0xF7,0x00,0x00,0x00,0x06,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6F,
		0x04,0x00,0x00,0x47,0x04,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xD9,0x05,0x00,0x00,0x47,
		0x04,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,
		0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,
		0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,
		0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,
		0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,
		0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,0x30,0x2E,
		0x30,0x25,0x29,0x0A,0x00,0x7B,0x04,0x00,0x00,0x25,0x06,0x00,
		0x00,0x47,0x04,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xE9,
		0x05,0x00,0x00,0xF7,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0x07,0x06,0x00,0x00,0xFB,0x00,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x39,0x06,0x00,0x00,0x11,0x06,0x00,0x00,0x0B,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xA3,0x07,0x00,
		0x00,0x11,0x06,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,
		0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,
		0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x45,0x06,0x00,0x00,0xB3,
		0x07,0x00,0x00,0x11,0x06,0x00,0x00,0x16,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x11,0x06,0x00,0x00,0x1C,
		0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0xC3,0x07,0x00,0x00,0xFB,0x00,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xE1,
		0x07,0x00,0x00,0x00,0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x08,0x00,0x00,0xEB,
		0x07,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x7D,0x09,0x00,0x00,0xEB,0x07,0x00,0x00,0x38,
		0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,
		0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,
		0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,
		0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x00,0x1F,0x08,0x00,0x00,0x8D,0x09,0x00,0x00,0xEB,0x07,0x00,
		0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xD9,0x09,0x00,
		0x00,0xEB,0x07,0x00,0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x9D,
		0x09,0x00,0x00,0x00,0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0xBB,0x09,0x00,0x00,0x05,0x01,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0xED,0x09,0x00,0x00,0xC5,0x09,0x00,0x00,0x0B,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x57,0x0B,0x00,
		0x00,0xC5,0x09,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,
		0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,
		0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0xF9,0x09,0x00,0x00,0x67,
		0x0B,0x00,0x00,0xC5,0x09,0x00,0x00,0x16,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0xB3,0x0B,0x00,0x00,0xC5,0x09,0x00,0x00,0x1C,
		0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0x77,0x0B,0x00,0x00,0x05,0x01,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x95,
		0x0B,0x00,0x00,0x0F,0x02,0x00,0x00,0x03,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC7,0x0B,0x00,0x00,0x9F,
		0x0B,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,
		0x00,0x00,0x00,0xD7,0x0B,0x00,0x00,0x9F,0x0B,0x00,0x00,0x10,
		0x00,0x00,0x00,0xCF,0x07,0x00,0x00,0xE3,0x0B,0x00,0x00,0x9F,
		0x0B,0x00,0x00,0x14,0x00,0x00,0x00,0x03,0x0C,0x00,0x00,0x9F,
		0x0B,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x78,0x0E,0x00,0x00,0x9F,0x0B,0x00,0x00,0x38,
		0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,
		0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,
		0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,
		0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,0x6C,
		0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,
		0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,0x28,0x20,0x35,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,
		0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x61,
		0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,0x33,
		0x25,0x29,0x0A,0x00,0x0F,0x0C,0x00,0x00,0x70,0x72,0x6F,0x63,
		0x65,0x73,0x73,0x2E,0x63,0x00,0x3C,0x0E,0x00,0x00,0x0F,0x02,
		0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x5A,0x0E,0x00,0x00,0xCE,0x01,0x00,0x00,0x03,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8C,0x0E,0x00,0x00,
		0x64,0x0E,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x03,0x00,0x00,0x00,0x9C,0x0E,0x00,0x00,0x64,0x0E,0x00,0x00,
		0x10,0x00,0x00,0x00,0xF3,0x01,0x00,0x00,0xA8,0x0E,0x00,0x00,
		0x64,0x0E,0x00,0x00,0x14,0x00,0x00,0x00,0xC8,0x0E,0x00,0x00,
		0x64,0x0E,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
		0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x3D,0x11,0x00,0x00,0x64,0x0E,0x00,0x00,
		0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,
		0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,
		0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,
		0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,
		0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,
		0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,
		0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,
		0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,
		0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,0x28,0x20,
		0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,
		0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,
		0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,
		0x33,0x25,0x29,0x0A,0x00,0xD4,0x0E,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x01,0x11,0x00,0x00,0xCE,
		0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0x1F,0x11,0x00,0x00,0xAF,0x01,0x00,0x00,0x03,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x51,0x11,0x00,
		0x00,0x29,0x11,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,0x00,
		0x00,0x03,0x00,0x00,0x00,0x61,0x11,0x00,0x00,0x29,0x11,0x00,
		0x00,0x10,0x00,0x00,0x00,0xF3,0x01,0x00,0x00,0x6D,0x11,0x00,
		0x00,0x29,0x11,0x00,0x00,0x14,0x00,0x00,0x00,0x8D,0x11,0x00,
		0x00,0x29,0x11,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x11,0x00,
		0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,
		0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,
		0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,
		0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,
		0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,
		0x2E,0x33,0x25,0x29,0x0A,0x00,0x99,0x11,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xC6,0x13,0x00,0x00,
		0xAF,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcannot.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 2;
	.global _buff_tmp;
	.type _buff_tmp,STT_OBJECT;
	.var _buff_tmp[100];
._buff_tmp.end:
	.align 1;
_i_tmp:
	.global _i_tmp;
	.type _i_tmp,STT_OBJECT;
	.var ..TW0[1] =
		 0x00000000;
._i_tmp.end:
	.align 1;
_i1:
	.global _i1;
	.type _i1,STT_OBJECT;
	.var ..TW1[1] =
		 0x00000000;
._i1.end:
	.align 1;
_i2:
	.global _i2;
	.type _i2,STT_OBJECT;
	.var ..TW2[1] =
		 0x00000000;
._i2.end:
	.align 1;
_i3:
	.global _i3;
	.type _i3,STT_OBJECT;
	.var ..TW3[1] =
		 0x00000000;
._i3.end:
	.align 1;
_m1:
	.global _m1;
	.type _m1,STT_OBJECT;
	.var ..TW4[1] =
		 0x00000000;
._m1.end:
	.align 1;
_mh:
	.global _mh;
	.type _mh,STT_OBJECT;
	.var ..TW5[1] =
		 0x00000000;
._mh.end:
	.align 1;
_m2:
	.global _m2;
	.type _m2,STT_OBJECT;
	.var ..TW6[1] =
		 0x00000000;
._m2.end:
	.align 1;
_m3:
	.global _m3;
	.type _m3,STT_OBJECT;
	.var ..TW7[1] =
		 0x00000000;
._m3.end:
	.align 1;
_fxlmsFlag:
	.global _fxlmsFlag;
	.type _fxlmsFlag,STT_OBJECT;
	.var ..TW8[1] =
		 0x00000000;
._fxlmsFlag.end:
	.align 1;
_identFlag:
	.global _identFlag;
	.type _identFlag,STT_OBJECT;
	.var ..TW9[1] =
		 0x00000000;
._identFlag.end:
	.align 1;
_ident3Flag:
	.global _ident3Flag;
	.type _ident3Flag,STT_OBJECT;
	.var ..TW10[1] =
		 0x00000000;
._ident3Flag.end:
	.align 1;
_resetFlag:
	.global _resetFlag;
	.type _resetFlag,STT_OBJECT;
	.var ..TW11[1] =
		 0x00000001;
._resetFlag.end:
	.align 1;
_delayCtnrLimit:
	.global _delayCtnrLimit;
	.type _delayCtnrLimit,STT_OBJECT;
	.var ..TW12[1] =
		 0x000009C4;
._delayCtnrLimit.end:
	.align 1;
_delayCtnr:
	.global _delayCtnr;
	.type _delayCtnr,STT_OBJECT;
	.var ..TW13[1] =
		 0x00000000;
._delayCtnr.end:
	.align 1;
_delayCtnr2:
	.global _delayCtnr2;
	.type _delayCtnr2,STT_OBJECT;
	.var ..TW14[1] =
		 0x00000000;
._delayCtnr2.end:
	.align 1;
_delayCtnr3:
	.global _delayCtnr3;
	.type _delayCtnr3,STT_OBJECT;
	.var ..TW15[1] =
		 0x00000000;
._delayCtnr3.end:
	.align 1;
_delayCtnr4:
	.global _delayCtnr4;
	.type _delayCtnr4,STT_OBJECT;
	.var ..TW16[1] =
		 0x00000000;
._delayCtnr4.end:
	.align 1;
_delayCtnr5:
	.global _delayCtnr5;
	.type _delayCtnr5,STT_OBJECT;
	.var ..TW17[1] =
		 0x00000000;
._delayCtnr5.end:
	.align 1;
_delayCtnrIdnet:
	.global _delayCtnrIdnet;
	.type _delayCtnrIdnet,STT_OBJECT;
	.var ..TW18[1] =
		 0x00000000;
._delayCtnrIdnet.end:
	.align 1;
_delayCtnrIdnetLimit:
	.global _delayCtnrIdnetLimit;
	.type _delayCtnrIdnetLimit,STT_OBJECT;
	.var ..TW19[1] =
		 0x0007A120;
._delayCtnrIdnetLimit.end:
	.align 1;
_led_value:
	.global _led_value;
	.type _led_value,STT_OBJECT;
	.var ..TW20[1] =
		 0x00000000;
._led_value.end:

	.section/pm/DOUBLE32 seg_pmda;

	.align 4;
_coefs_dec:
	.global _coefs_dec;
	.type _coefs_dec,STT_OBJECT;
	.var ..TW21[41] =
		 0xBAA6FC59, 0xBBF8DF7A, 0xBC2F5771, 0xBC8EED03,
		 0xBCCB48D4, 0xBD061B6D, 0xBD249907, 0xBD3C9ABB,
		 0xBD492685, 0xBD458DDE, 0xBD2E264E, 0xBD00E9D5,
		 0xBC784018, 0x3BBE4042, 0x3CF6F08D, 0x3D65D399,
		 0x3DA72192, 0x3DD5D788, 0x3DFACA36, 0x3E093E1D,
		 0x3E0D527E, 0x3E093E1D, 0x3DFACA36, 0x3DD5D788,
		 0x3DA72192, 0x3D65D399, 0x3CF6F08D, 0x3BBE4042,
		 0xBC784018, 0xBD00E9D5, 0xBD2E264E, 0xBD458DDE,
		 0xBD492685, 0xBD3C9ABB, 0xBD249907, 0xBD061B6D,
		 0xBCCB48D4, 0xBC8EED03, 0xBC2F5771, 0xBBF8DF7A,
		 0xBAA6FC59;
._coefs_dec.end:
	.align 2;
_coefs_h:
	.global _coefs_h;
	.type _coefs_h,STT_OBJECT;
	.var ..TW22[51] =
		 0xBC624BC7, 0xBCE47CDA, 0x3EA48982, 0xBF5906ED,
		 0x3FEB9547, 0xC03583BE, 0x40839C46, 0xC09449AF,
		 0x40A07FA7, 0xC06F9283, 0x4009B00B, 0x3FD3775A,
		 0xC0A91EDD, 0x412B2A6A, 0xC163D4F8, 0x4192086F,
		 0xC192C831, 0x418B5BB1, 0xC12C1414, 0x4015A1AB,
		 0x413E2777, 0xC1CFAD2F, 0x422F85A8, 0xC2685DFD,
		 0x429374D2, 0xC2A1797D, 0x42AD583B, 0xC29F20E5,
		 0x428F2FEC, 0xC25E49E6, 0x42255C1E, 0xC1C097AA,
		 0x412D7AAA, 0x40063087, 0xC1178CF5, 0x4170C65A,
		 0xC178631F, 0x41719938, 0xC137D63D, 0x41065747,
		 0xC080A5BA, 0x3F9B2F4A, 0x3FC1C68B, 0xC02055E1,
		 0x404A052A, 0xC02CAD7E, 0x400A4FFF, 0xBFA558A6,
		 0x3F2CF7D8, 0xBE5C3A0D, 0x3D13AFFF;
._coefs_h.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 2;
_coefs_filter_1:
	.global _coefs_filter_1;
	.type _coefs_filter_1,STT_OBJECT;
	.var ..TW23[500] =
		 0x3AA56360, 0x3A59F15D, 0xBA910DB9, 0xBA8A7710,
		 0x3A2AB12E, 0xB815748E, 0xBA266470, 0x39C9A4D7,
		 0x3A1CA1DB, 0xB9CBD84C, 0xBA9E7C53, 0xB9AFA99E,
		 0x3A47FEAE, 0x39B1CE22, 0x37331C05, 0x3A7B2C25,
		 0x3A877411, 0x390160E1, 0x3C38B552, 0x3D30DC66,
		 0xBD12ADF7, 0xBE88FA90, 0xBDEDBD46, 0x3EECA79A,
		 0x3EE82C06, 0xBE0AEC0C, 0xBEA0664C, 0xBD511957,
		 0x3DBE48A0, 0xBCB2B6A5, 0xBD9B4532, 0x3D3FE1BD,
		 0x3D053FA1, 0xBD8CB4E8, 0xBCB400B5, 0x3C2001E7,
		 0xBD8837CF, 0xBD5F0D64, 0x3D6D217A, 0x3D1DED88,
		 0xBD9A80AF, 0xBD5D782C, 0x3CBD180A, 0x3C3BF550,
		 0xBB5A4075, 0x3C89FD2D, 0x3BA613C7, 0xBCBEE4E5,
		 0xBC5D99EB, 0x3C0DADE7, 0xBA33D8CC, 0xBC388EEF,
		 0x3A3C9B14, 0xBA4BCDE2, 0xBBEFA04C, 0x3CC6AEC2,
		 0x3D34BD7C, 0xBB85FFE5, 0xBD1E9251, 0x3978B9AF,
		 0x3CA2BBFE, 0xBC5F2EF5, 0xBB3C8692, 0x3D3722BC,
		 0x3CC9F055, 0xBD00C9A3, 0xBCB4AEDC, 0x3C921065,
		 0x3C17166C, 0xBC5D1B65, 0x39099D9B, 0x3C93EA24,
		 0x3C33B623, 0x3BA21FD2, 0x3C836BE5, 0x3CA8484C,
		 0x3B72141E, 0xBC840DDF, 0xBC7D2EEE, 0x3B846F83,
		 0x3C94DD0B, 0x3C3B702D, 0xBBA0AF4D, 0xBC36CA86,
		 0xBB564337, 0x3BD34B9B, 0x3BEAA0DE, 0x3AA43F0E,
		 0xBAE11F7E, 0xBAE1896A, 0xBACE6E4F, 0x3AEE3159,
		 0x3BD60F2C, 0x3BADCCDC, 0xBB9164A2, 0xBC4F4950,
		 0xBC102D1F, 0x3B36DCBE, 0x3C042B9C, 0xB95103EE,
		 0xBC2DD30E, 0xBC12205B, 0xBAA23495, 0xBA296690,
		 0xBAFEE5CE, 0x3B929511, 0x3C076D65, 0xBA4D3D23,
		 0xBC119CA3, 0xBBD26CD4, 0xBB40391B, 0xB888E84B,
		 0x3B844A1B, 0x3AE9EE07, 0xBB7073EC, 0xBB2069A2,
		 0xB9D73BD0, 0xBB4414DB, 0xBB986283, 0xB9F0FD55,
		 0x3C255DC1, 0x3C6AED36, 0x3A49220D, 0xBC5BA4E6,
		 0xBC4092EF, 0xBAAD708F, 0x3BF77509, 0x3BCE232F,
		 0xBB47845D, 0xBB99C331, 0x3B61ABE0, 0x3B7EE685,
		 0xBBBE8FC5, 0xBBDD0EF8, 0x3B7A71B6, 0x3BC56E74,
		 0xBB73F761, 0xBC1B0A17, 0xBB8B072F, 0x3B9D4217,
		 0x3C014070, 0x3B075610, 0xBB843C57, 0xBAD66EBC,
		 0x3B787F8C, 0x3B41D0AB, 0xBA5D1253, 0xBAEECCB2,
		 0x39E23AE0, 0x3B6F2FB7, 0x3AFC89F3, 0xB87CA7DC,
		 0x3B706746, 0x3B0D09BD, 0xBAF6C7D1, 0x3AD1DF85,
		 0x3B1EEF70, 0x390E9833, 0x3AF224DE, 0xB8B0A0FE,
		 0xBB800B54, 0xBA2149D8, 0x3B74A957, 0x3BA4D8BE,
		 0x3B96D3BB, 0xBAA95EC4, 0xBBFFF9D7, 0xBB9CB158,
		 0x3B9F5EC5, 0x3BFB59B1, 0x3AD8558D, 0xBB562AE1,
		 0xBBA40081, 0xBAE79CFC, 0x3B92B349, 0x3B5C50FF,
		 0xBA93DFB7, 0xB9256037, 0x39AC784C, 0xBB603DC8,
		 0xBB44F32B, 0x3B8E2538, 0x3C01FEA0, 0x3A3A8979,
		 0xBBDC3E1D, 0xBB531295, 0x3B1A2E1D, 0x3AF9B895,
		 0x3B49C29A, 0x3BCB9274, 0x3ABA1E2F, 0xBC0156AD,
		 0xBC069406, 0xB9CCEDC1, 0x3B9B230E, 0x3BBDA3AB,
		 0x3B813E61, 0xBAFA3903, 0xBC032DD3, 0xBBCD30B9,
		 0x3AAA91D2, 0x3B232825, 0xBA2BE0DF, 0x3A7DF4D8,
		 0x3B1217D8, 0xBA72330F, 0xBAF31578, 0xB989A34A,
		 0xBAC66D20, 0xBB1DAA1A, 0x3AF43352, 0x3B921463,
		 0xB8316276, 0xBBACC003, 0xBB9C2822, 0x39ADA638,
		 0x3AFBA369, 0xBB087854, 0xBB0A9EED, 0x3B2A2A87,
		 0x3B5252B2, 0xBB1C2888, 0xBBBDBD01, 0xBB4B4D04,
		 0x3A66678F, 0x3B032D19, 0xBA83728E, 0xBACF59C4,
		 0x3B6229BB, 0x3B365C29, 0xBB80E2F2, 0xBB6D2D85,
		 0x3A5ACA7A, 0xB9A16B7B, 0xBAA528B9, 0x3B592607,
		 0x3B882DB0, 0xBA046E35, 0xBAE33034, 0x3AFBC2DB,
		 0x3B8E3F0D, 0x3AA02245, 0xBB830DE3, 0xBB90DB33,
		 0xBA46D2F2, 0x3A3E6010, 0x3A10A209, 0x3B54FA17,
		 0x3B9F885D, 0x3A9CBEAF, 0xBB8B627D, 0xBBCE2F9C,
		 0xBA71D0E5, 0x3BC7CC1C, 0x3B931995, 0xBB04837C,
		 0xBB88682D, 0xB6B7546E, 0x3B33F849, 0xBB0868AB,
		 0xBBB57581, 0x3A68C6C8, 0x3BD46C4B, 0xB95D8834,
		 0xBC202F33, 0xBBC28C0E, 0x3B93458E, 0x3BA66412,
		 0x39310D44, 0xB916BA96, 0x3ABA9A3A, 0xB9FF38C0,
		 0xBB85B644, 0xBAF9F23D, 0x3B8B5A79, 0x3BACE3BF,
		 0x3B0D010C, 0xBAD09BB9, 0xBB5DAEE4, 0x3AA3A719,
		 0x3BC77EEC, 0x3AA7CB2F, 0xBBB0A25B, 0xBB26F5DD,
		 0x3B8C0A01, 0x3B9C5829, 0x3A2B6F6E, 0xBAB40466,
		 0xBB351BBE, 0xBBC040D3, 0xBB980626, 0x3AA3F8F4,
		 0x3AE70834, 0xBA9DB53C, 0x3ACCE93B, 0x3B29097A,
		 0xBB6372CD, 0xBB96AD6D, 0x3A9491E7, 0x3B3CD02D,
		 0xBA7EF220, 0xBAB58E4B, 0x3B033827, 0xBA97BD83,
		 0xBBDC4762, 0xBB0CE1DC, 0x3BB71488, 0x3BABD616,
		 0x38D06C83, 0xBB67688E, 0xBB81EFF5, 0xBB232920,
		 0x3AC60E6B, 0x3BB774B8, 0x3B13C037, 0xBB384DA9,
		 0xBA43901E, 0x3B1A317A, 0x38AE033D, 0xBB597AC2,
		 0xBB5C6F54, 0xBB04423E, 0xBAE456BA, 0xB985E0E3,
		 0x3B3932BE, 0x3B259FA0, 0xBA467E88, 0xBA8F4B4D,
		 0x3A917074, 0x3B1EBB09, 0x3B274757, 0x3AF6796C,
		 0x3A0E23CC, 0xB97D858A, 0xB96550CC, 0x398D4AC0,
		 0x3A832266, 0x3A15EA04, 0x399D9BB1, 0x3A5EE3D4,
		 0x3A92D94E, 0x3AB5DAA9, 0x39203FCC, 0x370D75E0,
		 0x3A14930C, 0xBAF407A5, 0xBAB8634A, 0x3A849C64,
		 0xBACF5441, 0xBB6B9BA6, 0xBA418C8E, 0x3AFB2D0C,
		 0x3A577713, 0xBAB2C0C0, 0xB9816CCB, 0x3B6A92CD,
		 0x3B7E886A, 0x39EF8AC4, 0xBA79A65D, 0xBA8ED5AB,
		 0xBB1D04DD, 0xB9F40E0E, 0x3B4804D1, 0xB9210BB7,
		 0xBB87F163, 0xBA69141B, 0x3ACF4DA2, 0xBB090C12,
		 0xBB6FC256, 0x3AB057E4, 0x3BBEDE6D, 0x3B5FDC53,
		 0xBAC121A0, 0xBA7A5CE1, 0x3ACE23B2, 0xBADB49F4,
		 0xBBA2EE6A, 0xBA69004E, 0x3B5E7823, 0x3AF1C44B,
		 0xBA8F5B85, 0xBB2D0D92, 0xBAB41E21, 0x3AC2B128,
		 0x39E1685D, 0xBB163426, 0xBA27F7C2, 0x3A106915,
		 0xBB0874EA, 0xBAA7E663, 0x3B18793C, 0x3ABFFD71,
		 0xBA150AAE, 0xB94D9B0B, 0x395242B3, 0x3920D4DD,
		 0xBA8C3B54, 0xBB1F762C, 0xBB172337, 0xBB1D21C6,
		 0xBA9B5DB9, 0x3AF6A696, 0x391C51ED, 0xBB8BE0A7,
		 0xBA94AFD1, 0x3B93F38C, 0x3B094286, 0xBAE7390C,
		 0x3A46D779, 0x3B2D3D66, 0x3A4F351C, 0x3941EA8F,
		 0xB9D6AC39, 0xBA9BC357, 0x3A0493CD, 0x3ABA0CF2,
		 0xBA055BE6, 0xBAA0D2C2, 0x3A680A7A, 0x3AB054C2,
		 0xB90D9696, 0xB901564F, 0xB9888DD3, 0xB9DFB2EE,
		 0x3A1F114B, 0x392F2104, 0xBA19C760, 0xBA01E6C9,
		 0xBA9819D0, 0xBAA9753A, 0x3A0D3ED6, 0x3B137F10,
		 0x3AC5F2E6, 0xB99628AF, 0xBA8E0532, 0xBB1B1B4E,
		 0xBB1D35AC, 0x3AA5A2A9, 0x3B589C71, 0x3A8D62B0,
		 0xB945248B, 0x3A9793C8, 0xB7EC9704, 0xBB1264CD,
		 0xB99DB865, 0x3AA46274, 0xBA171BA2, 0xBACEE53B,
		 0xBA51A827, 0xB86EB447, 0x398CF0EC, 0x39AFCB40,
		 0x39A0B2AA, 0x3A691369, 0x39904DF7, 0xBAE8FF6B,
		 0x39175356, 0x3B818991, 0x3B063FD9, 0xBB078966,
		 0xBA8DA095, 0x3A6428CD, 0xB9336710, 0xBA1EB3BA,
		 0x3AB2674A, 0x3B33DA22, 0x3A35B4CC, 0xBB046453,
		 0xBADFAA8D, 0x3A4DB3A5, 0x3ABD4BF1, 0xBADC2BCD,
		 0xBB31080F, 0x3AB0402D, 0x3B55DA9E, 0x3A00E881,
		 0xBAB57F6A, 0xBAFA0CD6, 0xBB2FFE3E, 0xBA9BA8F7,
		 0x3AA2CBFA, 0x3A8C89CD, 0x3A2FFA19, 0x3A6BC508,
		 0x3825F53D, 0xBAB5211D, 0xBAEEF1BA, 0xB98516AD,
		 0x3B2A45D5, 0x3B2FDB29, 0xBA1876FF, 0xBB285A2D,
		 0xBB2EE66E, 0xBAC9489E, 0xB925FC94, 0xBA1D468D,
		 0x3A233095, 0x3B23839E, 0xB84D323D, 0xBB302E1D;
._coefs_filter_1.end:
	.align 1;
_mu1:
	.global _mu1;
	.type _mu1,STT_OBJECT;
	.var ..TW24[1] =
		 0x38D1B717;
._mu1.end:
	.align 1;
_yn1:
	.global _yn1;
	.type _yn1,STT_OBJECT;
	.var ..TW25[1] =
		 0x00000000;
._yn1.end:
	.align 1;
_err1:
	.global _err1;
	.type _err1,STT_OBJECT;
	.var ..TW26[1] =
		 0x00000000;
._err1.end:
	.align 1;
_performance:
	.global _performance;
	.type _performance,STT_OBJECT;
	.var ..TW27[1] =
		 0x00000000;
._performance.end:
	.align 1;
_AD_bit:
	.global _AD_bit;
	.type _AD_bit,STT_OBJECT;
	.var ..TW28[1] =
		 0x00000018;
._AD_bit.end:
	.align 1;
_FS:
	.global _FS;
	.type _FS,STT_OBJECT;
	.var ..TW29[1] =
		 0x00199993;
._FS.end:
	.align 1;
_lambda:
	.global _lambda;
	.type _lambda,STT_OBJECT;
	.var ..TW30[1] =
		 0x3C23D70A;
._lambda.end:
	.align 1;
_beta:
	.global _beta;
	.type _beta,STT_OBJECT;
	.var ..TW31[1] =
		 0x3F800000;
._beta.end:
	.align 1;
_mu2:
	.global _mu2;
	.type _mu2,STT_OBJECT;
	.var ..TW32[1] =
		 0x370637BD;
._mu2.end:
	.align 1;
_mu2def:
	.global _mu2def;
	.type _mu2def,STT_OBJECT;
	.var ..TW33[1] =
		 0x370637BD;
._mu2def.end:
	.align 1;
_mu2_0:
	.global _mu2_0;
	.type _mu2_0,STT_OBJECT;
	.var ..TW34[1] =
		 0x38D1B717;
._mu2_0.end:
	.align 1;
_yn2:
	.global _yn2;
	.type _yn2,STT_OBJECT;
	.var ..TW35[1] =
		 0x00000000;
._yn2.end:
	.align 1;
_err2:
	.global _err2;
	.type _err2,STT_OBJECT;
	.var ..TW36[1] =
		 0x00000000;
._err2.end:
	.align 2;
	.global _err2arr;
	.type _err2arr,STT_OBJECT;
	.var _err2arr[52];
._err2arr.end:
	.align 1;
_inputRfil_n:
	.global _inputRfil_n;
	.type _inputRfil_n,STT_OBJECT;
	.var ..TW37[1] =
		 0x00000000;
._inputRfil_n.end:
	.align 1;
_inputH_n:
	.global _inputH_n;
	.type _inputH_n,STT_OBJECT;
	.var ..TW38[1] =
		 0x00000000;
._inputH_n.end:
	.align 2;
	.global _inputH;
	.type _inputH,STT_OBJECT;
	.var _inputH[2001];
._inputH.end:
	.align 2;
_coefs_filter_3:
	.global _coefs_filter_3;
	.type _coefs_filter_3,STT_OBJECT;
	.var ..TW39[500] =
		 0x388F6815, 0x37D2C85A, 0xB90C77C3, 0xB94006EA,
		 0x37914E2D, 0x3909BD00, 0xB81E82B6, 0xB8BB89F1,
		 0x37FC0901, 0x380D0277, 0xB793DD6F, 0x37CC64A6,
		 0x3891E1D0, 0x382121F4, 0x372ACC24, 0xB689BAA2,
		 0x378B9B6E, 0x385322CD, 0x3738C81A, 0xB5EDD9E6,
		 0x37F2BA52, 0x388B2278, 0x38AD9539, 0xB786774C,
		 0xB8E22671, 0xB786E68B, 0x388184F2, 0x37E6D506,
		 0x37F0723E, 0x38588A0D, 0xB83F12BD, 0xB9160146,
		 0xB7902992, 0x38C57943, 0xB84B4996, 0xB8D046DF,
		 0x384A66D2, 0x38DF27C9, 0x388F5F38, 0x3929FE2C,
		 0x39874BD9, 0xBA12F5E5, 0xBB1101E6, 0xBABA0FC1,
		 0x3B3974C8, 0x3BAAC2C3, 0x3B2738A3, 0xBB097157,
		 0xBB745E2F, 0xB9957806, 0x3B538932, 0x3AFCF645,
		 0xBAEBED45, 0xBB877FF8, 0xBB61BDD9, 0x3702ADBB,
		 0x3B07B71C, 0x399BA535, 0xBAB74E89, 0xBA78A4D6,
		 0xB9C27871, 0x39266B8C, 0x3A56A844, 0x3A1582EA,
		 0xB93DD3F4, 0xBA100CCA, 0xBA07A51E, 0x398B2775,
		 0x3A936156, 0xB6C15472, 0xBADE08FA, 0xBA81C992,
		 0x3A22B8EE, 0x3A9D1750, 0x3A188D3A, 0xBA3439E3,
		 0xBA27C16D, 0x3A01D16B, 0x3A747801, 0x3A234B07,
		 0x398F3990, 0x3A818A32, 0x3AB6F4CC, 0xB9FABB5F,
		 0xBAD2094A, 0x39BDD5B7, 0x3AFB4424, 0x39FDAF16,
		 0xBAAD86F1, 0xBA2F943E, 0x3A5A89D7, 0x3A23F765,
		 0xB8EEB7A8, 0x399959DC, 0x39EE9058, 0xB9D0304A,
		 0xB93439C4, 0x3AA7C228, 0x3A8E6EF2, 0xBA2DC297,
		 0xBA496D87, 0x3A4EB318, 0x3A936CFC, 0xB9A01FB9,
		 0xBAA3B181, 0xB91136D4, 0x3A9536A4, 0x39BEF992,
		 0xBA4883FE, 0xBA032A32, 0xB990EF47, 0xBA050800,
		 0xB9CD9C85, 0xBA4FEF8F, 0xBA8CB510, 0x39AB2881,
		 0x3AD3B991, 0x3A37916D, 0xBA6A60AD, 0xBA8FF84A,
		 0xBA160A85, 0xB9BBC43D, 0xB77A32CC, 0x3A4C0CB9,
		 0x3AC2A3DF, 0x3A2D0A8B, 0xBAB66353, 0xBAF019C1,
		 0xBA575986, 0xBA185869, 0xB9327FAC, 0x3AB3C9D8,
		 0x3ACF98C3, 0xB9BAA5A9, 0xBABA17AE, 0xBA0C6A45,
		 0x394D7A5C, 0x396343DC, 0x3A1EE56B, 0x3A72D667,
		 0x3883AB85, 0xBA56F32C, 0xB99C1AD0, 0x39A53F7B,
		 0xB9840D47, 0xBA81D0BD, 0xBA1C450E, 0x3A3B69B5,
		 0x3A9CF1F3, 0x399354F7, 0xBA09E48F, 0xBA2B9D90,
		 0xBA5C3CF7, 0xBA121509, 0x3A8314CC, 0x3AFAB316,
		 0x39BFD2BF, 0xBA9AC7E2, 0xBA1D9105, 0xB8AAEB43,
		 0xBA1D6EE6, 0xB915B83D, 0x3A4E265E, 0x39E33594,
		 0xB9D89E1F, 0xBA05165E, 0x38B9B5CD, 0x39FE151E,
		 0x3976576B, 0x38BF2E4F, 0x39D7233B, 0x39B1CCEC,
		 0xB9524F81, 0xB9A3C899, 0x39D0A595, 0x3A5A4AA3,
		 0x387AFD0B, 0xB9DED577, 0xB932EC4B, 0xB926C700,
		 0x38E0E04C, 0x3A25F178, 0x3A655EC0, 0x3A2E32D5,
		 0xB936ED5C, 0xBA2F3779, 0xB9A7E246, 0x369DB8B5,
		 0x39D6BEFD, 0x3A3F13EE, 0xB88CD7DB, 0xBAA7C3AD,
		 0xBA93A0BF, 0x382A0CE1, 0x39C308FE, 0xB94BDE26,
		 0xB994FC62, 0x39D41986, 0x3A127351, 0xB9B56457,
		 0xBA5E62F1, 0xB9953B98, 0x39AEEAE1, 0x39932544,
		 0x393F1735, 0x39F1C8E7, 0xB809231F, 0xBA93887B,
		 0xBA451464, 0x3A476A0D, 0x3A41BB0E, 0xBA147155,
		 0xBA1A017B, 0x39A51A76, 0x398AD184, 0xB9A4CF25,
		 0xB980A3FB, 0x3915C157, 0x3949671D, 0x3979785B,
		 0x39E6ACC2, 0x39E9692F, 0x38E7E48D, 0xB9B35FC1,
		 0xB9DD8990, 0xB876D8A1, 0x383D9CB1, 0x38940B30,
		 0x3A2CF338, 0x3A8B06CB, 0x39E9833A, 0xBA2D4406,
		 0xBA83B9A7, 0xB9B036E4, 0x39480C59, 0x3638E4F1,
		 0xB932E64C, 0x3935D085, 0x3A042CCA, 0x38B41BD9,
		 0xBA2108B1, 0xBA16D4EE, 0xB76BFF8B, 0x39606C71,
		 0x37CABF5E, 0xB946D549, 0xB9536658, 0x37B803F8,
		 0x39A7A3A3, 0x391B64DD, 0xB9ACE2DA, 0xB9C2808A,
		 0xB815739B, 0x3A202000, 0x3A4B3262, 0xB99D5CFC,
		 0xBA78E542, 0xB8B8C71D, 0x3A37E3E1, 0x38D7C7D8,
		 0xBA0C6027, 0x3913FF7D, 0x3A803D9E, 0x39FEF2C5,
		 0xBA20C48E, 0xBA203C3C, 0x392AFB7D, 0x39E2CF9D,
		 0x3A0683A5, 0x3A225E53, 0x3929A4C8, 0xB9D49D34,
		 0xB9995030, 0x3865FDCB, 0x3807F981, 0xB7C10D39,
		 0x39BCE2AA, 0x3A3B9561, 0x39540FDB, 0xBA3DCC86,
		 0xBA545510, 0x372F7B34, 0x394A28E5, 0xBA1B4B2A,
		 0xB984D1DA, 0x3A404827, 0xB91FAB5A, 0xBA9646DB,
		 0x391EC671, 0x3A9C03EC, 0xB8B70230, 0xBA8FF8E7,
		 0xB98E1016, 0x39CF5B48, 0x383334D2, 0xB98E6382,
		 0xB9316A33, 0xB81109A4, 0xB96835D7, 0xB97E8AE7,
		 0x399F6819, 0x39B83758, 0xB9C8CB2F, 0xB9FC9F83,
		 0x3998AF30, 0x3A0754F4, 0xB82B6ECE, 0xB9E2F31C,
		 0xBA073F95, 0xB9EE3DB3, 0x38D50B4F, 0x3A4EB75D,
		 0x39DF7CA7, 0xBA1B27AD, 0xB9EDB037, 0x3A03AE98,
		 0x39679FD8, 0xBA7115A2, 0xBA1714D8, 0x3A60EF42,
		 0x3A828A35, 0x38855C3E, 0xBA078824, 0xBA11C227,
		 0xB6AA11CA, 0x3A274975, 0x3A3459F5, 0x3977597B,
		 0x386CDF14, 0x39C32505, 0x395E0A64, 0xB8F84C31,
		 0x38E60EB4, 0xB8230BF4, 0xB9F5BB8A, 0xB98C8475,
		 0x3810388D, 0xB7EF98ED, 0xB991DE46, 0xB926107C,
		 0x39BF3AAC, 0x39AA59C8, 0xB90FAD4B, 0xB901D019,
		 0x395AF0DC, 0x394D17B3, 0x390218D0, 0x39E2F2D9,
		 0x3982289E, 0xBA04D10A, 0xB999C0DC, 0x39B39944,
		 0x3947EA4E, 0x38FE3DCB, 0x3984F6C9, 0xB829B289,
		 0xB90DCBB9, 0x391D6296, 0x395D6495, 0x390E8249,
		 0x38FBC1EA, 0x3829FC74, 0x3958A369, 0x3985002F,
		 0xB9C7AEF6, 0xBA196112, 0x38036EA5, 0x395406B2,
		 0xB86D3A47, 0x38924471, 0xB9217B02, 0xBA7BA9DB,
		 0xBA200CD6, 0x3A338A12, 0x3A1C9015, 0xB9FF5DEA,
		 0xB9E556E0, 0x39043ED0, 0xB99E9853, 0xBA36A6E2,
		 0x38D9A840, 0x3A843346, 0x39B83360, 0xBA835A8F,
		 0xBA5825A6, 0x39880DF8, 0x39F48E1A, 0x3910C7F3,
		 0x383C0D55, 0x38FA44F3, 0x3890313D, 0x35C806D4,
		 0xB8A62C42, 0xB9B8A2F1, 0xB9D2B360, 0xB931227C,
		 0x3665400B, 0x3883C46D, 0x38CEBB43, 0xB8A4A44A,
		 0xB9F79998, 0xB9C6F80A, 0x3725734A, 0x3851FD81,
		 0x397E978F, 0x3A030282, 0x393408F9, 0xB926845E,
		 0x39043BB2, 0x3A08F796, 0x39BE2843, 0xB828DABE,
		 0x394794CE, 0x3A0A02B4, 0xB847FDB7, 0xB9F26BFC,
		 0x38BE5326, 0x38AD3D23, 0xBA0BE8A0, 0xB9947A7C,
		 0x384C9B2A, 0xB9B54FC0, 0xB9B0B2D5, 0x39B23CF8,
		 0x3A0DD206, 0x3926B48A, 0x38BCC059, 0x39AF1D5B,
		 0x398B4289, 0xB8C03B0B, 0x374A9600, 0x39CA3F35,
		 0xB7F3DFF3, 0xB9ED71C0, 0x38BCF2CC, 0x39FC8588,
		 0x386B9D89, 0xBA0637E3, 0xBA294F71, 0xB98DBB7E,
		 0x397E38DD, 0x39AE0F73, 0x38DC2170, 0x37F9E1B0,
		 0xB9915B86, 0xBA345F2D, 0xB8AF0F6B, 0x3A538BD7,
		 0x39D53931, 0xB9915288, 0xB8650D9A, 0xB8219C24,
		 0xBA1155AB, 0xB9B3DB89, 0x39D2647A, 0x39ED9060,
		 0x3831755B, 0xB9377FFC, 0xB9D12146, 0xB9A46A40,
		 0x396D16F3, 0x3A0094CC, 0x397DED0C, 0xB93C20A0,
		 0xB9BF3B6F, 0xB6BC1BEC, 0x39A7064E, 0x390B4C21,
		 0xB8EAE27F, 0xB9B9F691, 0xB9C2C8B9, 0x397EEC34,
		 0x3A218C1D, 0x3997188E, 0x392A0E63, 0x39BA17E1,
		 0xB8A17E6C, 0xBA798A40, 0xBA5C634A, 0x3989082B,
		 0x3A4ADCE1, 0x39FA307E, 0x39417AD2, 0xB8F3FAE1,
		 0xBA05FBF7, 0xB9F2CD5C, 0x38D5B13C, 0x39E7D027,
		 0x398941F0, 0xB8055625, 0xB9102E8A, 0xB90D5BAF,
		 0xB91C54AF, 0xB936B778, 0xB7FC3436, 0x3A0DE52E,
		 0x3A3B07D3, 0xB94BFD22, 0xBA410BC3, 0xB9200A33;
._coefs_filter_3.end:
	.align 1;
_mu3:
	.global _mu3;
	.type _mu3,STT_OBJECT;
	.var ..TW40[1] =
		 0x38D1B717;
._mu3.end:
	.align 1;
_yn3:
	.global _yn3;
	.type _yn3,STT_OBJECT;
	.var ..TW41[1] =
		 0x00000000;
._yn3.end:
	.align 1;
_err3:
	.global _err3;
	.type _err3,STT_OBJECT;
	.var ..TW42[1] =
		 0x00000000;
._err3.end:
	.align 1;
_yfila3:
	.global _yfila3;
	.type _yfila3,STT_OBJECT;
	.var ..TW43[1] =
		 0x00000000;
._yfila3.end:
	.align 1;
_noiseFlag:
	.global _noiseFlag;
	.type _noiseFlag,STT_OBJECT;
	.var ..TW44[1] =
		 0x00000000;
._noiseFlag.end:
	.align 1;
_RightInPrev:
	.global _RightInPrev;
	.type _RightInPrev,STT_OBJECT;
	.var ..TW45[1] =
		 0x00000000;
._RightInPrev.end:
	.align 1;
_alpha:
	.global _alpha;
	.type _alpha,STT_OBJECT;
	.var ..TW46[1] =
		 0x3727C5AC;
._alpha.end:

	.align 4;
	.var _input1R[501];
	.weak _input1R;
	.align 4;
	.var _input1L[501];
	.weak _input1L;
	.align 4;
	.var _input2R[2001];
	.weak _input2R;
	.align 4;
	.var _input2L[2001];
	.weak _input2L;
	.align 4;
	.var _input3R[501];
	.weak _input3R;
	.align 4;
	.var _input3L[501];
	.weak _input3L;
	.align 4;
	.var _input1R2[501];
	.weak _input1R2;
	.align 4;
	.var _input2R2[2001];
	.weak _input2R2;
	.align 1;
	.var _j[1];
	.weak _j;
	.align 1;
	.var _k[1];
	.weak _k;
	.align 1;
	.var _k_input[1];
	.weak _k_input;
	.align 1;
	.var _ix[1];
	.weak _ix;
	.align 1;
	.var _out_2[1];
	.weak _out_2;
	.align 1;
	.var _inRdata[1];
	.weak _inRdata;
	.align 1;
	.var _inLdata[1];
	.weak _inLdata;
	.align 1;
	.var _inNoise[1];
	.weak _inNoise;
	.align 2;
	.var _inNoiseArray1[501];
	.weak _inNoiseArray1;
	.align 2;
	.var _inNoiseArray3[501];
	.weak _inNoiseArray3;
	.align 2;
	.var _un1[500];
	.weak _un1;
	.align 2;
	.var _coefs_filter_2[2000];
	.weak _coefs_filter_2;
	.align 2;
	.var _un2[2000];
	.weak _un2;
	.align 2;
	.var _inputRfil[52];
	.weak _inputRfil;
	.align 2;
	.var _yn2array[501];
	.weak _yn2array;
	.align 2;
	.var _noise1[501];
	.weak _noise1;
	.align 2;
	.var _noise2[2001];
	.weak _noise2;
	.align 2;
	.var _noise3[501];
	.weak _noise3;
	.align 1;
	.var _noise_n[1];
	.weak _noise_n;
	.align 2;
	.var _noise[2000];
	.weak _noise;

	.extern _isProcessing;
	.type _isProcessing,STT_OBJECT;
	.extern _rightIn;
	.type _rightIn,STT_OBJECT;
	.extern _inputR;
	.type _inputR,STT_OBJECT;
	.extern _inputL;
	.type _inputL,STT_OBJECT;
	.extern _out_1;
	.type _out_1,STT_OBJECT;
	.extern _i_dec;
	.type _i_dec,STT_OBJECT;
