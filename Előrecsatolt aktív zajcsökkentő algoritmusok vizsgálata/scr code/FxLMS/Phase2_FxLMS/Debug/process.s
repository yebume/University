	.file "process.c";

//  Compilation time: Mon Nov 20 17:28:55 2023


//  Compiler options: -c -file-attr ProjectName=FxLMS_with_A3_interpol -O -Ov100 -g -save-temps -path-output Debug -ED -no-multiline -double-size-32 -flags-compiler --diag_warning,implicit_func_decl -warn-protos -force-circbuf -proc ADSP-21364 -o Debug\process.doj -MM

//  Architecture: ADSP-21364

//  Silicon revision: 0.2

	.section/pm/DOUBLE32 seg_pmco;

.epctext:
_handle_LED:
.LN_handle_LED:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r1-r2,r8,r12,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":572
	modify(i7,-2); 
// Diagnostic: Optimizer now optimizing for speed
	r2=m13; 
	r8=r2+1, r12=i6; 
.LN1:
// line 575
	r1=-2; 
	r12=r12+r1, dm(-2,i6)=r4; 
	dm(6144)=r2; 
	dm(6168)=r12; 
	dm(6169)=r8; 
	dm(6170)=r8; 
	dm(6161)=r8; 
.LN2:
// line 580
	r2=4194304; 
	dm(6162)=r8; 
.LN3:
// line 582
	r12=871; 
	dm(6160)=r2; 
	dm(6144)=r12; 
.LN4:
// line 583
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._handle_LED.end:
._handle_LED.end:
	.global _handle_LED;
	.type _handle_LED,STT_FUNC;

_readDAIpin:
.LN_readDAIpin:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,r2,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":553
	modify(i7,-2); 
.LN5:
// line 556
		f2 = flags;
	
	r2=dm(9401); 
.LN6:
// line 565
	r0=r2 and r4; 
.LN7:
// line 567
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._readDAIpin.end:
._readDAIpin.end:
	.global _readDAIpin;
	.type _readDAIpin,STT_FUNC;

_flagTest:
.LN_flagTest:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":538
	modify(i7,-2); 
.LN8:
// line 541
		 r2 = flags;
	
.LN9:
// line 547
	r0=r4 and r2; 
.LN10:
// line 549
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._flagTest.end:
._flagTest.end:
	.global _flagTest;
	.type _flagTest,STT_FUNC;

_process:
.LN_process:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 14 words
//
//   Scratch registers used:{r0-r2,r4,r8,r12,i4,i12,m4,s0,s2,s4,acc,mcc,scc,lcntr}
//
//   Call preserved registers used:{r3,r5-r7,r9,r13,i0-i3,l3,b3,m0}
//
//   Registers clobbered by function calls:{r0-r2,r4,r8,r12,i4,i12-i13,b4,b12-b13,m4,m12,s0-s15,ustat1-ustat4,acc,mcc,scc,btf,lcntr,smrf,smrb,sacc,smcc,sscc,sbtf}
//
//   Registers used in mul add instructions:{r1-r2,r4,r8-r9,r12-r13}
//-------------------------------------------------------------------
// line "process.c":156
	modify(i7,-14); 
	r2=b3; 
	dm(-9,i6)=r2; 
	r2=m0; 
	dm(-8,i6)=r2; 
	r2=i0; 
	dm(-7,i6)=r2; 
	r2=i1; 
	dm(-6,i6)=r2; 
	r2=i2; 
	dm(-5,i6)=r2; 
	r2=i3; 
	dm(-15,i6)=r3; 
	dm(-14,i6)=r5; 
	dm(-13,i6)=r6; 
	dm(-12,i6)=r7; 
	dm(-11,i6)=r9; 
	dm(-10,i6)=r13; 
	dm(-4,i6)=r2; 
	r6=m14; 
// Diagnostic: Optimizer now optimizing for speed
.LN11:
// line 159
	dm(_isProcessing)=r6; 
.LN12:
// line 174
	r3=524288; 
.LN13:
// line 162
	cjump _setDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	r4=r3; 
.LN14:
// line 174
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN15:
// line 175
	r2=8; 
	r8=dm(_led_value); 
	r2=r8 or r2, r12=m14; 
.LN16:
// line 177
	r1=-9; 
.LN17:
// line 174
	r4=pass r0; 
	if le r2=r8 and r1; 
.LN18:
// line 181
	r4=262144; 
.LN19:
// line 175
	dm(_led_value)=r2; 
.LN20:
// line 181
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN21:
// line 182
	r5=4; 
	r8=dm(_led_value); 
	r2=r8 or r5; 
.LN22:
// line 184
	r3=-5; 
.LN23:
// line 181
	r4=pass r0; 
	if le r2=r8 and r3; 
.LN24:
// line 188
	r4=16; 
.LN25:
// line 182
	dm(_led_value)=r2; 
.LN26:
// line 188
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN27:
// line 189
	r1=2; 
	r7=dm(_led_value); 
	r2=r7 or r1, r4=r5; 
.LN28:
// line 191
	r8=-3; 
.LN29:
// line 188
	r0=pass r0; 
	if eq r2=r7 and r8; 
.LN30:
// line 189
	dm(_led_value)=r2; 
.LN31:
// line 195
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN32:
// line 196
	r7=dm(_led_value); 
	r2=r7 or r12; 
.LN33:
// line 198
	r12=-2; 
.LN34:
// line 195
	r4=pass r0; 
	if eq r2=r7 and r12; 
.LN35:
// line 202
	r4=16; 
.LN36:
// line 196
	dm(_led_value)=r2; 
.LN37:
// line 202
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN38:
	r2=pass r0; 
	if eq jump(pc,.P4L198) (DB); 
	r4=r5; 
	nop; 
.LN39:
	r2=dm(_delayCtnr); 
	r2=r2+1; 
	dm(_delayCtnr)=r2; 
	r4=r5; 

.P4L198:
.LN40:
// line 203
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN41:
	r2=pass r0; 
	if eq jump(pc,.P4L199) (DB); 
.LN42:
// line 204
	r4=524288; 
	nop; 
.LN43:
// line 203
	r2=dm(_delayCtnr2); 
	r2=r2+1; 
	dm(_delayCtnr2)=r2; 
.LN44:
// line 204
	r4=524288; 

.P4L199:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN45:
	r2=pass r0; 
	if gt jump(pc,.P4L5) (DB); 
.LN46:
	r4=262144; 
	nop; 

.P4L6:
.LN47:
// line 205
	r4=524288; 

.P4L220:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN48:
	r2=pass r0; 
	if le jump(pc,.P4L200) (DB); 
.LN49:
// line 206
	r4=262144; 
	nop; 
.LN50:
// line 205
	r2=dm(_delayCtnr4); 
	r2=r2+1; 
	dm(_delayCtnr4)=r2; 
.LN51:
// line 206
	r4=262144; 

.P4L200:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN52:
	r2=pass r0; 
	if le jump(pc,.P4L201) (DB); 
.LN53:
// line 210
	r4=16; 
	nop; 
.LN54:
// line 206
	r2=dm(_delayCtnr5); 
	r2=r2+1; 
	dm(_delayCtnr5)=r2; 
.LN55:
// line 210
	r4=16; 

.P4L201:
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN56:
	r2=pass r0; 
	if ne jump(pc,.P4L202) (DB); 
	r4=r5; 
	nop; 
	r2=dm(_delayCtnr); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L203) (DB); 
	r4=r5; 
	nop; 
.LN57:
// line 212
	r2=dm(_fxlmsFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L16) (DB); 
.LN58:
// line 211
	dm(_delayCtnr)=r2; 
	nop; 
.LN59:
// line 212
	dm(_fxlmsFlag)=r6; 

.P4L13:
	r4=r5; 

.P4L203:

.P4L202:
.LN60:
// line 217
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN61:
	r2=pass r0; 
	if ne jump(pc,.P4L204) (DB); 
.LN62:
// line 225
	r4=262144; 
	nop; 
.LN63:
// line 217
	r2=dm(_delayCtnr2); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L205) (DB); 
.LN64:
// line 225
	r4=262144; 
	nop; 
.LN65:
// line 219
	r2=dm(_identFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L21) (DB); 
.LN66:
// line 218
	dm(_delayCtnr2)=r2; 
	nop; 
.LN67:
// line 219
	dm(_identFlag)=r6; 

.P4L18:
.LN68:
// line 225
	r4=262144; 

.P4L205:

.P4L204:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN69:
	r2=pass r0; 
	if le jump(pc,.P4L206) (DB); 
.LN70:
// line 251
	r4=524288; 
	nop; 
.LN71:
// line 225
	r4=dm(_resetFlag); 
	r2=m14; 
	comp(r4, r2); 
	if ne jump(pc,.P4L207) (DB); 
.LN72:
// line 251
	r4=524288; 
	nop; 
	r2=r2-1; 
.LN73:
// line 227
	r4=dm(_mu2def); 
.LN74:
// line 230
	dm(_err2)=r2; 
.LN75:
// line 229
	dm(_yfila3)=r2; 
.LN76:
// line 228
	dm(_inputRfil_n)=r2; 
.LN77:
// line 226
	dm(_fxlmsFlag)=r2; 
.LN78:
// line 227
	dm(_mu2)=r4; 
.LN79:
// line 231
	bit set mode1 0x200000; nop; 
	i4=_coefs_filter_2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L28-1)until lce; 

.P4L27:
//-------------------------------------------------------------------
//   Loop at "process.c" line 231 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 1 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   1 out of    1 (100.0%)
//     dm dag                          used   1 out of    1 (100.0%)
//     pm dag                          used   1 out of    1 (100.0%)
//     shift immediate                 used   1 out of    1 (100.0%)
//     memory access                   used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
.LN80:
// line 232
	dm(i4,2)=r2; 
.LN81:
// line 231
	//end loop .P4L27; 
//-------------------------------------------------------------------
//   End Loop L27
//-------------------------------------------------------------------

.P4L28:

.P4L31:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN82:
// line 234
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray1; 
	i0=_input1R2; 
	r2=m13; 
	lcntr=250, do(pc,.P4L36-1)until lce; 

.P4L35:
//-------------------------------------------------------------------
//   Loop at "process.c" line 234 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN83:
// line 235
	dm(i0,2)=r2; 
.LN84:
// line 236
	dm(i4,2)=r2; 
.LN85:
// line 234
	//end loop .P4L35; 
//-------------------------------------------------------------------
//   End Loop L35
//-------------------------------------------------------------------

.P4L36:

.P4L39:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN86:
// line 235
	dm(m5,i0)=m13; 
.LN87:
// line 236
	dm(m5,i4)=m13; 
.LN88:
// line 239
	bit set mode1 0x200000; nop; 
	i4=_inputRfil; 
	i0=_input2R2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L44-1)until lce; 

.P4L43:
//-------------------------------------------------------------------
//   Loop at "process.c" line 239 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN89:
// line 240
	dm(i0,2)=r2; 
.LN90:
// line 241
	dm(i4,2)=r2; 
.LN91:
// line 239
	//end loop .P4L43; 
//-------------------------------------------------------------------
//   End Loop L43
//-------------------------------------------------------------------

.P4L44:

.P4L47:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN92:
// line 240
	dm(m5,i0)=m13; 
.LN93:
// line 241
	dm(m5,i4)=m13; 
.LN94:
// line 244
	bit set mode1 0x200000; nop; 
	r4=m13; 
	i4=_inNoiseArray3; 
	i0=_yn2array; 
.LN95:
	r0=2; 
	r2=r4; 
.LN96:
	lcntr=250, do(pc,.P4L52-1)until lce; 

.P4L51:
//-------------------------------------------------------------------
//   Loop at "process.c" line 244 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//     multifunction alu               used   1 out of    2 ( 50.0%)
//     multifunction float multiply    used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN97:
	r2=r2+r0, dm(i0,2)=r4; 
.LN98:
// line 246
	dm(i4,2)=r4; 
.LN99:
// line 244
	//end loop .P4L51; 
//-------------------------------------------------------------------
//   End Loop L51
//-------------------------------------------------------------------

.P4L52:

.P4L55:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN100:
	r2=r2+1; 
.LN101:
// line 245
	dm(m5,i0)=m13; 
.LN102:
// line 246
	dm(m5,i4)=m13; 
.LN103:
// line 244
	dm(_k)=r2; 
.LN104:
// line 251
	r4=524288; 

.P4L207:

.P4L206:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN105:
	r2=pass r0; 
	if le jump(pc,.P4L57) (DB); 
.LN106:
	r4=262144; 
	nop; 

.P4L58:
.LN107:
// line 258
	r2=dm(_resetFlag); 

.P4L219:
	r2=pass r2; 

.P4L218:

.P4L217:
	if eq jump(pc,.P4L63) (DB); 
.LN108:
	r4=524288; 
	nop; 

.P4L64:
.LN109:
// line 264
	r2=dm(_resetFlag); 
	r2=pass r2; 

.P4L216:

.P4L215:
	if eq jump(pc,.P4L67) (DB); 
.LN110:
	r4=262144; 
	nop; 

.P4L68:
.LN111:
// line 271
	r4=dm(_resetFlag); 
	r2=m14; 

.P4L214:

.P4L213:
	comp(r4, r2); 
	if ne jump(pc,.P4L72) (DB); 
.LN112:
// line 272
	r2=dm(_led_value); 
	nop; 
.LN113:
// line 275
	r4=240; 
	r2=r2 or r4; 

.P4L73:
	r4=m14; 
.LN114:
// line 285
	r6=dm(_identFlag); 
.LN115:
// line 286
	r0=r2 or r4; 
.LN116:
// line 285
	comp(r6, r4); 
	if ne r0=r2 and r12; 
.LN117:
// line 293
	r12=dm(_fxlmsFlag); 
.LN118:
// line 294
	r2=r0 or r1; 
.LN119:
// line 293
	comp(r12, r4); 
	if ne r2=r0 and r8; 
.LN120:
// line 301
	r8=dm(_ident3Flag); 
.LN121:
// line 302
	r12=r2 or r5; 
.LN122:
// line 301
	comp(r8, r4); 
	if ne r12=r2 and r3; 
.LN123:
// line 313
	comp(r6, r4); 
	if eq jump(pc,.P4L74) (DB); 
.LN124:
// line 302
	dm(_led_value)=r12; 
	nop; 
	r2=m14; 
.LN125:
// line 313
	comp(r8, r2); 
	if eq jump(pc,.P4L74); 

.P4L76:
.LN126:
// line 329
	r2=dm(_m1); 
	r2=r2-1; 
.LN127:
// line 330
	r12=pass r2; 
	if ge jump(pc,.P4L208) (DB); 
.LN128:
// line 329
	dm(_m1)=r2; 
.LN129:
// line 335
	r2=dm(_m2); 
.LN130:
// line 332
	r2=499; 
	dm(_m1)=r2; 
.LN131:
// line 335
	r2=dm(_m2); 

.P4L208:
	r2=r2-1; 
.LN132:
// line 336
	r12=pass r2; 
	if ge jump(pc,.P4L209) (DB); 
.LN133:
// line 335
	dm(_m2)=r2; 
.LN134:
// line 341
	r2=dm(_m3); 
.LN135:
// line 338
	r2=1999; 
	dm(_m2)=r2; 
.LN136:
// line 341
	r2=dm(_m3); 

.P4L209:
	r2=r2-1; 
.LN137:
// line 342
	r12=pass r2; 
	if ge jump(pc,.P4L82) (DB); 
.LN138:
// line 341
	dm(_m3)=r2; 
	nop; 
.LN139:
// line 344
	r2=499; 
	dm(_m3)=r2; 

.P4L82:
.LN140:
// line 352
	modify(i7,m7); 
	r3=41; 
	r12=_inputR; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	modify(i7,2); 
.LN141:
	dm(_inRdata)=r0; 
.LN142:
// line 353
	modify(i7,m7); 
	r12=_inputL; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN143:
// line 356
	i1=_inNoiseArray1; 
	r2=dm(_m1); 
.LN144:
// line 357
	r12=pass r2, i4=i1; 
.LN145:
// line 356
	m4=r2; 
.LN146:
// line 354
	r12=dm(_noise_n); 
.LN147:
// line 353
	modify(i7,2); 
.LN148:
	dm(_inLdata)=r0; 
.LN149:
// line 354
	dm(_inNoise)=r12; 
.LN150:
// line 357
	if ne jump(pc,.P4L84) (DB); 
.LN151:
// line 356
	modify(i4,m4); 
	dm(m4,i1)=r12; 
.LN152:
// line 359
	dm(_inNoiseArray1+500)=r12; 

.P4L84:
.LN153:
// line 361
	r2=dm(_m3); 
	i0=_inNoiseArray3; 
.LN154:
// line 362
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L210) (DB); 
.LN155:
// line 361
	dm(m4,i0)=r12; 
.LN156:
// line 370
	r2=dm(_i_tmp); 
.LN157:
// line 364
	dm(_inNoiseArray3+500)=r12; 
.LN158:
// line 370
	r2=dm(_i_tmp); 

.P4L210:
	r2=r2-1; 
.LN159:
// line 371
	r12=pass r2; 
.LN160:
// line 366
	r12=dm(_rightIn); 
.LN161:
// line 371
	if ge jump(pc,.P4L88) (DB); 
.LN162:
// line 370
	dm(_i_tmp)=r2; 
.LN163:
// line 366
	dm(_out_2)=r12; 
.LN164:
// line 373
	r2=99; 
	dm(_i_tmp)=r2; 

.P4L88:
.LN165:
// line 383
	m4=dm(_i_tmp); 
	F1=F0*F0, r2=m4; 
.LN166:
// line 378
	r8=99; 
	r4=pass r2, r12=m14; 
.LN167:
// line 383
	i2=_buff_tmp; 
	if ne r8=r2-1; 
.LN168:
// line 384
	m0=r8; 
.LN169:
// line 383
	dm(m4,i2)=r1; 
.LN170:
// line 384
	r4=1008981770; 
	r13=dm(m0,i2); 
	r5=1120403456; 
	F9=F13*F4; 
	F8=F9*F5; 
	F2=F1*F4, F8=F8-F13; 
	F13=F8*F4; 
	F8=F2*F5, F13=F9-F13; 
	r9=dm(_performance); 
	F1=F8-F1; 
	F8=F1*F4, F4=F9-F13; 
	F2=F2-F8; 
.LN171:
// line 397
	r8=dm(_identFlag); 
	comp(r8, r12); 
	if eq jump(pc,.P4L89) (DB); 
.LN172:
// line 384
	F2=F4+F2; 
	dm(_performance)=r2; 

.P4L90:
.LN173:
// line 427
	r12=dm(_ident3Flag); 
	r2=m14; 
	comp(r12, r2); 
	if eq jump(pc,.P4L95) (DB); 
.LN174:
// line 431
	r5=500; 
	nop; 

.P4L96:
.LN175:
// line 455
	r2=dm(_fxlmsFlag); 
	r12=m14; 
	comp(r2, r12); 
	if eq jump(pc,.P4L101) (DB); 
.LN176:
// line 459
	r2=dm(_m1); 
	r8=dm(_inRdata); 

.P4L102:
.LN177:
// line 505
	r12=dm(_identFlag); 
	r2=m14; 
	comp(r12, r2); 
	if ne jump(pc,.P4L211) (DB); 
.LN178:
// line 509
	r12=dm(_fxlmsFlag); 
	r2=m14; 
.LN179:
// line 506
	m4=dm(_m1); 
	r2=dm(m4,i1); 
	dm(_out_1)=r2; 
.LN180:
// line 509
	r12=dm(_fxlmsFlag); 
	r2=m14; 

.P4L211:
	comp(r12, r2); 
	if ne jump(pc,.P4L212) (DB); 
.LN181:
// line 512
	r12=dm(_ident3Flag); 
	r2=m14; 
.LN182:
// line 510
	r2=dm(_yn2); 
	dm(_out_1)=r2; 
.LN183:
// line 512
	r12=dm(_ident3Flag); 
	r2=m14; 

.P4L212:
	comp(r12, r2); 
	if ne jump(pc,.P4L119); 
.LN184:
// line 513
	m4=dm(_m3); 
	r2=dm(m4,i0); 
	dm(_out_1)=r2; 

.P4L119:
.LN185:
// line 531
	cjump _clrDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN186:
// line 532
	r4=dm(_led_value); 
	r0=m13; 
	cjump _handle_LED (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN187:
// line 536
	jump(pc,.P4L197) (DB); 
.LN188:
// line 535
	dm(_isProcessing)=r0; 
.LN189:
// line 536
	r3=dm(-15,i6); 

.P4L101:
.LN190:
// line 459
	r4=dm(_yfila3); 
	i4=_input1R2; 
	r3=r12-1, m4=r2; 
	F12=F8-F4; 
.LN191:
// line 460
	r2=pass r2; 
.LN192:
// line 459
	dm(m4,i4)=r12; 
.LN193:
// line 460
	if ne jump(pc,.P4L104) (DB); 
.LN194:
// line 457
	dm(_yn2)=r3; 
.LN195:
// line 459
	modify(i4,m4); 
.LN196:
// line 461
	dm(_input1R2+500)=r12; 

.P4L104:
.LN197:
// line 464
	r2=dm(_m2); 
	i2=_input2R2; 
.LN198:
// line 466
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L106) (DB); 
.LN199:
// line 464
	dm(m4,i2)=r12; 
	nop; 
.LN200:
// line 467
	dm(_input2R2+2000)=r12; 

.P4L106:
.LN201:
// line 470
	modify(i7,m7); 
	r5=500; 
	r12=_input1R2; 
	r8=i4; 
	r4=_coefs_filter_1; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN202:
// line 471
	r2=dm(_m2); 
	i4=_inputRfil; 
.LN203:
// line 472
	r2=pass r2, m4=r2; 
.LN204:
// line 470
	modify(i7,2); 
.LN205:
// line 472
	if ne jump(pc,.P4L108) (DB); 
.LN206:
// line 470
	dm(_inputRfil_n)=r0; 
.LN207:
// line 471
	dm(m4,i4)=r0; 
.LN208:
// line 473
	dm(_inputRfil+2000)=r0; 

.P4L108:
.LN209:
// line 476
	modify(i7,m7); 
	r6=2000; 
	r12=_input2R2; 
	dm(i7,m7)=r6; 
	dm(i7,m7)=r12; 
	r2=dm(_m2); 
	r4=_coefs_filter_2; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN210:
// line 478
	r2=dm(_m3); 
	i4=_yn2array; 
.LN211:
// line 476
	F12=-F0, m4=r2; 
.LN212:
// line 479
	r2=pass r2; 
.LN213:
// line 476
	modify(i7,2); 
.LN214:
// line 478
	dm(m4,i4)=r12; 
.LN215:
// line 479
	if ne jump(pc,.P4L110) (DB); 
.LN216:
// line 476
	dm(_yn2)=r12; 
.LN217:
// line 478
	modify(i4,m4); 
.LN218:
// line 480
	dm(_yn2array+500)=r12; 

.P4L110:
.LN219:
// line 492
	r3=r3+1, modify(i7,m7); 
.LN220:
// line 483
	r12=_yn2array; 
	r4=_coefs_filter_3; 
	r8=i4; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN221:
// line 490
	r12=dm(_performance); 
	r2=dm(_lambda); 
	F12=F12+F2; 
	F2=recips F12; 
	r8=1073741824; 
	r4=dm(_mu2_0); 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
.LN222:
// line 494
	r1=_inputRfil; 
.LN223:
// line 486
	r5=dm(_m2); 
	F2=F2*F4, F12=F8-F12; 
.LN224:
// line 494
	i2=_coefs_filter_2; 
	r8=r1+r5, i4=i2; 
.LN225:
// line 490
	F12=F12*F2; 
.LN226:
// line 484
	r4=dm(_inLdata); 
.LN227:
// line 494
	b3=r1; i3=r8; l3=2000; 
.LN228:
// line 490
	F2=F12+F2, r8=dm(i3,m6); 
.LN229:
// line 483
	dm(_yfila3)=r0; 
.LN230:
// line 490
	dm(_mu2)=r2; 
.LN231:
// line 494
	F1=F4*F2, r12=dm(i2,m6); 
.LN232:
// line 483
	modify(i7,2); 
.LN233:
// line 484
	dm(_err2)=r4; 
.LN234:
// line 494
	r0=r5+r6; 
	F2=F1*F8; 
	lcntr=1999, do(pc,.P4L196-1)until lce; 

.P4L190:
//-------------------------------------------------------------------
//   Loop at "process.c" line 492 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 1999
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN235:
// line 492
	r3=r3+1, dm(i4,m6)=r2; 
.LN236:
// line 494
	F2=F1*F12, r12=dm(i2,m6); 
	//end loop .P4L190; 
//-------------------------------------------------------------------
//   End Kernel for Loop L190
//-------------------------------------------------------------------

.P4L196:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	F2=F12+F2, l3=m13; 
.LN237:
// line 492
	dm(_k_input)=r0; 
	jump(pc,.P4L102) (DB); 
	dm(_k)=r3; 
.LN238:
// line 494
	dm(i4,m6)=r2; 

.P4L95:
.LN239:
// line 431
	r2=r2-1, modify(i7,m7); 
.LN240:
// line 436
	r3=r2+1, dm(i7,m7)=r5; 
.LN241:
// line 431
	r6=_inNoiseArray3; 
	r12=dm(_m3); 
	r8=r6+r12, dm(i7,m7)=r6; 
.LN242:
// line 430
	dm(_yn3)=r2; 
.LN243:
// line 431
	r12=dm(m6,i7); 
	r4=_coefs_filter_3; 
	modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN244:
// line 435
	r2=dm(_m3); 
.LN245:
// line 437
	r8=r6+r2; 
	i2=_coefs_filter_3; 
.LN246:
// line 432
	r12=dm(_inRdata); 
.LN247:
// line 437
	b3=r6; i3=r8; l3=500; 
	r4=dm(_mu3); 
.LN248:
// line 432
	F8=F12-F0, r1=dm(i3,m6); 
.LN249:
// line 437
	F4=F8*F4, i4=i2; 
	r5=r2+r5, r12=dm(i2,m6); 
.LN250:
// line 431
	modify(i7,2); 
.LN251:
	dm(_yn3)=r0; 
.LN252:
// line 432
	dm(_err3)=r8; 
.LN253:
// line 437
	F2=F4*F1; 
	lcntr=499, do(pc,.P4L187-1)until lce; 

.P4L181:
//-------------------------------------------------------------------
//   Loop at "process.c" line 436 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN254:
// line 436
	r3=r3+1, dm(i4,m6)=r2; 
.LN255:
// line 437
	F2=F4*F12, r12=dm(i2,m6); 
	//end loop .P4L181; 
//-------------------------------------------------------------------
//   End Kernel for Loop L181
//-------------------------------------------------------------------

.P4L187:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN256:
// line 443
	r8=dm(_delayCtnrIdnetLimit); 
	r4=715827883; 
	r4=r8*r4 (SSF), l3=m13; 
.LN257:
// line 441
	r1=dm(_delayCtnrIdnet); 
.LN258:
// line 443
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN259:
// line 437
	F2=F12+F2; 
.LN260:
// line 441
	r12=r1+1, dm(i4,m6)=r2; 
.LN261:
// line 443
	r2=r4-r8; 
	comp(r12, r2); 
.LN262:
// line 436
	dm(_k_input)=r5; 
.LN263:
// line 443
	if ne jump(pc,.P4L96) (DB); 
.LN264:
// line 436
	dm(_k)=r3; 
.LN265:
// line 441
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
.LN266:
// line 443
	jump(pc,.P4L96) (DB); 
	dm(_delayCtnrIdnet)=r2; 
.LN267:
	dm(_ident3Flag)=r2; 

.P4L89:
.LN268:
// line 400
	r5=500; 
	r2=r12-1, modify(i7,m7); 
.LN269:
// line 405
	r3=r2+1, dm(i7,m7)=r5; 
.LN270:
// line 400
	r4=_coefs_filter_1; 
	r8=i4; 
	r12=_inNoiseArray1; 
.LN271:
// line 399
	dm(_yn1)=r2; 
.LN272:
// line 400
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN273:
// line 406
	r2=_inNoiseArray1; 
.LN274:
// line 404
	r12=dm(_m1); 
.LN275:
// line 406
	r4=r2+r12; 
	i2=_coefs_filter_1; 
.LN276:
// line 401
	r8=dm(_inLdata); 
.LN277:
// line 406
	b3=r2; i3=r4; l3=500; 
	r1=dm(_mu1); 
.LN278:
// line 401
	F2=F8-F0, r8=dm(i3,m6); 
	dm(_err1)=r2; 
.LN279:
// line 406
	F4=F2*F1, i4=i2; 
	r1=r12+r5, r12=dm(i2,m6); 
.LN280:
// line 400
	modify(i7,2); 
.LN281:
	dm(_yn1)=r0; 
.LN282:
// line 406
	F2=F4*F8; 
	lcntr=499, do(pc,.P4L178-1)until lce; 

.P4L172:
//-------------------------------------------------------------------
//   Loop at "process.c" line 405 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN283:
// line 405
	r3=r3+1, dm(i4,m6)=r2; 
.LN284:
// line 406
	F2=F4*F12, r12=dm(i2,m6); 
	//end loop .P4L172; 
//-------------------------------------------------------------------
//   End Kernel for Loop L172
//-------------------------------------------------------------------

.P4L178:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN285:
// line 412
	r8=dm(_delayCtnrIdnetLimit); 
	r4=715827883; 
	r4=r8*r4 (SSF), l3=m13; 
.LN286:
// line 410
	r0=dm(_delayCtnrIdnet); 
.LN287:
// line 412
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN288:
// line 406
	F2=F12+F2; 
.LN289:
// line 410
	r12=r0+1, dm(i4,m6)=r2; 
.LN290:
// line 412
	r2=r4-r8; 
	comp(r12, r2); 
.LN291:
// line 405
	dm(_k_input)=r1; 
.LN292:
// line 412
	if ne jump(pc,.P4L90) (DB); 
.LN293:
// line 405
	dm(_k)=r3; 
.LN294:
// line 410
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
	r12=m14; 
.LN295:
// line 414
	dm(_delayCtnrIdnet)=r2; 
.LN296:
// line 415
	jump(pc,.P4L90) (DB); 
.LN297:
// line 413
	dm(_identFlag)=r2; 
.LN298:
// line 415
	dm(_ident3Flag)=r12; 

.P4L74:
.LN299:
// line 315
	cjump _rand (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN300:
// line 316
	r2=-822083584; 
.LN301:
// line 315
	r12=r0+r0; 
.LN302:
// line 316
	F1=recips F2; 
	r8=1073741824; 
.LN303:
// line 315
	F4=float r12; 
.LN304:
// line 316
	F13=F1*F2; 
	F4=F1*F4, F2=F8-F13; 
	F12=F2*F13; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
	F2=F2*F4, F12=F8-F12; 
	F12=F12*F2; 
	jump(pc,.P4L76) (DB); 
	F2=F12+F2; 
	dm(_noise_n)=r2; 

.P4L72:
.LN305:
// line 281
	jump(pc,.P4L73) (DB); 
	r4=-241; 
	r2=r2 and r4; 

.P4L67:
.LN306:
// line 264
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN307:
	r2=pass r0; 
	if gt jump(pc,.P4L213) (DB); 
.LN308:
// line 271
	r4=dm(_resetFlag); 
	r2=m14; 
.LN309:
// line 264
	r2=dm(_delayCtnr5); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L214) (DB); 
.LN310:
// line 271
	r4=dm(_resetFlag); 
	r2=m14; 
	r2=m13; 
.LN311:
// line 266
	r4=dm(_mu2); 
	r0=r2-1; 
	F4=scalb F4 by r0; 
	jump(pc,.P4L68) (DB); 
.LN312:
// line 265
	dm(_delayCtnr5)=r2; 
.LN313:
// line 266
	dm(_mu2)=r4; 

.P4L63:
.LN314:
// line 258
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN315:
	r2=pass r0; 
	if gt jump(pc,.P4L215) (DB); 
.LN316:
// line 264
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN317:
// line 258
	r2=dm(_delayCtnr4); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L216) (DB); 
.LN318:
// line 264
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN319:
// line 260
	r2=dm(_mu2); 
	F4=F2+F2, r2=m13; 
	jump(pc,.P4L64) (DB); 
	dm(_mu2)=r4; 
.LN320:
// line 259
	dm(_delayCtnr4)=r2; 

.P4L57:
.LN321:
// line 251
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN322:
	r2=pass r0; 
	if gt jump(pc,.P4L217) (DB); 
.LN323:
// line 258
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN324:
// line 251
	r2=dm(_delayCtnr3); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L218) (DB); 
.LN325:
// line 258
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN326:
// line 253
	comp(r2, r6), r2=m13; 
	if ne jump(pc,.P4L62) (DB); 
.LN327:
// line 252
	dm(_delayCtnr3)=r2; 
	nop; 
.LN328:
// line 253
	jump(pc,.P4L219) (DB); 
	dm(_resetFlag)=r2; 
.LN329:
// line 258
	r2=dm(_resetFlag); 

.P4L62:
.LN330:
// line 254
	jump(pc,.P4L58) (DB); 
	r2=m14; 
	dm(_resetFlag)=r2; 

.P4L21:
.LN331:
// line 220
	jump(pc,.P4L18) (DB); 
	r2=m13; 
	dm(_identFlag)=r2; 

.P4L16:
.LN332:
// line 213
	jump(pc,.P4L13) (DB); 
	r2=m13; 
	dm(_fxlmsFlag)=r2; 

.P4L5:
.LN333:
// line 204
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN334:
	r2=pass r0; 
	if le jump(pc,.P4L220) (DB); 
.LN335:
// line 205
	r4=524288; 
	nop; 
.LN336:
// line 204
	r2=dm(_delayCtnr3); 
	jump(pc,.P4L6) (DB); 
	r2=r2+1; 
	dm(_delayCtnr3)=r2; 

.P4L197:
.LN337:
// line 536
	r5=dm(-14,i6); 
	r6=dm(-13,i6); 
	r7=dm(-12,i6); 
	r9=dm(-11,i6); 
	r13=dm(-10,i6); 
	b3=dm(-9,i6); 
	m0=dm(-8,i6); 
	i0=dm(-7,i6); 
	i1=dm(-6,i6); 
	i2=dm(-5,i6); 
	i12=dm(m7,i6); 
	jump(m14,i12) (DB); 
	i3=dm(-4,i6); 
	rframe; 

.LN._process.end:
._process.end:
	.global _process;
	.type _process,STT_FUNC;

	.file_attr ProjectName="FxLMS_with_A3_interpol";
	.file_attr FuncName="_handle_LED";
	.file_attr FuncName="_readDAIpin";
	.file_attr FuncName="_flagTest";
	.file_attr FuncName="_process";
	.file_attr Content="CodeData";
.epctext.end:

	.extern _setDAIproc;
	.type _setDAIproc,STT_FUNC;
	.extern _conv_asm;
	.type _conv_asm,STT_FUNC;
	.extern _clrDAIproc;
	.type _clrDAIproc,STT_FUNC;
	.extern _rand;
	.type _rand,STT_FUNC;

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.var =
		0x01,0x11,0x01,0x03,0x08,0x13,0x0B,0x10,0x06,0x43,0x06,0x1B,
		0x08,0x25,0x08,0x42,0x0B,0x00,0x00,0x02,0x24,0x00,0x03,0x08,
		0x3E,0x0B,0x0B,0x0F,0x00,0x00,0x03,0x16,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x00,0x00,0x04,0x13,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x0B,0x0F,0x00,0x00,0x05,0x0D,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x38,0x09,0x00,0x00,0x06,0x15,0x01,0x01,0x13,
		0x03,0x08,0x32,0x0B,0x27,0x0C,0x00,0x00,0x07,0x15,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x27,0x0C,0x49,0x13,0x00,0x00,0x08,
		0x05,0x00,0x03,0x08,0x49,0x13,0x00,0x00,0x09,0x2E,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x3F,
		0x0C,0x20,0x0B,0x00,0x00,0x0A,0x05,0x00,0x03,0x08,0x49,0x13,
		0x02,0x09,0x34,0x0C,0x00,0x00,0x0B,0x0B,0x01,0x01,0x13,0x11,
		0x01,0x12,0x01,0x00,0x00,0x0C,0x2E,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x49,0x13,0x3F,0x0C,
		0x20,0x0B,0x00,0x00,0x0D,0x34,0x00,0x03,0x08,0x32,0x0B,0x49,
		0x13,0x02,0x09,0x2C,0x06,0x3F,0x0C,0x00,0x00,0x0E,0x01,0x01,
		0x01,0x13,0x49,0x13,0x00,0x00,0x0F,0x21,0x00,0x37,0x0F,0x22,
		0x0F,0x2F,0x0F,0x00,0x00,0x00;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.var =
		0xFA,0x0C,0x00,0x00,0x02,0x00;
	.var = .epcabbrev;
	.var =
		0x04,0x01,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x01;
	.var = .epcline;
	.var =
		0x00,0x00,0x00,0x00,0x45,0x3A,0x5C,0x4A,0x61,0x6B,0x61,0x62,
		0x5F,0x54,0x61,0x6D,0x61,0x73,0x5C,0x53,0x7A,0x61,0x6B,0x64,
		0x6F,0x6C,0x67,0x6F,0x7A,0x61,0x74,0x5C,0x32,0x33,0x2E,0x30,
		0x35,0x2E,0x33,0x31,0x5C,0x50,0x68,0x61,0x73,0x65,0x32,0x5F,
		0x46,0x78,0x4C,0x4D,0x53,0x00,0x43,0x2F,0x43,0x2B,0x2B,0x20,
		0x43,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,0x20,0x3A,0x20,0x53,
		0x48,0x41,0x52,0x43,0x20,0x76,0x65,0x72,0x73,0x69,0x6F,0x6E,
		0x20,0x37,0x2E,0x32,0x2E,0x30,0x2E,0x30,0x20,0x28,0x4D,0x61,
		0x79,0x20,0x20,0x31,0x20,0x32,0x30,0x30,0x36,0x20,0x32,0x33,
		0x3A,0x31,0x36,0x3A,0x34,0x31,0x29,0x0A,0x20,0x20,0x43,0x6F,
		0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,0x29,0x20,
		0x31,0x39,0x39,0x37,0x2D,0x32,0x30,0x30,0x36,0x20,0x41,0x6E,
		0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,
		0x2C,0x20,0x49,0x6E,0x63,0x2E,0x0A,0x20,0x20,0x43,0x6F,0x70,
		0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,0x29,0x20,0x31,
		0x39,0x39,0x38,0x2D,0x32,0x30,0x30,0x33,0x20,0x45,0x64,0x69,
		0x73,0x6F,0x6E,0x20,0x44,0x65,0x73,0x69,0x67,0x6E,0x20,0x47,
		0x72,0x6F,0x75,0x70,0x2C,0x20,0x49,0x6E,0x63,0x2E,0x0A,0x20,
		0x20,0x43,0x6F,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,
		0x63,0x29,0x20,0x31,0x39,0x39,0x37,0x2D,0x31,0x39,0x39,0x39,
		0x20,0x45,0x64,0x69,0x6E,0x62,0x75,0x72,0x67,0x68,0x20,0x50,
		0x6F,0x72,0x74,0x61,0x62,0x6C,0x65,0x20,0x43,0x6F,0x6D,0x70,
		0x69,0x6C,0x65,0x72,0x73,0x2C,0x20,0x4C,0x74,0x64,0x2E,0x0A,
		0x00,0x00,0x02,0x62,0x6F,0x6F,0x6C,0x00,0x02,0x01,0x02,0x77,
		0x63,0x68,0x61,0x72,0x5F,0x74,0x00,0x06,0x01,0x02,0x63,0x68,
		0x61,0x72,0x00,0x06,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,
		0x20,0x63,0x68,0x61,0x72,0x00,0x06,0x01,0x02,0x75,0x6E,0x73,
		0x69,0x67,0x6E,0x65,0x64,0x20,0x63,0x68,0x61,0x72,0x00,0x08,
		0x01,0x02,0x73,0x68,0x6F,0x72,0x74,0x00,0x05,0x01,0x02,0x73,
		0x69,0x67,0x6E,0x65,0x64,0x20,0x73,0x68,0x6F,0x72,0x74,0x00,
		0x05,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,
		0x73,0x68,0x6F,0x72,0x74,0x00,0x07,0x01,0x02,0x69,0x6E,0x74,
		0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x69,
		0x6E,0x74,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,
		0x65,0x64,0x20,0x69,0x6E,0x74,0x00,0x07,0x01,0x02,0x6C,0x6F,
		0x6E,0x67,0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,
		0x20,0x6C,0x6F,0x6E,0x67,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,
		0x69,0x67,0x6E,0x65,0x64,0x20,0x6C,0x6F,0x6E,0x67,0x00,0x07,
		0x01,0x02,0x66,0x6C,0x6F,0x61,0x74,0x00,0x04,0x01,0x02,0x64,
		0x6F,0x75,0x62,0x6C,0x65,0x00,0x04,0x01,0x02,0x6C,0x6F,0x6E,
		0x67,0x20,0x64,0x6F,0x75,0x62,0x6C,0x65,0x00,0x04,0x02,0x02,
		0x76,0x6F,0x69,0x64,0x20,0x2A,0x00,0x01,0x01,0x03,0x73,0x69,
		0x67,0x5F,0x61,0x74,0x6F,0x6D,0x69,0x63,0x5F,0x74,0x00,0x01,
		0x97,0x01,0x00,0x00,0x03,0x73,0x69,0x7A,0x65,0x5F,0x74,0x00,
		0x01,0xD3,0x01,0x00,0x00,0x03,0x77,0x63,0x68,0x61,0x72,0x5F,
		0x74,0x00,0x01,0x97,0x01,0x00,0x00,0x04,0x62,0x02,0x00,0x00,
		0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,0x01,0x97,0x01,
		0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,0x00,0x01,0x97,
		0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x64,0x69,0x76,0x5F,
		0x74,0x00,0x01,0x3E,0x02,0x00,0x00,0x04,0x92,0x02,0x00,0x00,
		0x00,0x01,0x02,0x05,0x71,0x75,0x6F,0x74,0x00,0x01,0xBC,0x01,
		0x00,0x00,0x02,0x23,0x00,0x05,0x72,0x65,0x6D,0x00,0x01,0xBC,
		0x01,0x00,0x00,0x02,0x23,0x01,0x00,0x03,0x6C,0x64,0x69,0x76,
		0x5F,0x74,0x00,0x01,0x6E,0x02,0x00,0x00,0x06,0xA8,0x02,0x00,
		0x00,0x00,0x01,0x01,0x00,0x03,0x5F,0x74,0x5F,0x61,0x74,0x65,
		0x78,0x69,0x74,0x5F,0x66,0x70,0x00,0x01,0x9F,0x02,0x00,0x00,
		0x07,0xD4,0x02,0x00,0x00,0x00,0x01,0x01,0x97,0x01,0x00,0x00,
		0x08,0x00,0x06,0x02,0x00,0x00,0x08,0x00,0x06,0x02,0x00,0x00,
		0x00,0x03,0x5F,0x74,0x5F,0x63,0x6F,0x6D,0x70,0x61,0x72,0x65,
		0x5F,0x66,0x70,0x00,0x01,0xBB,0x02,0x00,0x00,0x09,0x26,0x03,
		0x00,0x00,0x68,0x61,0x6E,0x64,0x6C,0x65,0x5F,0x4C,0x45,0x44,
		0x00,0x01;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end;
	.var =
		0x01,0x01,0x00,0x0A,0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,
		0x65,0x00,0x97,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,
		0x00,0x00,0x00;
	.var = .LN1;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x00,0x0C,0x63,0x03,0x00,0x00,0x72,0x65,0x61,0x64,0x44,
		0x41,0x49,0x70,0x69,0x6E,0x00,0x01;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end;
	.var =
		0x01,0x97,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x97,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN5;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x00,0x0C,0x9E,0x03,0x00,0x00,0x66,0x6C,0x61,0x67,0x54,
		0x65,0x73,0x74,0x00,0x01;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end;
	.var =
		0x01,0x97,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x97,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN8;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x00,0x09,0xC6,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x00,0x01;
	.var = .LN_process;
	.var = .LN._process.end;
	.var =
		0x01,0x01,0x00,0x0B,0x00,0x00,0x00,0x00;
	.var = .LN11;
	.var = .LN._process.end;
	.var =
		0x00,0x00,0x0D,0x69,0x73,0x50,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x69,0x6E,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _isProcessing;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightIn;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x62,0x75,0x66,0x66,0x5F,0x74,
		0x6D,0x70,0x00,0x01,0xEF,0x0C,0x00,0x00,0x05,0x0C;
	.var = _buff_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x5F,0x74,0x6D,0x70,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x00,0x01,0xDF,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input1R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x4C,0x00,0x01,0xCF,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input1L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x00,0x01,0xBF,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x4C,0x00,0x01,0xAF,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x52,0x00,0x01,0x9F,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input3R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x4C,0x00,0x01,0x8F,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input3L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x32,0x00,0x01,0x7F,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input1R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x32,0x00,0x01,0x6F,0x0C,0x00,0x00,0x05,0x0C;
	.var = _input2R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x00,0x01,0x61,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputR;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x6E,0x70,0x75,0x74,0x4C,
		0x00,0x01,0x53,0x0C,0x00,0x00,0x05,0x0C;
	.var = _inputL;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x31,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x32,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x33,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6A,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _j;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _k;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x5F,0x69,0x6E,0x70,0x75,
		0x74,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _k_input;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x78,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _ix;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x32,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x33,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x32,0x00,
		0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x31,0x00,
		0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_1;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x5F,0x64,0x65,0x63,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_dec;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x66,0x78,0x6C,0x6D,0x73,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _fxlmsFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _identFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x33,
		0x46,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _ident3Flag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x72,0x65,0x73,0x65,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _resetFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x34,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr4;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x35,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr5;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnet;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,0x6D,0x69,
		0x74,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnetLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x65,0x64,0x5F,0x76,0x61,
		0x6C,0x75,0x65,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _led_value;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x64,0x65,0x63,0x00,0x01,0x45,0x0C,0x00,0x00,0x05,0x0C;
	.var = _coefs_dec;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x52,0x64,0x61,0x74,
		0x61,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _inRdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4C,0x64,0x61,0x74,
		0x61,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _inLdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _inNoise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x00,0x01,0x35,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x01,0x25,0x0C,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x01,0x15,0x0C,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x31,0x00,0x01,0x05,
		0x0C,0x00,0x00,0x05,0x0C;
	.var = _un1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x31,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x31,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x31,0x00,0x01,
		0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _err1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0x01,0xF5,0x0B,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x32,0x00,0x01,0xE5,
		0x0B,0x00,0x00,0x05,0x0C;
	.var = _un2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x70,0x65,0x72,0x66,0x6F,0x72,
		0x6D,0x61,0x6E,0x63,0x65,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _performance;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x41,0x44,0x5F,0x62,0x69,0x74,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _AD_bit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x46,0x53,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _FS;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x61,0x6D,0x62,0x64,0x61,
		0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _lambda;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x62,0x65,0x74,0x61,0x00,0x01,
		0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _beta;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x64,0x65,0x66,
		0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2def;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x5F,0x30,0x00,
		0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2_0;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x00,0x01,
		0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _err2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x5F,0x6E,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _inputRfil_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x00,0x01,0xD5,0x0B,0x00,0x00,0x05,0x0C;
	.var = _inputRfil;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0x01,0xC5,0x0B,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x33,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x33,0x00,0x01,0xE4,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x33,0x00,0x01,
		0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _err3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x66,0x69,0x6C,0x61,0x33,
		0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _yfila3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x61,0x72,0x72,
		0x61,0x79,0x00,0x01,0xB5,0x0B,0x00,0x00,0x05,0x0C;
	.var = _yn2array;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x31,
		0x00,0x01,0xA5,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x32,
		0x00,0x01,0x95,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x33,
		0x00,0x01,0x85,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _noise_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x01,0x75,0x0B,0x00,0x00,0x05,0x0C;
	.var = _noise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x0C;
	.var = _noiseFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0x01,0xE4,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _RightInPrev;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x61,0x6C,0x70,0x68,0x61,0x00,
		0x01,0xE4,0x01,0x00,0x00,0x05,0x0C;
	.var = _alpha;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0E,0x85,0x0B,0x00,0x00,0xE4,0x01,
		0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,0x00,0x0E,0x95,0x0B,
		0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0xA5,0x0B,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xD1,
		0x0F,0x00,0xD0,0x0F,0x00,0x0E,0xB5,0x0B,0x00,0x00,0xE4,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0xC5,0x0B,
		0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0xD5,0x0B,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF4,
		0x03,0x00,0xF3,0x03,0x00,0x0E,0xE5,0x0B,0x00,0x00,0xE4,0x01,
		0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0xF5,0x0B,
		0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,
		0x00,0x0E,0x05,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xD0,
		0x0F,0x00,0xCF,0x0F,0x00,0x0E,0x15,0x0C,0x00,0x00,0xE4,0x01,
		0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,0x00,0x0E,0x25,0x0C,
		0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,
		0x00,0x0E,0x35,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF5,
		0x03,0x00,0xF4,0x03,0x00,0x0E,0x45,0x0C,0x00,0x00,0xE4,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x53,0x0C,
		0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0x29,0x00,0x28,0x00,0x0E,
		0x61,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0x2A,0x00,0x29,
		0x00,0x0E,0x6F,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0x2A,
		0x00,0x29,0x00,0x0E,0x7F,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,
		0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x8F,0x0C,0x00,0x00,
		0xE4,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,
		0x9F,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,
		0xF4,0x03,0x00,0x0E,0xAF,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,
		0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0xBF,0x0C,0x00,0x00,
		0xE4,0x01,0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,
		0xCF,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0xD1,0x0F,0x00,
		0xD0,0x0F,0x00,0x0E,0xDF,0x0C,0x00,0x00,0xE4,0x01,0x00,0x00,
		0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0xEF,0x0C,0x00,0x00,
		0xE4,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,
		0x00,0x00,0x00,0x00,0xE4,0x01,0x00,0x00,0x0F,0x64,0x00,0x63,
		0x00,0x00;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.var =
		0x45,0x10,0x00,0x00,0x02,0x00,0x8B,0x02,0x00,0x00,0x01,0x01,
		0x01,0xF6,0x0A,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,
		0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,
		0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,
		0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,
		0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,
		0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x00,
		0xC5,0x92,0xEE,0xAA,0x06,0xB6,0x62,0x74,0x74,0x2E,0x68,0x00,
		0x00,0xA0,0xD9,0x84,0x93,0x06,0xAC,0x0F,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x63,0x64,0x65,0x66,
		0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,
		0xA3,0x04,0xAF,0x04,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x43,0x64,0x65,0x66,0x32,0x31,0x33,0x36,
		0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x84,0xA9,
		0x02,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,
		0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,
		0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,
		0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,
		0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,
		0x5C,0x64,0x65,0x66,0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,
		0x01,0xC2,0xC4,0xD8,0xA3,0x04,0xD6,0x04,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x64,0x65,0x66,0x32,
		0x31,0x33,0x36,0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,
		0x04,0x83,0x8B,0x08,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x73,0x69,0x67,0x6E,0x61,0x6C,0x2E,0x68,
		0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x91,0x55,0x43,0x3A,0x5C,
		0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,
		0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,
		0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,
		0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,
		0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x73,0x74,0x64,
		0x6C,0x69,0x62,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,
		0x9F,0x68,0x66,0x69,0x6C,0x74,0x5F,0x6E,0x75,0x6D,0x2E,0x68,
		0x00,0x00,0xBE,0xB1,0x94,0xAA,0x06,0xAA,0x01,0x63,0x6F,0x65,
		0x66,0x5F,0x64,0x65,0x63,0x2E,0x64,0x61,0x74,0x00,0x00,0xF2,
		0xF1,0x97,0xA3,0x06,0xB4,0x03,0x41,0x32,0x2E,0x64,0x61,0x74,
		0x00,0x00,0xEF,0x89,0xEE,0xAA,0x06,0x92,0x3D,0x41,0x33,0x2E,
		0x64,0x61,0x74,0x00,0x00,0xFC,0x89,0xEE,0xAA,0x06,0x86,0x40,
		0x00,0x00,0x05,0x02;
	.var = .LN_handle_LED;
	.var =
		0x04,0x01,0x05,0x1F,0x03,0xBB,0x04,0x01,0x00,0x05,0x02;
	.var = .LN1;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN2;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN3;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN4;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_readDAIpin;
	.var =
		0x04,0x01,0x05,0x19,0x03,0xA8,0x04,0x01,0x00,0x05,0x02;
	.var = .LN5;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN6;
	.var =
		0x05,0x06,0x12,0x00,0x05,0x02;
	.var = .LN7;
	.var =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_flagTest;
	.var =
		0x04,0x01,0x05,0x17,0x03,0x99,0x04,0x01,0x00,0x05,0x02;
	.var = .LN8;
	.var =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.var = .LN9;
	.var =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.var = .LN10;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_process;
	.var =
		0x04,0x01,0x05,0x01,0xA4,0x00,0x05,0x02;
	.var = .LN11;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN12;
	.var =
		0x05,0x0F,0x18,0x00,0x05,0x02;
	.var = .LN13;
	.var =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN14;
	.var =
		0x15,0x00,0x05,0x02;
	.var = .LN15;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN16;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN17;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN18;
	.var =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.var = .LN19;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN20;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN21;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN22;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN23;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN24;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN25;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN26;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN27;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN28;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN29;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN30;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN31;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN32;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN33;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN34;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN35;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN36;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN37;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN38;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN39;
	.var =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.var = .LN40;
	.var =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.var = .LN41;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN42;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN43;
	.var =
		0x05,0x19,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN44;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN45;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN46;
	.var =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.var = .LN47;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN48;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN49;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN50;
	.var =
		0x05,0x1B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN51;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN52;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN53;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN54;
	.var =
		0x05,0x1B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN55;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN56;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN57;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN58;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN59;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN60;
	.var =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.var = .LN61;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN62;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN63;
	.var =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN64;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN65;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN66;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN67;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN68;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN69;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN70;
	.var =
		0x05,0x11,0x23,0x00,0x05,0x02;
	.var = .LN71;
	.var =
		0x05,0x02,0x03,0x66,0x01,0x00,0x05,0x02;
	.var = .LN72;
	.var =
		0x05,0x11,0x23,0x00,0x05,0x02;
	.var = .LN73;
	.var =
		0x05,0x06,0x03,0x68,0x01,0x00,0x05,0x02;
	.var = .LN74;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN75;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN76;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN77;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN78;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN79;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN80;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN81;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN82;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN83;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN84;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN85;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN86;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN87;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN88;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN89;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN90;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN91;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN92;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN93;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN94;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN95;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN96;
	.var =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.var = .LN97;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN98;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN99;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN100;
	.var =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.var = .LN101;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN102;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN103;
	.var =
		0x05,0x18,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN104;
	.var =
		0x05,0x11,0x10,0x00,0x05,0x02;
	.var = .LN105;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN106;
	.var =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.var = .LN107;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN108;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN109;
	.var =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.var = .LN110;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN111;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN112;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN113;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN114;
	.var =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.var = .LN115;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN116;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN117;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN118;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN119;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN120;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN121;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN122;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN123;
	.var =
		0x05,0x03,0x15,0x00,0x05,0x02;
	.var = .LN124;
	.var =
		0x05,0x06,0x03,0x75,0x01,0x00,0x05,0x02;
	.var = .LN125;
	.var =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.var = .LN126;
	.var =
		0x05,0x06,0x19,0x00,0x05,0x02;
	.var = .LN127;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN128;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN129;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN130;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN131;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN132;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN133;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN134;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN135;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN136;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN137;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN138;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN139;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN140;
	.var =
		0x05,0x19,0x11,0x00,0x05,0x02;
	.var = .LN141;
	.var =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.var = .LN142;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN143;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN144;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN145;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN146;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN147;
	.var =
		0x05,0x16,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN148;
	.var =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.var = .LN149;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN150;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN151;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN152;
	.var =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.var = .LN153;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN154;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN155;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN156;
	.var =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.var = .LN157;
	.var =
		0x05,0x08,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN158;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN159;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN160;
	.var =
		0x05,0x04,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN161;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN162;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN163;
	.var =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN164;
	.var =
		0x05,0x05,0x10,0x00,0x05,0x02;
	.var = .LN165;
	.var =
		0x05,0x03,0x13,0x00,0x05,0x02;
	.var = .LN166;
	.var =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN167;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN168;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN169;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN170;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN171;
	.var =
		0x05,0x02,0x16,0x00,0x05,0x02;
	.var = .LN172;
	.var =
		0x05,0x03,0x03,0x73,0x01,0x00,0x05,0x02;
	.var = .LN173;
	.var =
		0x05,0x02,0x34,0x00,0x05,0x02;
	.var = .LN174;
	.var =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.var = .LN175;
	.var =
		0x05,0x02,0x21,0x00,0x05,0x02;
	.var = .LN176;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN177;
	.var =
		0x05,0x02,0x37,0x00,0x05,0x02;
	.var = .LN178;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN179;
	.var =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN180;
	.var =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.var = .LN181;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN182;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN183;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN184;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN185;
	.var =
		0x05,0x0F,0x1B,0x00,0x05,0x02;
	.var = .LN186;
	.var =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.var = .LN187;
	.var =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.var = .LN188;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN189;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN190;
	.var =
		0x05,0x03,0x03,0xB3,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN191;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN192;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN193;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN194;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN195;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN196;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN197;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN198;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN199;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN200;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN201;
	.var =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.var = .LN202;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN203;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN204;
	.var =
		0x05,0x19,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN205;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN206;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN207;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN208;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN209;
	.var =
		0x05,0x13,0x0C,0x00,0x05,0x02;
	.var = .LN210;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN211;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN212;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN213;
	.var =
		0x05,0x13,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN214;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN215;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN216;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN217;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN218;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN219;
	.var =
		0x05,0x10,0x15,0x00,0x05,0x02;
	.var = .LN220;
	.var =
		0x05,0x14,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN221;
	.var =
		0x05,0x03,0x10,0x00,0x05,0x02;
	.var = .LN222;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN223;
	.var =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN224;
	.var =
		0x05,0x07,0x11,0x00,0x05,0x02;
	.var = .LN225;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN226;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN227;
	.var =
		0x05,0x07,0x13,0x00,0x05,0x02;
	.var = .LN228;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN229;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN230;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN231;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN232;
	.var =
		0x05,0x14,0x03,0x75,0x01,0x00,0x05,0x02;
	.var = .LN233;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN234;
	.var =
		0x05,0x07,0x13,0x00,0x05,0x02;
	.var = .LN235;
	.var =
		0x05,0x10,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN236;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN237;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN238;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN239;
	.var =
		0x05,0x11,0x03,0x41,0x01,0x00,0x05,0x02;
	.var = .LN240;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN241;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN242;
	.var =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN243;
	.var =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.var = .LN244;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN245;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN246;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN247;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN248;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN249;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN250;
	.var =
		0x05,0x11,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN251;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN252;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN253;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN254;
	.var =
		0x05,0x12,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN255;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN256;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN257;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN258;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN259;
	.var =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN260;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN261;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN262;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN263;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN264;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN265;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN266;
	.var =
		0x05,0x3D,0x0B,0x00,0x05,0x02;
	.var = .LN267;
	.var =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.var = .LN268;
	.var =
		0x05,0x11,0x03,0x55,0x01,0x00,0x05,0x02;
	.var = .LN269;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN270;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN271;
	.var =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN272;
	.var =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.var = .LN273;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN274;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN275;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN276;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN277;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN278;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN279;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN280;
	.var =
		0x05,0x11,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN281;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN282;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN283;
	.var =
		0x05,0x12,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN284;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN285;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN286;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN287;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN288;
	.var =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN289;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN290;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN291;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN292;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN293;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN294;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN295;
	.var =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.var = .LN296;
	.var =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.var = .LN297;
	.var =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN298;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN299;
	.var =
		0x05,0x1B,0x03,0x9C,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN300;
	.var =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.var = .LN301;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN302;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN303;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN304;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN305;
	.var =
		0x05,0x06,0x03,0x5D,0x01,0x00,0x05,0x02;
	.var = .LN306;
	.var =
		0x05,0x23,0x03,0x6F,0x01,0x00,0x05,0x02;
	.var = .LN307;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN308;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN309;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN310;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN311;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN312;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN313;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN314;
	.var =
		0x05,0x23,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN315;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN316;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN317;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN318;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN319;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN320;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN321;
	.var =
		0x05,0x2B,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN322;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN323;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN324;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN325;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN326;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN327;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN328;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN329;
	.var =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.var = .LN330;
	.var =
		0x05,0x0C,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN331;
	.var =
		0x03,0x5E,0x01,0x00,0x05,0x02;
	.var = .LN332;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN333;
	.var =
		0x05,0x26,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN334;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN335;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN336;
	.var =
		0x05,0x32,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN337;
	.var =
		0x05,0x01,0x03,0xCC,0x02,0x01,0x00,0x05,0x02;
	.var = .LN._process.end;
	.var =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.var =
		0xAA,0x03,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0xFE,0x0C,0x00,0x00,0xE8,0x02,0x00,0x00,0x68,0x61,0x6E,0x64,
		0x6C,0x65,0x5F,0x4C,0x45,0x44,0x00,0x26,0x03,0x00,0x00,0x72,
		0x65,0x61,0x64,0x44,0x41,0x49,0x70,0x69,0x6E,0x00,0x63,0x03,
		0x00,0x00,0x66,0x6C,0x61,0x67,0x54,0x65,0x73,0x74,0x00,0x9E,
		0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0xFD,
		0x03,0x00,0x00,0x62,0x75,0x66,0x66,0x5F,0x74,0x6D,0x70,0x00,
		0x17,0x04,0x00,0x00,0x69,0x5F,0x74,0x6D,0x70,0x00,0x2E,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x00,0x47,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x4C,0x00,0x60,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x00,0x79,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x4C,0x00,0x92,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x52,0x00,0xAB,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x33,0x4C,0x00,0xC4,0x04,
		0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x31,0x52,0x32,0x00,0xDE,
		0x04,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x32,0x00,
		0x28,0x05,0x00,0x00,0x69,0x31,0x00,0x3C,0x05,0x00,0x00,0x69,
		0x32,0x00,0x50,0x05,0x00,0x00,0x69,0x33,0x00,0x64,0x05,0x00,
		0x00,0x6A,0x00,0x77,0x05,0x00,0x00,0x6B,0x00,0x8A,0x05,0x00,
		0x00,0x6B,0x5F,0x69,0x6E,0x70,0x75,0x74,0x00,0xA3,0x05,0x00,
		0x00,0x69,0x78,0x00,0xB7,0x05,0x00,0x00,0x6D,0x31,0x00,0xCB,
		0x05,0x00,0x00,0x6D,0x32,0x00,0xDF,0x05,0x00,0x00,0x6D,0x33,
		0x00,0xF3,0x05,0x00,0x00,0x6F,0x75,0x74,0x5F,0x32,0x00,0x38,
		0x06,0x00,0x00,0x66,0x78,0x6C,0x6D,0x73,0x46,0x6C,0x61,0x67,
		0x00,0x53,0x06,0x00,0x00,0x69,0x64,0x65,0x6E,0x74,0x46,0x6C,
		0x61,0x67,0x00,0x6E,0x06,0x00,0x00,0x69,0x64,0x65,0x6E,0x74,
		0x33,0x46,0x6C,0x61,0x67,0x00,0x8A,0x06,0x00,0x00,0x72,0x65,
		0x73,0x65,0x74,0x46,0x6C,0x61,0x67,0x00,0xA5,0x06,0x00,0x00,
		0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x4C,0x69,0x6D,
		0x69,0x74,0x00,0xC5,0x06,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,
		0x43,0x74,0x6E,0x72,0x00,0xE0,0x06,0x00,0x00,0x64,0x65,0x6C,
		0x61,0x79,0x43,0x74,0x6E,0x72,0x32,0x00,0xFC,0x06,0x00,0x00,
		0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x33,0x00,0x18,
		0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,
		0x34,0x00,0x34,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x35,0x00,0x50,0x07,0x00,0x00,0x64,0x65,0x6C,
		0x61,0x79,0x43,0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,
		0x70,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,
		0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,0x6D,0x69,0x74,0x00,
		0x95,0x07,0x00,0x00,0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,
		0x65,0x00,0xB0,0x07,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x64,0x65,0x63,0x00,0xCB,0x07,0x00,0x00,0x69,0x6E,0x52,0x64,
		0x61,0x74,0x61,0x00,0xE4,0x07,0x00,0x00,0x69,0x6E,0x4C,0x64,
		0x61,0x74,0x61,0x00,0xFD,0x07,0x00,0x00,0x69,0x6E,0x4E,0x6F,
		0x69,0x73,0x65,0x00,0x16,0x08,0x00,0x00,0x69,0x6E,0x4E,0x6F,
		0x69,0x73,0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x00,0x35,0x08,
		0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x41,0x72,0x72,
		0x61,0x79,0x33,0x00,0x54,0x08,0x00,0x00,0x63,0x6F,0x65,0x66,
		0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x74,
		0x08,0x00,0x00,0x75,0x6E,0x31,0x00,0x89,0x08,0x00,0x00,0x6D,
		0x75,0x31,0x00,0x9E,0x08,0x00,0x00,0x79,0x6E,0x31,0x00,0xB3,
		0x08,0x00,0x00,0x65,0x72,0x72,0x31,0x00,0xC9,0x08,0x00,0x00,
		0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,
		0x5F,0x32,0x00,0xE9,0x08,0x00,0x00,0x75,0x6E,0x32,0x00,0xFE,
		0x08,0x00,0x00,0x70,0x65,0x72,0x66,0x6F,0x72,0x6D,0x61,0x6E,
		0x63,0x65,0x00,0x1B,0x09,0x00,0x00,0x41,0x44,0x5F,0x62,0x69,
		0x74,0x00,0x33,0x09,0x00,0x00,0x46,0x53,0x00,0x47,0x09,0x00,
		0x00,0x6C,0x61,0x6D,0x62,0x64,0x61,0x00,0x5F,0x09,0x00,0x00,
		0x62,0x65,0x74,0x61,0x00,0x75,0x09,0x00,0x00,0x6D,0x75,0x32,
		0x00,0x8A,0x09,0x00,0x00,0x6D,0x75,0x32,0x64,0x65,0x66,0x00,
		0xA2,0x09,0x00,0x00,0x6D,0x75,0x32,0x5F,0x30,0x00,0xB9,0x09,
		0x00,0x00,0x79,0x6E,0x32,0x00,0xCE,0x09,0x00,0x00,0x65,0x72,
		0x72,0x32,0x00,0xE4,0x09,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,
		0x52,0x66,0x69,0x6C,0x5F,0x6E,0x00,0x01,0x0A,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x52,0x66,0x69,0x6C,0x00,0x1C,0x0A,0x00,
		0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,
		0x72,0x5F,0x33,0x00,0x3C,0x0A,0x00,0x00,0x6D,0x75,0x33,0x00,
		0x51,0x0A,0x00,0x00,0x79,0x6E,0x33,0x00,0x66,0x0A,0x00,0x00,
		0x65,0x72,0x72,0x33,0x00,0x7C,0x0A,0x00,0x00,0x79,0x66,0x69,
		0x6C,0x61,0x33,0x00,0x94,0x0A,0x00,0x00,0x79,0x6E,0x32,0x61,
		0x72,0x72,0x61,0x79,0x00,0xAE,0x0A,0x00,0x00,0x6E,0x6F,0x69,
		0x73,0x65,0x31,0x00,0xC6,0x0A,0x00,0x00,0x6E,0x6F,0x69,0x73,
		0x65,0x32,0x00,0xDE,0x0A,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,
		0x33,0x00,0xF6,0x0A,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x0F,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x26,0x0B,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x46,0x6C,0x61,
		0x67,0x00,0x41,0x0B,0x00,0x00,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0x5E,0x0B,0x00,0x00,0x61,0x6C,
		0x70,0x68,0x61,0x00,0x00,0x00,0x00,0x00;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.var =
		0x30,0x00,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x01,0x00;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end-.LN_handle_LED;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end-.LN_readDAIpin;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end-.LN_flagTest;
	.var = .LN_process;
	.var = .LN._process.end-.LN_process;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section .annotations SHT_DEBUGINFO;

	.align 1;
.epcannot:
	.type .epcannot,STT_OBJECT;
	.var =
		0x01,0x00,0x00,0x00,0x50,0x14,0x00,0x00,0x2A,0x00,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x0C,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x54,0x00,0x00,0x00,0x16,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x4D,0x6F,0x6E,0x20,0x4E,0x6F,
		0x76,0x20,0x32,0x30,0x20,0x31,0x37,0x3A,0x32,0x38,0x3A,0x35,
		0x35,0x20,0x32,0x30,0x32,0x33,0x0A,0x00,0x36,0x00,0x00,0x00,
		0x5B,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x2D,0x63,0x20,0x2D,0x66,0x69,0x6C,0x65,0x2D,0x61,0x74,0x74,
		0x72,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x4E,0x61,0x6D,
		0x65,0x3D,0x46,0x78,0x4C,0x4D,0x53,0x5F,0x77,0x69,0x74,0x68,
		0x5F,0x41,0x33,0x5F,0x69,0x6E,0x74,0x65,0x72,0x70,0x6F,0x6C,
		0x20,0x2D,0x4F,0x20,0x2D,0x4F,0x76,0x31,0x30,0x30,0x20,0x2D,
		0x67,0x20,0x2D,0x73,0x61,0x76,0x65,0x2D,0x74,0x65,0x6D,0x70,
		0x73,0x20,0x2D,0x70,0x61,0x74,0x68,0x2D,0x6F,0x75,0x74,0x70,
		0x75,0x74,0x20,0x44,0x65,0x62,0x75,0x67,0x20,0x2D,0x45,0x44,
		0x20,0x2D,0x6E,0x6F,0x2D,0x6D,0x75,0x6C,0x74,0x69,0x6C,0x69,
		0x6E,0x65,0x20,0x2D,0x64,0x6F,0x75,0x62,0x6C,0x65,0x2D,0x73,
		0x69,0x7A,0x65,0x2D,0x33,0x32,0x20,0x2D,0x66,0x6C,0x61,0x67,
		0x73,0x2D,0x63,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,0x20,0x2D,
		0x2D,0x64,0x69,0x61,0x67,0x5F,0x77,0x61,0x72,0x6E,0x69,0x6E,
		0x67,0x2C,0x69,0x6D,0x70,0x6C,0x69,0x63,0x69,0x74,0x5F,0x66,
		0x75,0x6E,0x63,0x5F,0x64,0x65,0x63,0x6C,0x20,0x2D,0x77,0x61,
		0x72,0x6E,0x2D,0x70,0x72,0x6F,0x74,0x6F,0x73,0x20,0x2D,0x66,
		0x6F,0x72,0x63,0x65,0x2D,0x63,0x69,0x72,0x63,0x62,0x75,0x66,
		0x20,0x2D,0x70,0x72,0x6F,0x63,0x20,0x41,0x44,0x53,0x50,0x2D,
		0x32,0x31,0x33,0x36,0x34,0x20,0x2D,0x6F,0x20,0x44,0x65,0x62,
		0x75,0x67,0x5C,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x64,
		0x6F,0x6A,0x20,0x2D,0x4D,0x4D,0x00,0x60,0x00,0x00,0x00,0x76,
		0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x2E,0x00,0x00,0x00,0x41,
		0x44,0x53,0x50,0x2D,0x32,0x31,0x33,0x36,0x34,0x00,0x67,0x01,
		0x00,0x00,0xA8,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x2D,0x00,
		0x00,0x00,0x30,0x2E,0x32,0x00,0x82,0x01,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x8A,0x01,0x00,0x00,
		0x3C,0x02,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xC2,0x01,0x00,0x00,0x94,0x01,0x00,0x00,
		0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,0x6F,0x72,0x64,
		0x73,0x00,0xB8,0x01,0x00,0x00,0xE9,0x01,0x00,0x00,0x94,0x01,
		0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x31,0x2D,0x72,0x32,
		0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x31,0x32,0x2C,
		0x61,0x63,0x63,0x7D,0x00,0xCE,0x01,0x00,0x00,0x13,0x02,0x00,
		0x00,0x94,0x01,0x00,0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xF5,0x01,0x00,0x00,0x29,
		0x02,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x2D,0x02,0x00,0x00,0xFF,0x01,0x00,0x00,0x30,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,
		0x00,0x23,0x02,0x00,0x00,0x4D,0x02,0x00,0x00,0xFF,0x01,0x00,
		0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x30,0x2C,0x72,0x32,0x2C,
		0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,0x39,0x02,0x00,
		0x00,0x77,0x02,0x00,0x00,0xFF,0x01,0x00,0x00,0x33,0x00,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x59,
		0x02,0x00,0x00,0x1A,0x02,0x00,0x00,0x05,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x91,0x02,0x00,0x00,0x63,
		0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,
		0x6F,0x72,0x64,0x73,0x00,0x87,0x02,0x00,0x00,0xAE,0x02,0x00,
		0x00,0x63,0x02,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x30,
		0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,0x9D,0x02,
		0x00,0x00,0xD8,0x02,0x00,0x00,0x63,0x02,0x00,0x00,0x33,0x00,
		0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0xBA,0x02,0x00,0x00,0x9B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF2,0x02,0x00,0x00,
		0xC4,0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x0E,0x00,0x00,0x00,
		0x77,0x6F,0x72,0x64,0x73,0x00,0xE8,0x02,0x00,0x00,0x39,0x03,
		0x00,0x00,0xC4,0x02,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,
		0x30,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,0x72,0x38,0x2C,0x72,
		0x31,0x32,0x2C,0x69,0x34,0x2C,0x69,0x31,0x32,0x2C,0x6D,0x34,
		0x2C,0x73,0x30,0x2C,0x73,0x32,0x2C,0x73,0x34,0x2C,0x61,0x63,
		0x63,0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,0x63,0x2C,0x6C,0x63,
		0x6E,0x74,0x72,0x7D,0x00,0xFE,0x02,0x00,0x00,0x6A,0x03,0x00,
		0x00,0xC4,0x02,0x00,0x00,0x35,0x00,0x00,0x00,0x7B,0x72,0x33,
		0x2C,0x72,0x35,0x2D,0x72,0x37,0x2C,0x72,0x39,0x2C,0x72,0x31,
		0x33,0x2C,0x69,0x30,0x2D,0x69,0x33,0x2C,0x6C,0x33,0x2C,0x62,
		0x33,0x2C,0x6D,0x30,0x7D,0x00,0x45,0x03,0x00,0x00,0xF2,0x03,
		0x00,0x00,0xC4,0x02,0x00,0x00,0x36,0x00,0x00,0x00,0x7B,0x72,
		0x30,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,0x72,0x38,0x2C,0x72,
		0x31,0x32,0x2C,0x69,0x34,0x2C,0x69,0x31,0x32,0x2D,0x69,0x31,
		0x33,0x2C,0x62,0x34,0x2C,0x62,0x31,0x32,0x2D,0x62,0x31,0x33,
		0x2C,0x6D,0x34,0x2C,0x6D,0x31,0x32,0x2C,0x73,0x30,0x2D,0x73,
		0x31,0x35,0x2C,0x75,0x73,0x74,0x61,0x74,0x31,0x2D,0x75,0x73,
		0x74,0x61,0x74,0x34,0x2C,0x61,0x63,0x63,0x2C,0x6D,0x63,0x63,
		0x2C,0x73,0x63,0x63,0x2C,0x62,0x74,0x66,0x2C,0x6C,0x63,0x6E,
		0x74,0x72,0x2C,0x73,0x6D,0x72,0x66,0x2C,0x73,0x6D,0x72,0x62,
		0x2C,0x73,0x61,0x63,0x63,0x2C,0x73,0x6D,0x63,0x63,0x2C,0x73,
		0x73,0x63,0x63,0x2C,0x73,0x62,0x74,0x66,0x7D,0x00,0x76,0x03,
		0x00,0x00,0x39,0x04,0x00,0x00,0xC4,0x02,0x00,0x00,0x37,0x00,
		0x00,0x00,0x7B,0x72,0x31,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,
		0x72,0x38,0x2D,0x72,0x39,0x2C,0x72,0x31,0x32,0x2D,0x72,0x31,
		0x33,0x7D,0x00,0xFE,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0x1B,0x04,0x00,0x00,0xE7,0x00,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x4D,0x04,0x00,0x00,0x25,0x04,0x00,0x00,0x0B,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xB7,0x05,0x00,
		0x00,0x25,0x04,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,
		0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,
		0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x20,0x35,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x59,0x04,0x00,0x00,0x03,
		0x06,0x00,0x00,0x25,0x04,0x00,0x00,0x16,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xC7,0x05,0x00,0x00,0xE7,0x00,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xE5,0x05,0x00,0x00,0xEA,
		0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x17,0x06,0x00,0x00,0xEF,0x05,0x00,0x00,0x0B,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x81,
		0x07,0x00,0x00,0xEF,0x05,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,
		0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x23,0x06,0x00,
		0x00,0x91,0x07,0x00,0x00,0xEF,0x05,0x00,0x00,0x16,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0xDD,0x07,0x00,0x00,0xEF,0x05,0x00,
		0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xA1,0x07,0x00,0x00,0xEA,
		0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xBF,0x07,0x00,0x00,0xEF,0x00,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF1,0x07,0x00,
		0x00,0xC9,0x07,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x5B,0x09,0x00,0x00,0xC9,0x07,0x00,
		0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,0x67,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,0x6D,
		0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,
		0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x00,0xFD,0x07,0x00,0x00,0x6B,0x09,0x00,0x00,0xC9,
		0x07,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xB7,
		0x09,0x00,0x00,0xC9,0x07,0x00,0x00,0x1C,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0x7B,0x09,0x00,0x00,0xEF,0x00,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x99,0x09,0x00,0x00,0xF4,
		0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0xCB,0x09,0x00,0x00,0xA3,0x09,0x00,0x00,0x0B,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xBF,
		0x0B,0x00,0x00,0xA3,0x09,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,
		0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x20,0x35,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,
		0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x00,0xD7,0x09,0x00,0x00,0xCF,0x0B,0x00,0x00,0xA3,
		0x09,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x1B,
		0x0C,0x00,0x00,0xA3,0x09,0x00,0x00,0x1C,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xDF,0x0B,0x00,0x00,0xF4,0x00,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xFD,0x0B,0x00,0x00,0xEC,
		0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x2F,0x0C,0x00,0x00,0x07,0x0C,0x00,0x00,0x0B,
		0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x3F,
		0x0C,0x00,0x00,0x07,0x0C,0x00,0x00,0x10,0x00,0x00,0x00,0xCF,
		0x07,0x00,0x00,0x4B,0x0C,0x00,0x00,0x07,0x0C,0x00,0x00,0x14,
		0x00,0x00,0x00,0x6B,0x0C,0x00,0x00,0x07,0x0C,0x00,0x00,0x13,
		0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,
		0x0E,0x00,0x00,0x07,0x0C,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,
		0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,
		0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,
		0x79,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,
		0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,0x6C,0x74,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,
		0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,
		0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x36,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,
		0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x61,0x64,0x64,0x20,0x73,
		0x75,0x62,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x20,0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,
		0x77,0x0C,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0xA4,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x03,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xC2,0x0E,0x00,0x00,
		0xB4,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xF4,0x0E,0x00,0x00,0xCC,0x0E,0x00,0x00,
		0x0B,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
		0x04,0x0F,0x00,0x00,0xCC,0x0E,0x00,0x00,0x10,0x00,0x00,0x00,
		0xF3,0x01,0x00,0x00,0x10,0x0F,0x00,0x00,0xCC,0x0E,0x00,0x00,
		0x14,0x00,0x00,0x00,0x30,0x0F,0x00,0x00,0xCC,0x0E,0x00,0x00,
		0x13,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
		0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0xA5,0x11,0x00,0x00,0xCC,0x0E,0x00,0x00,0x38,0x00,0x00,0x00,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,
		0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,
		0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,
		0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,
		0x65,0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,
		0x79,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,0x6C,0x74,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,
		0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,
		0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x36,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x61,0x64,0x64,0x20,
		0x73,0x75,0x62,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,
		0x00,0x3C,0x0F,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0x69,0x11,0x00,0x00,0xB4,0x01,0x00,0x00,0x03,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x87,0x11,0x00,
		0x00,0x95,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xB9,0x11,0x00,0x00,0x91,0x11,0x00,
		0x00,0x0B,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,
		0x00,0xC9,0x11,0x00,0x00,0x91,0x11,0x00,0x00,0x10,0x00,0x00,
		0x00,0xF3,0x01,0x00,0x00,0xD5,0x11,0x00,0x00,0x91,0x11,0x00,
		0x00,0x14,0x00,0x00,0x00,0xF5,0x11,0x00,0x00,0x91,0x11,0x00,
		0x00,0x13,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x91,0x11,0x00,0x00,0x38,0x00,0x00,
		0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,
		0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,
		0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,
		0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,
		0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,
		0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,
		0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,
		0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,
		0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,0x6C,0x74,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,
		0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,
		0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x36,0x20,0x28,0x20,0x35,0x30,0x2E,
		0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,
		0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x61,0x64,0x64,
		0x20,0x73,0x75,0x62,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,0x33,0x25,0x29,
		0x0A,0x00,0x01,0x12,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x2E,0x63,0x00,0x2E,0x14,0x00,0x00,0x95,0x01,0x00,0x00,
		0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00;
.epcannot.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 2;
	.global _buff_tmp;
	.type _buff_tmp,STT_OBJECT;
	.var _buff_tmp[100];
._buff_tmp.end:
	.align 1;
_i_tmp:
	.global _i_tmp;
	.type _i_tmp,STT_OBJECT;
	.var ..TW0[1] =
		 0x00000000;
._i_tmp.end:
	.align 1;
_i1:
	.global _i1;
	.type _i1,STT_OBJECT;
	.var ..TW1[1] =
		 0x00000000;
._i1.end:
	.align 1;
_i2:
	.global _i2;
	.type _i2,STT_OBJECT;
	.var ..TW2[1] =
		 0x00000000;
._i2.end:
	.align 1;
_i3:
	.global _i3;
	.type _i3,STT_OBJECT;
	.var ..TW3[1] =
		 0x00000000;
._i3.end:
	.align 1;
_m1:
	.global _m1;
	.type _m1,STT_OBJECT;
	.var ..TW4[1] =
		 0x00000000;
._m1.end:
	.align 1;
_m2:
	.global _m2;
	.type _m2,STT_OBJECT;
	.var ..TW5[1] =
		 0x00000000;
._m2.end:
	.align 1;
_m3:
	.global _m3;
	.type _m3,STT_OBJECT;
	.var ..TW6[1] =
		 0x00000000;
._m3.end:
	.align 1;
_fxlmsFlag:
	.global _fxlmsFlag;
	.type _fxlmsFlag,STT_OBJECT;
	.var ..TW7[1] =
		 0x00000000;
._fxlmsFlag.end:
	.align 1;
_identFlag:
	.global _identFlag;
	.type _identFlag,STT_OBJECT;
	.var ..TW8[1] =
		 0x00000000;
._identFlag.end:
	.align 1;
_ident3Flag:
	.global _ident3Flag;
	.type _ident3Flag,STT_OBJECT;
	.var ..TW9[1] =
		 0x00000000;
._ident3Flag.end:
	.align 1;
_resetFlag:
	.global _resetFlag;
	.type _resetFlag,STT_OBJECT;
	.var ..TW10[1] =
		 0x00000001;
._resetFlag.end:
	.align 1;
_delayCtnrLimit:
	.global _delayCtnrLimit;
	.type _delayCtnrLimit,STT_OBJECT;
	.var ..TW11[1] =
		 0x000009C4;
._delayCtnrLimit.end:
	.align 1;
_delayCtnr:
	.global _delayCtnr;
	.type _delayCtnr,STT_OBJECT;
	.var ..TW12[1] =
		 0x00000000;
._delayCtnr.end:
	.align 1;
_delayCtnr2:
	.global _delayCtnr2;
	.type _delayCtnr2,STT_OBJECT;
	.var ..TW13[1] =
		 0x00000000;
._delayCtnr2.end:
	.align 1;
_delayCtnr3:
	.global _delayCtnr3;
	.type _delayCtnr3,STT_OBJECT;
	.var ..TW14[1] =
		 0x00000000;
._delayCtnr3.end:
	.align 1;
_delayCtnr4:
	.global _delayCtnr4;
	.type _delayCtnr4,STT_OBJECT;
	.var ..TW15[1] =
		 0x00000000;
._delayCtnr4.end:
	.align 1;
_delayCtnr5:
	.global _delayCtnr5;
	.type _delayCtnr5,STT_OBJECT;
	.var ..TW16[1] =
		 0x00000000;
._delayCtnr5.end:
	.align 1;
_delayCtnrIdnet:
	.global _delayCtnrIdnet;
	.type _delayCtnrIdnet,STT_OBJECT;
	.var ..TW17[1] =
		 0x00000000;
._delayCtnrIdnet.end:
	.align 1;
_delayCtnrIdnetLimit:
	.global _delayCtnrIdnetLimit;
	.type _delayCtnrIdnetLimit,STT_OBJECT;
	.var ..TW18[1] =
		 0x0007A120;
._delayCtnrIdnetLimit.end:
	.align 1;
_led_value:
	.global _led_value;
	.type _led_value,STT_OBJECT;
	.var ..TW19[1] =
		 0x00000000;
._led_value.end:

	.section/pm/DOUBLE32 seg_pmda;

	.align 4;
_coefs_dec:
	.global _coefs_dec;
	.type _coefs_dec,STT_OBJECT;
	.var ..TW20[41] =
		 0xBAA6FC59, 0xBBF8DF7A, 0xBC2F5771, 0xBC8EED03,
		 0xBCCB48D4, 0xBD061B6D, 0xBD249907, 0xBD3C9ABB,
		 0xBD492685, 0xBD458DDE, 0xBD2E264E, 0xBD00E9D5,
		 0xBC784018, 0x3BBE4042, 0x3CF6F08D, 0x3D65D399,
		 0x3DA72192, 0x3DD5D788, 0x3DFACA36, 0x3E093E1D,
		 0x3E0D527E, 0x3E093E1D, 0x3DFACA36, 0x3DD5D788,
		 0x3DA72192, 0x3D65D399, 0x3CF6F08D, 0x3BBE4042,
		 0xBC784018, 0xBD00E9D5, 0xBD2E264E, 0xBD458DDE,
		 0xBD492685, 0xBD3C9ABB, 0xBD249907, 0xBD061B6D,
		 0xBCCB48D4, 0xBC8EED03, 0xBC2F5771, 0xBBF8DF7A,
		 0xBAA6FC59;
._coefs_dec.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 2;
_coefs_filter_1:
	.global _coefs_filter_1;
	.type _coefs_filter_1,STT_OBJECT;
	.var ..TW21[500] =
		 0x3B03E706, 0x39CEFC37, 0xBB453BEE, 0xBB3E7DA1,
		 0x3AABFA2E, 0x3B45ECE7, 0x3AC50A6A, 0x38C3C576,
		 0xB8A05D90, 0xBA955515, 0xBB2EBE54, 0xBA8288D5,
		 0x3AD44755, 0x3AC63580, 0x3A6A06BA, 0x3AE8DCD6,
		 0x3988F95D, 0xBB364EB7, 0x3BEC4174, 0x3D0B139C,
		 0xBCD13DFF, 0xBE4D289E, 0xBDB23240, 0x3EB10496,
		 0x3EAD706D, 0xBDCC7E39, 0xBE6BF452, 0xBD195080,
		 0x3D885DAB, 0xBC978EE8, 0xBD68D1EE, 0x3D0F9F64,
		 0x3CC472BC, 0xBD4F799A, 0xBC726D49, 0x3BF43E8D,
		 0xBD4E67AC, 0xBD25E168, 0x3D2B372C, 0x3CCDAC01,
		 0xBD69465F, 0xBD15A855, 0x3CA76F5E, 0x3C0C269A,
		 0xBB8808D9, 0x3C2A21EF, 0x3B287B8E, 0xBC7DBED7,
		 0xBBDCB53D, 0x3BB5C5C6, 0xBBA77B26, 0xBC1213DD,
		 0x3BA155B5, 0x3ADAD4A6, 0xBBF43ECB, 0x3C805578,
		 0x3D03DF68, 0xBB40BCDD, 0xBCE8C88F, 0x3A7E80F3,
		 0x3C77BA0D, 0xBC183200, 0xBA5D3ADE, 0x3D05B935,
		 0x3C881B76, 0xBCBF747C, 0xBC76759A, 0x3C5DFDDC,
		 0x3BB40530, 0xBC400745, 0x388F09B7, 0x3C7F792A,
		 0x3C1D6F2B, 0x3B464A3F, 0x3C3DF1E4, 0x3C7470AF,
		 0x3B098301, 0xBC406A30, 0xBC493793, 0x3A4E2CBD,
		 0x3C56EAA4, 0x3C297A9C, 0xBADC510F, 0xBBFC045C,
		 0xBB8B11C3, 0x3B07BCD8, 0x3BC99D0C, 0x3B8DB235,
		 0xB9A7500F, 0xBB2551F1, 0xBB1B2239, 0x39BB29DB,
		 0x3B8BF2BB, 0x3B9B90A1, 0xBA04E59C, 0xBBEC0C0F,
		 0xBC01E273, 0xBA00086C, 0x3B99D6BE, 0xBA6FA36C,
		 0xBBF501E2, 0xBB9F04CF, 0x39FEDD80, 0xB9E01892,
		 0xBB1CB9A0, 0x3B120906, 0x3BC7A620, 0x394C904B,
		 0xBBDC4DB1, 0xBBA48626, 0xBADEF303, 0xB9F86805,
		 0x3AFE9E84, 0x3ACFE1C7, 0xBB015959, 0xBB164F9C,
		 0xBA73362A, 0xBB093630, 0xBB7B8262, 0xBA7C8997,
		 0x3BF2AA36, 0x3C3C3B4F, 0x3B2B2EA1, 0xBC05CCD0,
		 0xBC0E298E, 0xBB314D6C, 0x3B8A721E, 0x3BBDC394,
		 0xB75DE106, 0xBB6F22DB, 0x3A4333AE, 0x3B38C1BA,
		 0xBB750450, 0xBBC85BC9, 0x3B32B363, 0x3BD45DEC,
		 0xBB36AB8D, 0xBC1B1F03, 0xBB741F9F, 0x3BA48F68,
		 0x3BCD6457, 0x3A30636E, 0xBB497C1F, 0xB93EE193,
		 0x3B821868, 0x3B2AEC30, 0xBAC61AD7, 0xBB413B51,
		 0xBA573342, 0x3B3AA1E8, 0x3B4D2FB6, 0x3ACC646F,
		 0x3B005950, 0xB9107EAD, 0xBB208F90, 0xB953FDCD,
		 0x3A8B3DBD, 0x3A56E647, 0x3B0DC6B6, 0x3A1F5CF3,
		 0xBB2BC6A5, 0xBAA4A3F4, 0x3AD328E8, 0x3B71D1DD,
		 0x3B907C2A, 0xBA4E0572, 0xBBF0BDB2, 0xBB9A7BA0,
		 0x3B99B234, 0x3BE860C1, 0x3A641DC4, 0xBB0F854B,
		 0xBB05AE66, 0xBABB4971, 0x3B0EB331, 0x3B461455,
		 0xB993B884, 0xBAAC35BE, 0xBA546B83, 0xBB045112,
		 0xBB0F42DA, 0x3B033912, 0x3BC6743F, 0x3B203AA5,
		 0xBBA5AE42, 0xBBA076A3, 0x3A7ACCC0, 0x3B23E875,
		 0x3B1A1CA0, 0x3B99975D, 0x3B166B4A, 0xBBA65A8E,
		 0xBBC5C228, 0x3A7E89D8, 0x3B9A776B, 0x3B1AD13B,
		 0x39988005, 0xB9BA9068, 0xBB5CD6C2, 0xBB9676CC,
		 0x389701CE, 0x3AFE0CEF, 0xBAF0F217, 0xBB142A34,
		 0x3AA4D303, 0x3ABFFB36, 0x38D2D1C5, 0x3AAC84A6,
		 0xB9171414, 0xBB81DC0A, 0xBA727926, 0x3B842556,
		 0x3AB9F397, 0xBB8214F9, 0xBB82FEB5, 0x39866446,
		 0x3AC15364, 0xBAAB79AB, 0xBA8BDADD, 0x3B1617C5,
		 0x3B21C2C5, 0xBAB507C0, 0xBB4CC80F, 0xBB543481,
		 0xBB310FFF, 0xB8FB0941, 0x39386630, 0x3941FC7B,
		 0x3B4A01D2, 0x3AB5F83C, 0xBB5DBD39, 0xBB0D78CC,
		 0x3AFE9639, 0x3A92F55C, 0xBAD7DEB4, 0x3A202332,
		 0x3B3B7E87, 0x3AA83E7A, 0xB8FD88D4, 0x3A615473,
		 0x3B16EB0A, 0x3A82D670, 0xBAFF54F9, 0xBB3D2908,
		 0xBAC5C0B9, 0xB9636E99, 0xB88D2884, 0x3AA6AAD0,
		 0x3B421E3E, 0x3B006980, 0xBADFD858, 0xBB93D071,
		 0xBAD0878A, 0x3B976410, 0x3B9D77CB, 0xBAA60244,
		 0xBBAB93D3, 0xBB10C6CD, 0x3B2CDD4C, 0x3ADF15C0,
		 0xBB20B014, 0xBA91127C, 0x3B1B6AE1, 0x3931876B,
		 0xBB9B2952, 0xBB890FBC, 0x3A5D9F22, 0x3B2F3013,
		 0x3A8C787E, 0x3A1038CF, 0x3A762550, 0xB9277495,
		 0xBB36617B, 0xBB1D2756, 0x3AE5F119, 0x3B8BCC15,
		 0x3B6691A4, 0x3983C471, 0xBB2E5B00, 0xBA19CDA1,
		 0x3B3AD629, 0x3A4D5827, 0xBB32C868, 0xBAAA48BB,
		 0x3B54885A, 0x3B837CA6, 0xB9440FE8, 0xBB231B42,
		 0xBAAC6D7F, 0xBB3A633F, 0xBB75C2B0, 0x3A013AA2,
		 0x3B1C8314, 0xBA0493B7, 0xBABF576E, 0xB91B7D68,
		 0xB9999787, 0xBA106184, 0xB9732C9B, 0xBA09AAFA,
		 0xB9BC2008, 0x3AA76700, 0x3ADDF254, 0xBAFB8FB1,
		 0xBBAE6CF2, 0xBAEF3C99, 0x3B68839A, 0x3B6C6025,
		 0x3A10C162, 0xBB01CA71, 0xBAC64DA3, 0xB9B01A1C,
		 0xB9DEEED6, 0x3A89E187, 0x3A90E0F2, 0xB9C8DE4F,
		 0xB9F96293, 0x396A8656, 0x3A691D64, 0xB9F080A7,
		 0xBB632820, 0xBB5E58A1, 0xBA29B9CC, 0x3A7D4135,
		 0x3AD33FB3, 0x3AD66B43, 0xB97733DE, 0xBAD79FFC,
		 0xB9FF9171, 0x3B1EA530, 0x3B850353, 0x3A875951,
		 0xBAE4BD3E, 0x39439C8E, 0x3AC92C65, 0x39E6F7BB,
		 0x39F2CDF0, 0x3A6F0B73, 0x389787DB, 0xBA012169,
		 0x3AB4D431, 0x3B6972FB, 0x3A7E75D4, 0xBB20F986,
		 0xBAE8F8A4, 0xBA0E00A3, 0x3786A9E3, 0x392F2112,
		 0xBA9FADF9, 0xBAD89C68, 0xBABE1169, 0xBA421681,
		 0x3ABD0C0B, 0x3AD90DD2, 0xB90216A6, 0x3A9F8F0F,
		 0x3B3A804C, 0x3A8E79C6, 0xBA7BEF56, 0xBA58F180,
		 0xB98DBBE1, 0x392D1E38, 0x3A5CDB02, 0xBA745BF5,
		 0xBB414C1C, 0xBA9756F3, 0x3A680BEE, 0xBAC044B8,
		 0xBB3C80BE, 0x3AD6D76C, 0x3BA6D284, 0x3B106EDD,
		 0xBAC9BE87, 0xBA1FC6AB, 0x3ADA0FD3, 0xBA94B342,
		 0xBBA71F47, 0xBAEE01A8, 0x3B926E9E, 0x3B6B73FF,
		 0xBA853FA9, 0xBB1237B6, 0xBAA72150, 0xB9D993C3,
		 0xBA29226A, 0xBAA130F1, 0xB984A14A, 0x399CDA5A,
		 0xB9EE6F0A, 0xBA7E6660, 0xBA24EC85, 0xB9BF105D,
		 0xBA07C255, 0x376917F4, 0x3A5D05AD, 0x3AC198CA,
		 0x399B5956, 0xBB155FC3, 0xBB41A361, 0xBAA0F0C4,
		 0x3A29D891, 0x3AA105F9, 0xB983A675, 0xBB0F0C55,
		 0xBA3CA69E, 0x3B1E7A31, 0x3ABF6EE5, 0xBAA0EFEB,
		 0x39C16082, 0x3B28B22B, 0x3ABAF289, 0x399FADB9,
		 0xBA3FC07C, 0xBAD87638, 0xB9AD4345, 0x3AA2DF67,
		 0x3983FF30, 0xBA461B9B, 0x3828FACA, 0xB7EE2178,
		 0x3A7D8737, 0x3B1F59D6, 0xBA123FD9, 0xBB5C219F,
		 0xBAA7CC5B, 0x3A8F8E6D, 0x3ABE417A, 0xB9E45334,
		 0xBB224C4D, 0xBAB7DF2A, 0x3A91B353, 0x3B18B0EC,
		 0x3AA27D3C, 0xBA345B68, 0xB989AE2A, 0x3922BA14,
		 0xBA94F4F3, 0xBA82BE1E, 0x3A1DA6CE, 0x3AA99CBF,
		 0x3A2EB6AA, 0x3A38C42C, 0xB9211904, 0xBA9052EE,
		 0x393E5B98, 0x3A1E94E4, 0xB9C3B893, 0xBA2AD8FA,
		 0xB94F023C, 0xB93C6F10, 0xBA5BB639, 0xBA9C0F8F,
		 0xBA0F1AC3, 0x3B01A786, 0x3B14DBD4, 0xBB04C823,
		 0xBA8EEA60, 0x3B8574F9, 0x3AE7743A, 0xBB46EA5E,
		 0xBA982D2C, 0x3A92DE20, 0xB98E65DA, 0xBAE1D0DD,
		 0x3A29F793, 0x3B941746, 0x3B23D257, 0xBB2368F1,
		 0xBB1288D7, 0x3AD5F1D0, 0x3AD0A92F, 0xBB0F75A0,
		 0xBB48919B, 0xB906DBF7, 0x3B4A5F68, 0x3B38A345,
		 0x36EE706D, 0xBAEF173D, 0xBB020498, 0xBA54A3D9,
		 0xB8811828, 0xBAAF2C69, 0x398697EE, 0x3B811B7B,
		 0x3B1A7268, 0xBB331788, 0xBB6E5094, 0xBA6CDEBE,
		 0x3A882D82, 0x3AF61B68, 0x3AE47498, 0x38704651,
		 0xBB155757, 0xBB17B547, 0xBA29510C, 0xBA942C7D,
		 0xBA143A97, 0x3B27283F, 0x3AF7EE4F, 0xBB2C1152;
._coefs_filter_1.end:
	.align 1;
_mu1:
	.global _mu1;
	.type _mu1,STT_OBJECT;
	.var ..TW22[1] =
		 0x38D1B717;
._mu1.end:
	.align 1;
_yn1:
	.global _yn1;
	.type _yn1,STT_OBJECT;
	.var ..TW23[1] =
		 0x00000000;
._yn1.end:
	.align 1;
_err1:
	.global _err1;
	.type _err1,STT_OBJECT;
	.var ..TW24[1] =
		 0x00000000;
._err1.end:
	.align 1;
_performance:
	.global _performance;
	.type _performance,STT_OBJECT;
	.var ..TW25[1] =
		 0x00000000;
._performance.end:
	.align 1;
_AD_bit:
	.global _AD_bit;
	.type _AD_bit,STT_OBJECT;
	.var ..TW26[1] =
		 0x00000018;
._AD_bit.end:
	.align 1;
_FS:
	.global _FS;
	.type _FS,STT_OBJECT;
	.var ..TW27[1] =
		 0x00199993;
._FS.end:
	.align 1;
_lambda:
	.global _lambda;
	.type _lambda,STT_OBJECT;
	.var ..TW28[1] =
		 0x3C23D70A;
._lambda.end:
	.align 1;
_beta:
	.global _beta;
	.type _beta,STT_OBJECT;
	.var ..TW29[1] =
		 0x3F800000;
._beta.end:
	.align 1;
_mu2:
	.global _mu2;
	.type _mu2,STT_OBJECT;
	.var ..TW30[1] =
		 0x3D4CCCCD;
._mu2.end:
	.align 1;
_mu2def:
	.global _mu2def;
	.type _mu2def,STT_OBJECT;
	.var ..TW31[1] =
		 0x3D4CCCCD;
._mu2def.end:
	.align 1;
_mu2_0:
	.global _mu2_0;
	.type _mu2_0,STT_OBJECT;
	.var ..TW32[1] =
		 0x3A03126F;
._mu2_0.end:
	.align 1;
_yn2:
	.global _yn2;
	.type _yn2,STT_OBJECT;
	.var ..TW33[1] =
		 0x00000000;
._yn2.end:
	.align 1;
_err2:
	.global _err2;
	.type _err2,STT_OBJECT;
	.var ..TW34[1] =
		 0x00000000;
._err2.end:
	.align 1;
_inputRfil_n:
	.global _inputRfil_n;
	.type _inputRfil_n,STT_OBJECT;
	.var ..TW35[1] =
		 0x00000000;
._inputRfil_n.end:
	.align 2;
_coefs_filter_3:
	.global _coefs_filter_3;
	.type _coefs_filter_3,STT_OBJECT;
	.var ..TW36[500] =
		 0x3982C6DA, 0x37C9779D, 0xB9EBDBC3, 0xBA131F6F,
		 0x38332EA9, 0x3A26E311, 0x39EECA17, 0xB8DA9EB3,
		 0xB92F5CD2, 0xB8018CB4, 0xB97DAFAE, 0xB985ABA1,
		 0x38EC2B4D, 0x394BB71E, 0x371163F8, 0x38CE8ED4,
		 0x3985ADCE, 0xB63403A2, 0xB986E280, 0x3805B9F7,
		 0x3912EFD7, 0xBA5F5F56, 0xBA8DAB75, 0x3AAB82E5,
		 0x3B38D1AA, 0x3A425FAA, 0xBAB37B49, 0xBA810CE2,
		 0x39B74F47, 0x39A6F2E8, 0xBA25C858, 0xB9DB401B,
		 0x398A1E02, 0x388AF580, 0xB9496E8D, 0x385B6196,
		 0x37B44719, 0xB9C5C0A4, 0xB9795B0F, 0x390DA49D,
		 0x37AE5741, 0xBA32D525, 0xBAE25995, 0xBA5FA5C2,
		 0x3B3000B5, 0x3B94E810, 0x3B1029D0, 0xBAFBFC20,
		 0xBB58C997, 0xB932B03D, 0x3B313E6B, 0x3AB7A499,
		 0xBACB1CC6, 0xBB5BD046, 0xBB414B3F, 0xB96D075E,
		 0x3ADE6345, 0x39F9BE8B, 0xBA9BEFFC, 0xBA946251,
		 0xB9DB449C, 0x39B83F83, 0x3A7F423B, 0x3A363FFD,
		 0xB8E5D8C2, 0xBA18D30E, 0xBA2712A6, 0x395B0AC6,
		 0x3A944DE0, 0xB9063C3F, 0xBAF2CB1A, 0xBA487ABE,
		 0x3A8F8EC4, 0x3A99C8F9, 0x398BA605, 0xBA377AAF,
		 0xBA0A6894, 0x39F5D49F, 0x3A492367, 0x39DB3776,
		 0x391B3175, 0x3A5A8BA4, 0x3AC04F85, 0xB8DA7C3D,
		 0xBADD4651, 0xB9BB43CF, 0x3AEFF7BC, 0x3AAFC21C,
		 0xBA4856CF, 0xBA7E5922, 0x399D83DE, 0x3A1F4481,
		 0x392E9869, 0x39B1AF54, 0x3A0E2123, 0x36044CA7,
		 0xB8AB2351, 0x3A3B8960, 0x3A20B429, 0xBA212F73,
		 0xBA2F23E0, 0x3A2C2A19, 0x3A867129, 0xB999C3EC,
		 0xBA9D3F5F, 0xB8096070, 0x3A9E3996, 0x3996D172,
		 0xBA814783, 0xBA35DA2E, 0xB95251DB, 0xB98184CD,
		 0xB9875A11, 0xBA4F86F1, 0xBA8E0963, 0x39151BCB,
		 0x3A962324, 0x39CEB163, 0xBA45DB8F, 0xBA438CD8,
		 0xB991FFE5, 0xB98BE3CC, 0xB6C0D157, 0x3A71AD47,
		 0x3ADFD948, 0x3A26016C, 0xBACEF00C, 0xBAD9A177,
		 0xB99D73ED, 0xB9D18BB5, 0xB9FC8815, 0x3A91BC20,
		 0x3AC30344, 0xBA0D041E, 0xBABCACB4, 0xB99D174F,
		 0x39683E14, 0xB89F420A, 0x39E581B5, 0x3A8DDC35,
		 0x3975C062, 0xBA799563, 0xB9D40909, 0x3A30F753,
		 0x39639528, 0xBA8EFFB0, 0xBA859BD1, 0x3A2037DB,
		 0x3A9EDCFE, 0x3884DB79, 0xBA2542DA, 0xB979F78C,
		 0xB9E1BE39, 0xBA523C67, 0x39F34A61, 0x3AD6EDB9,
		 0x39B6507A, 0xBA9A9006, 0xB9F6E0C0, 0x39A2328F,
		 0xBA008ED5, 0xBA04636C, 0x3A28C4CB, 0x3A3E022A,
		 0xB975EB6E, 0xBA3AE313, 0xB9B32F5E, 0x394657B1,
		 0x39D9E222, 0x3A028673, 0x3A0C1CA2, 0x39B93144,
		 0xB6E135F7, 0xB927FA5F, 0x39A87CB6, 0x3A35993A,
		 0x391E2FBF, 0xB98A9980, 0xB9BA2B7B, 0xB9FF7F1E,
		 0x38A96BA8, 0x3A46BBDC, 0x3A65BF3C, 0x3A3B4B36,
		 0xB8F9EB32, 0xBA84CF0D, 0xBA5B9DE5, 0xB864EA13,
		 0x3A3B2E71, 0x3A9892C1, 0x39B62B50, 0xBA8F56A1,
		 0xBA8FD28A, 0x3885A3F4, 0x39BD54CE, 0xB9EF85D6,
		 0xBA555CED, 0x39AADC2E, 0x3A9EE407, 0x38E89F98,
		 0xBA9B2C23, 0xBA4A60BE, 0x399AB247, 0x39A39DE5,
		 0xB8FD21A9, 0x391B7256, 0x39021422, 0xB9E845F2,
		 0xB998A3D0, 0x39C70FC8, 0x396B91AC, 0xB9FBB053,
		 0xB96EFB5B, 0x39EC66FC, 0x39397F7B, 0xBA12B384,
		 0xBA1EC2A3, 0x38F31D4F, 0x3A0ED465, 0x39AF985C,
		 0x396B6437, 0x39BE60AA, 0x39F65EF0, 0xB7BF7FC8,
		 0xBA40642A, 0xBA02D190, 0x3640F4BC, 0x38F71B5B,
		 0x3A05148B, 0x3A6C7FC8, 0x3A10FD97, 0xB9CD717F,
		 0xBA3C02FC, 0xB8779594, 0x378066AB, 0xBA07B541,
		 0xB9AC5ACD, 0x3A0756BD, 0x3A4AEAE6, 0x372A97B8,
		 0xBA0A997E, 0xB907E86F, 0x39562D35, 0xB849F053,
		 0xB9B7C3CB, 0xB9803035, 0x3888BC94, 0x395CF5A5,
		 0x390A7AFF, 0xB94678A1, 0xB9C14B03, 0xB825BE16,
		 0x3940D11C, 0x39CAA119, 0x3A03D842, 0xB9588498,
		 0xBA709CE7, 0xB9F0B842, 0x3A1171DE, 0x3A10330E,
		 0xB9A93666, 0xB92469AD, 0x3A64BE32, 0x3A4AE7D4,
		 0xB9CD728F, 0xBA42F32F, 0xB91E200D, 0x39030487,
		 0x3934BB06, 0x3A19FE84, 0x3A3988EB, 0x390C65BC,
		 0xB9F6F6F8, 0xB9D5FFE9, 0xB83CC383, 0x3849BF93,
		 0x39D0B622, 0x3A846651, 0x3A1F98C6, 0xBA45A892,
		 0xBAA6AA82, 0xB995C90B, 0x39EBEEC5, 0xB99082EE,
		 0xB9E58D20, 0x39F6FE35, 0xB8A6FC74, 0xBA8B029E,
		 0x39817BC2, 0x3AAD055C, 0xB935F58A, 0xBA9D0318,
		 0xB82D657D, 0x3A53B69D, 0xB789CF57, 0xBA5B5A4E,
		 0xB9A18185, 0x39D008D6, 0xB92BFEB7, 0xBA4B8AD1,
		 0x38D78285, 0x3A6A6346, 0xB68B29AD, 0xBA6107A5,
		 0xB996AE9A, 0x39CA43CB, 0x395BF3C1, 0xB9554E03,
		 0xB9AA84E0, 0xB9715EA0, 0x39425414, 0x3A523C4D,
		 0x39EE7809, 0xBA2EF6EC, 0xBA3BA3CE, 0x3995CD4B,
		 0x399D57B5, 0xBA307098, 0xB9B5D292, 0x3A7F64DF,
		 0x3A31A4C7, 0xB9DCD652, 0xB9B66ED2, 0xB8A29120,
		 0xB92120C0, 0x39755AB4, 0x3A2C00B1, 0x39927995,
		 0xB908FD63, 0x39AF4C3C, 0x3A1A74B7, 0xB90E8596,
		 0xBA2A7AD2, 0xB9B17BF7, 0x395E7F38, 0x39A06CFA,
		 0xB9090C1B, 0xB95580B1, 0xB8316C9B, 0xB8FB99DC,
		 0x39080788, 0x3A13F13E, 0x39E933D1, 0xB98DB29F,
		 0xBA3331E8, 0xB8B6F53F, 0x3A30322E, 0x3A3CA037,
		 0x38ED639A, 0xBA160F01, 0xB9EE3C10, 0xB83860BF,
		 0x386C3637, 0x39FB5386, 0x3A1178AE, 0xB8AB8DAD,
		 0xB9250E63, 0x39ECE0BF, 0x3A0B704E, 0xB788913A,
		 0xB7FEDACE, 0x3993ADD5, 0x3819401C, 0xB9B3D46B,
		 0xB9BAB5D7, 0xB945FC3B, 0x388E6293, 0x38572624,
		 0xB98A8359, 0xB90007AE, 0xB8899252, 0xBA3D1E2F,
		 0xBA1CDF73, 0x3A125F68, 0x3A449B38, 0xB9AF77C0,
		 0xBA552C68, 0xB93BC622, 0x39A79417, 0xB6B2EBCC,
		 0xB98AEFB0, 0x39C8BA67, 0x3A16995C, 0xBA0F77BC,
		 0xBA84686C, 0xB903505F, 0x3A0F073B, 0x39E4DA73,
		 0x38BB89AA, 0xB8D33387, 0xB9159B81, 0xB6CE10BD,
		 0xB903BCEB, 0xBA0A9758, 0xB9D635CD, 0x362B2E0E,
		 0x3943077C, 0x394D9EF0, 0x381B0901, 0xB855EDEB,
		 0xB90F64B9, 0xB9B0B4F0, 0xB9BE5ABD, 0xB8E01D0A,
		 0x39E66E71, 0x3A2AEE9D, 0x3918DDB0, 0xB987E46C,
		 0x38F591B0, 0x3A298341, 0x399775CC, 0xB9197873,
		 0x39F7F18E, 0x3A33D246, 0xB9EAA269, 0xBA46889A,
		 0x39931C8C, 0x3989BABA, 0xBA33930D, 0xB9E1FF2C,
		 0x39DBA8A2, 0x38F653E8, 0xBA1174AF, 0xB9AD69C5,
		 0x3956624A, 0x3949A478, 0x39A63A9A, 0x3A31D620,
		 0x39C7B0D1, 0xB9975ED9, 0xB98FECC8, 0x390E923D,
		 0xB921FDAB, 0xBA03896B, 0x39151733, 0x3A3CD770,
		 0x39E19008, 0xB97E3836, 0xBA4495DE, 0xBA0A7A35,
		 0x39007378, 0x39D4B81B, 0x394793D8, 0xB86281E7,
		 0xB977BA5C, 0xB9CFE2D0, 0x38EE941E, 0x3A2C72C0,
		 0x39398DB5, 0xB99F38D9, 0xB90AEDFA, 0xB982B600,
		 0xBA3688C3, 0xB9B94B3C, 0x3A2417EF, 0x3A178001,
		 0xB8AA4D74, 0xB7C2FF29, 0x36B007B5, 0xB9D40FC9,
		 0xB93ED286, 0x39E70299, 0x39A8A811, 0xB9FEC959,
		 0xBA37BEFB, 0x3995B534, 0x3A6CF51F, 0x394DAF4E,
		 0xB9A74053, 0xB990DC0E, 0xBA0811F3, 0xB97FF75E,
		 0x3A21CE5D, 0x3A0E14C7, 0x390883B6, 0x3A074C93,
		 0x39E98BA6, 0xBA3F1CB4, 0xBA9BD0D5, 0xB9219892,
		 0x3A4A5ED0, 0x39BF520A, 0xB97D5A14, 0x37380293,
		 0x399A48C7, 0xB88C8507, 0xB9921C57, 0xB75A609A,
		 0x3803D30C, 0xB8242242, 0x38D00181, 0x3884003A,
		 0xB9756219, 0xB9CF8248, 0xB887F23A, 0x3A0A2BF2,
		 0x3A0640FC, 0xB9425C4E, 0xB9D7FAE7, 0xB9062BEA;
._coefs_filter_3.end:
	.align 1;
_mu3:
	.global _mu3;
	.type _mu3,STT_OBJECT;
	.var ..TW37[1] =
		 0x38D1B717;
._mu3.end:
	.align 1;
_yn3:
	.global _yn3;
	.type _yn3,STT_OBJECT;
	.var ..TW38[1] =
		 0x00000000;
._yn3.end:
	.align 1;
_err3:
	.global _err3;
	.type _err3,STT_OBJECT;
	.var ..TW39[1] =
		 0x00000000;
._err3.end:
	.align 1;
_yfila3:
	.global _yfila3;
	.type _yfila3,STT_OBJECT;
	.var ..TW40[1] =
		 0x00000000;
._yfila3.end:
	.align 1;
_noiseFlag:
	.global _noiseFlag;
	.type _noiseFlag,STT_OBJECT;
	.var ..TW41[1] =
		 0x00000000;
._noiseFlag.end:
	.align 1;
_RightInPrev:
	.global _RightInPrev;
	.type _RightInPrev,STT_OBJECT;
	.var ..TW42[1] =
		 0x00000000;
._RightInPrev.end:
	.align 1;
_alpha:
	.global _alpha;
	.type _alpha,STT_OBJECT;
	.var ..TW43[1] =
		 0x3727C5AC;
._alpha.end:

	.align 4;
	.var _input1R[501];
	.weak _input1R;
	.align 4;
	.var _input1L[501];
	.weak _input1L;
	.align 4;
	.var _input2R[2001];
	.weak _input2R;
	.align 4;
	.var _input2L[2001];
	.weak _input2L;
	.align 4;
	.var _input3R[501];
	.weak _input3R;
	.align 4;
	.var _input3L[501];
	.weak _input3L;
	.align 4;
	.var _input1R2[501];
	.weak _input1R2;
	.align 4;
	.var _input2R2[2001];
	.weak _input2R2;
	.align 1;
	.var _j[1];
	.weak _j;
	.align 1;
	.var _k[1];
	.weak _k;
	.align 1;
	.var _k_input[1];
	.weak _k_input;
	.align 1;
	.var _ix[1];
	.weak _ix;
	.align 1;
	.var _out_2[1];
	.weak _out_2;
	.align 1;
	.var _inRdata[1];
	.weak _inRdata;
	.align 1;
	.var _inLdata[1];
	.weak _inLdata;
	.align 1;
	.var _inNoise[1];
	.weak _inNoise;
	.align 2;
	.var _inNoiseArray1[501];
	.weak _inNoiseArray1;
	.align 2;
	.var _inNoiseArray3[501];
	.weak _inNoiseArray3;
	.align 2;
	.var _un1[500];
	.weak _un1;
	.align 2;
	.var _coefs_filter_2[2000];
	.weak _coefs_filter_2;
	.align 2;
	.var _un2[2000];
	.weak _un2;
	.align 2;
	.var _inputRfil[2001];
	.weak _inputRfil;
	.align 2;
	.var _yn2array[501];
	.weak _yn2array;
	.align 2;
	.var _noise1[501];
	.weak _noise1;
	.align 2;
	.var _noise2[2001];
	.weak _noise2;
	.align 2;
	.var _noise3[501];
	.weak _noise3;
	.align 1;
	.var _noise_n[1];
	.weak _noise_n;
	.align 2;
	.var _noise[2000];
	.weak _noise;

	.extern _isProcessing;
	.type _isProcessing,STT_OBJECT;
	.extern _rightIn;
	.type _rightIn,STT_OBJECT;
	.extern _inputR;
	.type _inputR,STT_OBJECT;
	.extern _inputL;
	.type _inputL,STT_OBJECT;
	.extern _out_1;
	.type _out_1,STT_OBJECT;
	.extern _i_dec;
	.type _i_dec,STT_OBJECT;
