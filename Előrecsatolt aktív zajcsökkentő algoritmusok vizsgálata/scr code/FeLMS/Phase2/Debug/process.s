	.file "process.c";

//  Compilation time: Mon Nov 20 18:45:42 2023


//  Compiler options: -c -file-attr ProjectName=FeLMS_with_A3 -O -Ov100 -g -save-temps -path-output Debug -ED -no-multiline -double-size-32 -flags-compiler --diag_warning,implicit_func_decl -warn-protos -force-circbuf -proc ADSP-21364 -o Debug\process.doj -MM

//  Architecture: ADSP-21364

//  Silicon revision: 0.2

	.section/pm/DOUBLE32 seg_pmco;

.epctext:
_handle_LED:
.LN_handle_LED:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r1-r2,r8,r12,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":667
	modify(i7,-2); 
// Diagnostic: Optimizer now optimizing for speed
	r2=m13; 
	r8=r2+1, r12=i6; 
.LN1:
// line 670
	r1=-2; 
	r12=r12+r1, dm(-2,i6)=r4; 
	dm(6144)=r2; 
	dm(6168)=r12; 
	dm(6169)=r8; 
	dm(6170)=r8; 
	dm(6161)=r8; 
.LN2:
// line 675
	r2=4194304; 
	dm(6162)=r8; 
.LN3:
// line 677
	r12=871; 
	dm(6160)=r2; 
	dm(6144)=r12; 
.LN4:
// line 678
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._handle_LED.end:
._handle_LED.end:
	.global _handle_LED;
	.type _handle_LED,STT_FUNC;

_readDAIpin:
.LN_readDAIpin:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,r2,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":648
	modify(i7,-2); 
.LN5:
// line 651
		f2 = flags;
	
	r2=dm(9401); 
.LN6:
// line 660
	r0=r2 and r4; 
.LN7:
// line 662
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._readDAIpin.end:
._readDAIpin.end:
	.global _readDAIpin;
	.type _readDAIpin,STT_FUNC;

_flagTest:
.LN_flagTest:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 2 words
//
//   Scratch registers used:{r0,i12,acc}
//
//   No call preserved registers used.
//-------------------------------------------------------------------
// line "process.c":633
	modify(i7,-2); 
.LN8:
// line 636
		 r2 = flags;
	
.LN9:
// line 642
	r0=r4 and r2; 
.LN10:
// line 644
	i12=dm(m7,i6); 
	jump(m14,i12)(DB); rframe; nop; 

.LN._flagTest.end:
._flagTest.end:
	.global _flagTest;
	.type _flagTest,STT_FUNC;

_process:
.LN_process:
//-------------------------------------------------------------------
//   Procedure statistics:
//
//   Frame size            = 14 words
//
//   Scratch registers used:{r0-r2,r4,r8,r12,i4,i12,m4,s0,s2,s4,acc,mcc,scc,lcntr}
//
//   Call preserved registers used:{r3,r5-r7,r9,r13,i0-i3,i5,l3,b3,m0}
//
//   Registers clobbered by function calls:{r0-r2,r4,r8,r12,i4,i12-i13,b4,b12-b13,m4,m12,s0-s15,ustat1-ustat4,acc,mcc,scc,btf,lcntr,smrf,smrb,sacc,smcc,sscc,sbtf}
//
//   Registers used in mul add instructions:{r1-r2,r4,r6,r8-r9,r12-r13,i4}
//-------------------------------------------------------------------
// line "process.c":192
	modify(i7,-14); 
	r2=b3; 
	dm(-9,i6)=r2; 
	r2=m0; 
	dm(-8,i6)=r2; 
	r2=i0; 
	dm(-7,i6)=r2; 
	r2=i1; 
	dm(-6,i6)=r2; 
	r2=i2; 
	dm(-5,i6)=r2; 
	r2=i3; 
	dm(-4,i6)=r2; 
	r2=i5; 
	dm(-15,i6)=r3; 
	dm(-14,i6)=r5; 
	dm(-13,i6)=r6; 
	dm(-12,i6)=r7; 
	dm(-11,i6)=r9; 
	dm(-10,i6)=r13; 
	dm(-3,i6)=r2; 
	r6=m14; 
// Diagnostic: Optimizer now optimizing for speed
.LN11:
// line 195
	dm(_isProcessing)=r6; 
.LN12:
// line 210
	r3=524288; 
.LN13:
// line 198
	cjump _setDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	r4=r3; 
.LN14:
// line 210
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN15:
// line 211
	r2=8; 
	r8=dm(_led_value); 
	r2=r8 or r2, r12=m14; 
.LN16:
// line 213
	r1=-9; 
.LN17:
// line 210
	r4=pass r0; 
	if le r2=r8 and r1; 
.LN18:
// line 217
	r4=262144; 
.LN19:
// line 211
	dm(_led_value)=r2; 
.LN20:
// line 217
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN21:
// line 218
	r5=4; 
	r8=dm(_led_value); 
	r2=r8 or r5; 
.LN22:
// line 220
	r3=-5; 
.LN23:
// line 217
	r4=pass r0; 
	if le r2=r8 and r3; 
.LN24:
// line 224
	r4=16; 
.LN25:
// line 218
	dm(_led_value)=r2; 
.LN26:
// line 224
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN27:
// line 225
	r1=2; 
	r7=dm(_led_value); 
	r2=r7 or r1, r4=r5; 
.LN28:
// line 227
	r8=-3; 
.LN29:
// line 224
	r0=pass r0; 
	if eq r2=r7 and r8; 
.LN30:
// line 225
	dm(_led_value)=r2; 
.LN31:
// line 231
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN32:
// line 232
	r7=dm(_led_value); 
	r2=r7 or r12; 
.LN33:
// line 234
	r12=-2; 
.LN34:
// line 231
	r4=pass r0; 
	if eq r2=r7 and r12; 
.LN35:
// line 238
	r4=16; 
.LN36:
// line 232
	dm(_led_value)=r2; 
.LN37:
// line 238
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN38:
	r2=pass r0; 
	if eq jump(pc,.P4L225) (DB); 
	r4=r5; 
	nop; 
.LN39:
	r2=dm(_delayCtnr); 
	r2=r2+1; 
	dm(_delayCtnr)=r2; 
	r4=r5; 

.P4L225:
.LN40:
// line 239
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN41:
	r2=pass r0; 
	if eq jump(pc,.P4L226) (DB); 
.LN42:
// line 240
	r4=524288; 
	nop; 
.LN43:
// line 239
	r2=dm(_delayCtnr2); 
	r2=r2+1; 
	dm(_delayCtnr2)=r2; 
.LN44:
// line 240
	r4=524288; 

.P4L226:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN45:
	r2=pass r0; 
	if gt jump(pc,.P4L5) (DB); 
.LN46:
	r4=262144; 
	nop; 

.P4L6:
.LN47:
// line 241
	r4=524288; 

.P4L250:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN48:
	r2=pass r0; 
	if le jump(pc,.P4L227) (DB); 
.LN49:
// line 242
	r4=262144; 
	nop; 
.LN50:
// line 241
	r2=dm(_delayCtnr4); 
	r2=r2+1; 
	dm(_delayCtnr4)=r2; 
.LN51:
// line 242
	r4=262144; 

.P4L227:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN52:
	r2=pass r0; 
	if le jump(pc,.P4L228) (DB); 
.LN53:
// line 246
	r4=16; 
	nop; 
.LN54:
// line 242
	r2=dm(_delayCtnr5); 
	r2=r2+1; 
	dm(_delayCtnr5)=r2; 
.LN55:
// line 246
	r4=16; 

.P4L228:
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN56:
	r2=pass r0; 
	if ne jump(pc,.P4L229) (DB); 
	r4=r5; 
	nop; 
	r2=dm(_delayCtnr); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L230) (DB); 
	r4=r5; 
	nop; 
.LN57:
// line 248
	r2=dm(_fxlmsFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L16) (DB); 
.LN58:
// line 247
	dm(_delayCtnr)=r2; 
	nop; 
.LN59:
// line 248
	dm(_fxlmsFlag)=r6; 

.P4L13:
	r4=r5; 

.P4L230:

.P4L229:
.LN60:
// line 253
	cjump _flagTest (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN61:
	r2=pass r0; 
	if ne jump(pc,.P4L231) (DB); 
.LN62:
// line 261
	r4=262144; 
	nop; 
.LN63:
// line 253
	r2=dm(_delayCtnr2); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L232) (DB); 
.LN64:
// line 261
	r4=262144; 
	nop; 
.LN65:
// line 255
	r2=dm(_identFlag); 
	r4=pass r2, r2=m13; 
	if ne jump(pc,.P4L21) (DB); 
.LN66:
// line 254
	dm(_delayCtnr2)=r2; 
	nop; 
.LN67:
// line 255
	dm(_identFlag)=r6; 

.P4L18:
.LN68:
// line 261
	r4=262144; 

.P4L232:

.P4L231:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN69:
	r2=pass r0; 
	if le jump(pc,.P4L233) (DB); 
.LN70:
// line 292
	r4=524288; 
	nop; 
.LN71:
// line 261
	r4=dm(_resetFlag); 
	r2=m14; 
	comp(r4, r2); 
	if ne jump(pc,.P4L234) (DB); 
.LN72:
// line 292
	r4=524288; 
	nop; 
	r2=r2-1; 
.LN73:
// line 263
	r4=dm(_mu2def); 
.LN74:
// line 266
	dm(_err2)=r2; 
.LN75:
// line 265
	dm(_yfila3)=r2; 
.LN76:
// line 264
	dm(_inputRfil_n)=r2; 
.LN77:
// line 262
	dm(_fxlmsFlag)=r2; 
.LN78:
// line 263
	dm(_mu2)=r4; 
.LN79:
// line 267
	bit set mode1 0x200000; nop; 
	i4=_coefs_filter_2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L28-1)until lce; 

.P4L27:
//-------------------------------------------------------------------
//   Loop at "process.c" line 267 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 1 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   1 out of    1 (100.0%)
//     dm dag                          used   1 out of    1 (100.0%)
//     pm dag                          used   1 out of    1 (100.0%)
//     shift immediate                 used   1 out of    1 (100.0%)
//     memory access                   used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
.LN80:
// line 268
	dm(i4,2)=r2; 
.LN81:
// line 267
	//end loop .P4L27; 
//-------------------------------------------------------------------
//   End Loop L27
//-------------------------------------------------------------------

.P4L28:

.P4L31:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN82:
// line 270
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray1; 
	i0=_input1R2; 
	r2=m13; 
	lcntr=250, do(pc,.P4L36-1)until lce; 

.P4L35:
//-------------------------------------------------------------------
//   Loop at "process.c" line 270 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN83:
// line 271
	dm(i0,2)=r2; 
.LN84:
// line 272
	dm(i4,2)=r2; 
.LN85:
// line 270
	//end loop .P4L35; 
//-------------------------------------------------------------------
//   End Loop L35
//-------------------------------------------------------------------

.P4L36:

.P4L39:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN86:
// line 271
	dm(m5,i0)=m13; 
.LN87:
// line 272
	dm(m5,i4)=m13; 
.LN88:
// line 275
	bit set mode1 0x200000; nop; 
	i4=_delayed; 
	i0=_inputRfil; 
	i1=_input2R2; 
	r2=m13; 
	lcntr=1000, do(pc,.P4L44-1)until lce; 

.P4L43:
//-------------------------------------------------------------------
//   Loop at "process.c" line 275 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     pm dag                          used   3 out of    3 (100.0%)
//     shift immediate                 used   3 out of    3 (100.0%)
//     memory access                   used   3 out of    6 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN89:
// line 276
	dm(i1,2)=r2; 
.LN90:
// line 277
	dm(i0,2)=r2; 
.LN91:
// line 278
	dm(i4,2)=r2; 
.LN92:
// line 275
	//end loop .P4L43; 
//-------------------------------------------------------------------
//   End Loop L43
//-------------------------------------------------------------------

.P4L44:

.P4L47:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN93:
// line 276
	dm(m5,i1)=m13; 
.LN94:
// line 277
	dm(m5,i0)=m13; 
.LN95:
// line 278
	dm(m5,i4)=m13; 
.LN96:
// line 281
	bit set mode1 0x200000; nop; 
	i4=_inNoiseArray3; 
	i0=_yn2array; 
	r2=m13; 
	lcntr=250, do(pc,.P4L52-1)until lce; 

.P4L51:
//-------------------------------------------------------------------
//   Loop at "process.c" line 281 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN97:
// line 282
	dm(i0,2)=r2; 
.LN98:
// line 283
	dm(i4,2)=r2; 
.LN99:
// line 281
	//end loop .P4L51; 
//-------------------------------------------------------------------
//   End Loop L51
//-------------------------------------------------------------------

.P4L52:

.P4L55:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN100:
// line 282
	dm(m5,i0)=m13; 
.LN101:
// line 283
	dm(m5,i4)=m13; 
.LN102:
// line 285
	bit set mode1 0x200000; nop; 
	r4=m13; 
	i4=_inLdataArray_i; 
	i0=_inNoiseArray1_i; 
.LN103:
	r0=2; 
	r2=r4; 
.LN104:
	lcntr=250, do(pc,.P4L60-1)until lce; 

.P4L59:
//-------------------------------------------------------------------
//   Loop at "process.c" line 285 col 6
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   2 out of    2 (100.0%)
//     dm dag                          used   2 out of    2 (100.0%)
//     pm dag                          used   2 out of    2 (100.0%)
//     shift immediate                 used   2 out of    2 (100.0%)
//     memory access                   used   2 out of    4 ( 50.0%)
//     multifunction alu               used   1 out of    2 ( 50.0%)
//     multifunction float multiply    used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//   Vectorization peeled 1 unconditional iterations from the back of the loop
//-------------------------------------------------------------------
.LN105:
	r2=r2+r0, dm(i0,2)=r4; 
.LN106:
// line 287
	dm(i4,2)=r4; 
.LN107:
// line 285
	//end loop .P4L59; 
//-------------------------------------------------------------------
//   End Loop L59
//-------------------------------------------------------------------

.P4L60:

.P4L63:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	bit clr mode1 0x200000; nop; 
.LN108:
	r2=r2+1; 
.LN109:
// line 286
	dm(m5,i0)=m13; 
.LN110:
// line 287
	dm(m5,i4)=m13; 
.LN111:
// line 285
	dm(_k)=r2; 
.LN112:
// line 292
	r4=524288; 

.P4L234:

.P4L233:
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN113:
	r2=pass r0; 
	if le jump(pc,.P4L65) (DB); 
.LN114:
	r4=262144; 
	nop; 

.P4L66:
.LN115:
// line 299
	r2=dm(_resetFlag); 

.P4L249:
	r2=pass r2; 

.P4L248:

.P4L247:
	if eq jump(pc,.P4L71) (DB); 
.LN116:
	r4=524288; 
	nop; 

.P4L72:
.LN117:
// line 305
	r2=dm(_resetFlag); 
	r2=pass r2; 

.P4L246:

.P4L245:
	if eq jump(pc,.P4L75) (DB); 
.LN118:
	r4=262144; 
	nop; 

.P4L76:
.LN119:
// line 312
	r4=dm(_resetFlag); 
	r2=m14; 

.P4L244:

.P4L243:
	comp(r4, r2); 
	if ne jump(pc,.P4L80) (DB); 
.LN120:
// line 313
	r2=dm(_led_value); 
	nop; 
.LN121:
// line 316
	r4=240; 
	r2=r2 or r4; 

.P4L81:
	r4=m14; 
.LN122:
// line 326
	r6=dm(_identFlag); 
.LN123:
// line 327
	r0=r2 or r4; 
.LN124:
// line 326
	comp(r6, r4); 
	if ne r0=r2 and r12; 
.LN125:
// line 334
	r12=dm(_fxlmsFlag); 
.LN126:
// line 335
	r2=r0 or r1; 
.LN127:
// line 334
	comp(r12, r4); 
	if ne r2=r0 and r8; 
.LN128:
// line 342
	r8=dm(_ident3Flag); 
.LN129:
// line 343
	r12=r2 or r5; 
.LN130:
// line 342
	comp(r8, r4); 
	if ne r12=r2 and r3; 
.LN131:
// line 354
	comp(r6, r4); 
	if eq jump(pc,.P4L82) (DB); 
.LN132:
// line 343
	dm(_led_value)=r12; 
	nop; 
	r2=m14; 
.LN133:
// line 354
	comp(r8, r2); 
	if eq jump(pc,.P4L82); 

.P4L84:
.LN134:
// line 370
	r2=dm(_m1); 
	r2=r2-1; 
.LN135:
// line 371
	r12=pass r2; 
	if ge jump(pc,.P4L235) (DB); 
.LN136:
// line 370
	dm(_m1)=r2; 
.LN137:
// line 376
	r2=dm(_m2); 
.LN138:
// line 373
	r2=499; 
	dm(_m1)=r2; 
.LN139:
// line 376
	r2=dm(_m2); 

.P4L235:
	r2=r2-1; 
.LN140:
// line 377
	r12=pass r2; 
	if ge jump(pc,.P4L236) (DB); 
.LN141:
// line 376
	dm(_m2)=r2; 
.LN142:
// line 382
	r2=dm(_m3); 
.LN143:
// line 379
	r2=1999; 
	dm(_m2)=r2; 
.LN144:
// line 382
	r2=dm(_m3); 

.P4L236:
	r2=r2-1; 
.LN145:
// line 383
	r12=pass r2; 
	if ge jump(pc,.P4L237) (DB); 
.LN146:
// line 382
	dm(_m3)=r2; 
.LN147:
// line 388
	r2=dm(_m1_i); 
.LN148:
// line 385
	r2=499; 
	dm(_m3)=r2; 
.LN149:
// line 388
	r2=dm(_m1_i); 

.P4L237:
	r2=r2-1; 
.LN150:
// line 389
	r12=pass r2; 
	if ge jump(pc,.P4L238) (DB); 
.LN151:
// line 388
	dm(_m1_i)=r2; 
.LN152:
// line 394
	r2=dm(_m1_id); 
.LN153:
// line 391
	r2=499; 
	dm(_m1_i)=r2; 
.LN154:
// line 394
	r2=dm(_m1_id); 

.P4L238:
	r2=r2-1; 
.LN155:
// line 395
	r12=pass r2; 
	if ge jump(pc,.P4L94) (DB); 
.LN156:
// line 394
	dm(_m1_id)=r2; 
	nop; 
.LN157:
// line 397
	r2=499; 
	dm(_m1_id)=r2; 

.P4L94:
.LN158:
// line 403
	modify(i7,m7); 
	r3=41; 
	r12=_inputR; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
	modify(i7,2); 
.LN159:
	dm(_inRdata)=r0; 
.LN160:
// line 404
	modify(i7,m7); 
	r12=_inputL; 
	dm(i7,m7)=r3; 
	dm(i7,m7)=r12; 
	r2=dm(_i_dec); 
	r4=_coefs_dec; 
	r8=r12+r2, modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN161:
// line 406
	r2=dm(_m1); 
	i2=_inNoiseArray1; 
.LN162:
// line 407
	r2=pass r2, m4=r2; 
.LN163:
// line 405
	r12=dm(_noise_n); 
.LN164:
// line 404
	modify(i7,2); 
.LN165:
	dm(_inLdata)=r0; 
.LN166:
// line 407
	if ne jump(pc,.P4L96) (DB); 
.LN167:
// line 405
	dm(_inNoise)=r12; 
.LN168:
// line 406
	dm(m4,i2)=r12; 
.LN169:
// line 409
	dm(_inNoiseArray1+500)=r12; 

.P4L96:
.LN170:
// line 411
	r2=dm(_m3); 
	i1=_inNoiseArray3; 
.LN171:
// line 412
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L239) (DB); 
.LN172:
// line 411
	dm(m4,i1)=r12; 
.LN173:
// line 417
	r2=dm(_m1_i); 
.LN174:
// line 414
	dm(_inNoiseArray3+500)=r12; 
.LN175:
// line 417
	r2=dm(_m1_i); 

.P4L239:
	i3=_inNoiseArray1_i; 
.LN176:
// line 418
	r8=pass r2, m4=r2; 
	if ne jump(pc,.P4L240) (DB); 
.LN177:
// line 417
	dm(m4,i3)=r12; 
.LN178:
// line 422
	i4=_inLdataArray_i; 
.LN179:
// line 420
	dm(_inNoiseArray1_i+500)=r12; 
.LN180:
// line 422
	i4=_inLdataArray_i; 

.P4L240:
.LN181:
// line 423
	r2=pass r2; 
	if ne jump(pc,.P4L102) (DB); 
.LN182:
// line 422
	dm(m4,i4)=r0; 
	modify(i4,m4); 
.LN183:
// line 425
	dm(_inLdataArray_i+500)=r0; 

.P4L102:
.LN184:
// line 431
	r2=dm(_i_tmp); 
	r2=r2-1; 
.LN185:
// line 432
	r12=pass r2; 
.LN186:
// line 427
	r12=dm(_rightIn); 
.LN187:
// line 432
	if ge jump(pc,.P4L104) (DB); 
.LN188:
// line 431
	dm(_i_tmp)=r2; 
.LN189:
// line 427
	dm(_out_2)=r12; 
.LN190:
// line 434
	r2=99; 
	dm(_i_tmp)=r2; 

.P4L104:
.LN191:
// line 444
	m4=dm(_i_tmp); 
	F1=F0*F0, r2=m4; 
.LN192:
// line 439
	r8=99; 
	r4=pass r2, r12=m14; 
.LN193:
// line 444
	i0=_buff_tmp; 
	if ne r8=r2-1; 
.LN194:
// line 445
	m0=r8; 
.LN195:
// line 444
	dm(m4,i0)=r1; 
.LN196:
// line 445
	r4=1008981770; 
	r13=dm(m0,i0); 
	r5=1120403456; 
	F9=F13*F4; 
	F8=F9*F5; 
	F2=F1*F4, F8=F8-F13; 
	F13=F8*F4; 
	F8=F2*F5, F13=F9-F13; 
	r9=dm(_performance); 
	F1=F8-F1; 
	F8=F1*F4, F4=F9-F13; 
	F2=F2-F8; 
.LN197:
// line 458
	r8=dm(_identFlag); 
	comp(r8, r12); 
	if eq jump(pc,.P4L105) (DB); 
.LN198:
// line 445
	F2=F4+F2; 
	dm(_performance)=r2; 

.P4L106:
.LN199:
// line 507
	r12=dm(_ident3Flag); 
	r2=m14; 
	comp(r12, r2); 
	if eq jump(pc,.P4L111) (DB); 
.LN200:
// line 512
	r5=500; 
	nop; 

.P4L112:
.LN201:
// line 536
	r2=dm(_fxlmsFlag); 
	r12=m14; 
	comp(r2, r12); 
	if eq jump(pc,.P4L117) (DB); 
.LN202:
// line 540
	r2=dm(_m1); 
	r8=dm(_inRdata); 

.P4L118:
.LN203:
// line 600
	r12=dm(_identFlag); 
	r2=m14; 
	comp(r12, r2); 
	if ne jump(pc,.P4L241) (DB); 
.LN204:
// line 604
	r12=dm(_fxlmsFlag); 
	r2=m14; 
.LN205:
// line 601
	m4=dm(_m1); 
	r2=dm(m4,i2); 
	dm(_out_1)=r2; 
.LN206:
// line 604
	r12=dm(_fxlmsFlag); 
	r2=m14; 

.P4L241:
	comp(r12, r2); 
	if ne jump(pc,.P4L242) (DB); 
.LN207:
// line 607
	r12=dm(_ident3Flag); 
	r2=m14; 
.LN208:
// line 605
	r2=dm(_yn2); 
	dm(_out_1)=r2; 
.LN209:
// line 607
	r12=dm(_ident3Flag); 
	r2=m14; 

.P4L242:
	comp(r12, r2); 
	if ne jump(pc,.P4L139); 
.LN210:
// line 608
	m4=dm(_m3); 
	r2=dm(m4,i1); 
	dm(_out_1)=r2; 

.P4L139:
.LN211:
// line 626
	cjump _clrDAIproc (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN212:
// line 627
	r4=dm(_led_value); 
	r0=m13; 
	cjump _handle_LED (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN213:
// line 631
	jump(pc,.P4L224) (DB); 
.LN214:
// line 630
	dm(_isProcessing)=r0; 
.LN215:
// line 631
	r3=dm(-15,i6); 

.P4L117:
.LN216:
// line 540
	r4=dm(_yfila3); 
	i4=_input1R2; 
	r12=r12-1, m4=r2; 
	F8=F8-F4; 
.LN217:
// line 541
	r2=pass r2; 
	if ne jump(pc,.P4L120) (DB); 
.LN218:
// line 538
	dm(_yn2)=r12; 
.LN219:
// line 540
	dm(m4,i4)=r8; 
.LN220:
// line 542
	dm(_input1R2+500)=r8; 

.P4L120:
.LN221:
// line 545
	r2=dm(_m2); 
	i0=_input2R2; 
.LN222:
// line 546
	r12=pass r2, m4=r2; 
	i4=i0; 
	if ne jump(pc,.P4L122) (DB); 
.LN223:
// line 545
	dm(m4,i0)=r8; 
	modify(i4,m4); 
.LN224:
// line 547
	dm(_input2R2+2000)=r8; 

.P4L122:
.LN225:
// line 552
	i3=_inputRfil; 
.LN226:
// line 553
	r2=pass r2, r12=dm(m4,i0); 
	if ne jump(pc,.P4L124) (DB); 
.LN227:
// line 552
	dm(m4,i3)=r12; 
	nop; 
.LN228:
// line 554
	dm(_inputRfil+2000)=r12; 

.P4L124:
.LN229:
// line 556
	modify(i7,m7); 
	r3=2000; 
	r12=_input2R2; 
	r8=i4; 
	r4=_coefs_filter_2; 
	dm(i7,m7)=r3; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN230:
// line 557
	r2=dm(_m3); 
	i4=_yn2array; 
.LN231:
// line 556
	F12=-F0, m4=r2; 
.LN232:
// line 558
	r2=pass r2; 
.LN233:
// line 556
	modify(i7,2); 
.LN234:
// line 557
	dm(m4,i4)=r12; 
.LN235:
// line 558
	if ne jump(pc,.P4L126) (DB); 
.LN236:
// line 556
	dm(_yn2)=r12; 
.LN237:
// line 557
	modify(i4,m4); 
.LN238:
// line 559
	dm(_yn2array+500)=r12; 

.P4L126:
.LN239:
// line 562
	modify(i7,m7); 
	r5=500; 
	r12=_yn2array; 
	r8=i4; 
	r4=_coefs_filter_3; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN240:
// line 565
	r2=dm(_err2_ind); 
	r2=r2-1; 
.LN241:
// line 566
	r12=pass r2; 
.LN242:
// line 563
	r12=dm(_inLdata); 
.LN243:
// line 562
	modify(i7,2); 
.LN244:
	dm(_yfila3)=r0; 
.LN245:
// line 566
	if ge jump(pc,.P4L128) (DB); 
.LN246:
// line 565
	dm(_err2_ind)=r2; 
.LN247:
// line 563
	dm(_err2)=r12; 
.LN248:
// line 568
	r2=499; 
	dm(_err2_ind)=r2; 

.P4L128:
.LN249:
// line 570
	r2=dm(_err2_ind); 
	i4=_err2_arr; 
.LN250:
// line 571
	r2=pass r2, m4=r2; 
	if ne jump(pc,.P4L130) (DB); 
.LN251:
// line 570
	dm(m4,i4)=r12; 
	modify(i4,m4); 
.LN252:
// line 573
	dm(_err2_arr+500)=r12; 

.P4L130:
.LN253:
// line 575
	modify(i7,m7); 
	r12=_err2_arr; 
	r4=_coefs_filter_1_i; 
	r8=i4; 
	dm(i7,m7)=r5; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN254:
// line 583
	r8=dm(_performance); 
	r12=dm(_lambda); 
	F12=F8+F12, r5=m13; 
.LN255:
// line 577
	r4=50; 
	r2=dm(_m2); 
.LN256:
// line 583
	F1=recips F12, m4=r2; 
.LN257:
// line 577
	r6=274877907; 
	r7=r2+r4; 
.LN258:
// line 583
	r8=1073741824; 
	F12=F1*F12; 
	r4=dm(_mu2_0); 
.LN259:
// line 577
	r6=r7*r6 (SSF); 
.LN260:
// line 583
	F4=F1*F4, F1=F8-F12; 
.LN261:
// line 577
	r9=ashift r7 by -31; 
	r6=ashift r6 by -8; 
.LN262:
// line 583
	F12=F1*F12; 
.LN263:
// line 577
	r6=r6-r9; 
.LN264:
// line 583
	F4=F1*F4, F1=F8-F12; 
.LN265:
// line 577
	r6=r6*r3 (SSI); 
.LN266:
// line 583
	F12=F1*F12; 
.LN267:
// line 577
	r6=r7-r6; 
.LN268:
// line 583
	F4=F1*F4, F1=F8-F12, m0=r6; 
.LN269:
// line 589
	r3=r2+r3, r8=r1; 
.LN270:
// line 577
	i4=_delayed; 
	F8=F1*F4, F4=F8-F12, r12=i4; 
.LN271:
// line 583
	F1=F4*F8, r4=dm(m0,i3); 
.LN272:
// line 589
	i0=_coefs_filter_2; 
	r2=r12+r2, dm(m4,i4)=r4; 
.LN273:
// line 583
	F12=F1+F8, i5=i0; 
.LN274:
// line 589
	b3=i4; i3=r2; l3=2000; 
.LN275:
// line 583
	dm(_mu2)=r12; 
.LN276:
// line 589
	F4=F0*F12, r1=dm(i3,m6); 
.LN277:
// line 575
	modify(i7,2); 
.LN278:
// line 587
	r2=r5+1, r8=dm(i0,m6); 
.LN279:
// line 589
	F12=F4*F1; 
	lcntr=1999, do(pc,.P4L223-1)until lce; 

.P4L217:
//-------------------------------------------------------------------
//   Loop at "process.c" line 587 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 1999
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F12=F8+F12, r8=dm(i3,m6); 
.LN280:
// line 587
	r2=r2+1, dm(i5,m6)=r12; 
.LN281:
// line 589
	F12=F4*F8, r8=dm(i0,m6); 
	//end loop .P4L217; 
//-------------------------------------------------------------------
//   End Kernel for Loop L217
//-------------------------------------------------------------------

.P4L223:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	F12=F8+F12, l3=m13; 
.LN282:
// line 587
	dm(_k_input)=r3; 
	jump(pc,.P4L118) (DB); 
	dm(_k)=r2; 
.LN283:
// line 589
	dm(i5,m6)=r12; 

.P4L111:
.LN284:
// line 512
	r2=r2-1, modify(i7,m7); 
.LN285:
// line 517
	r3=r2+1, dm(i7,m7)=r5; 
.LN286:
// line 512
	r6=_inNoiseArray3; 
	r12=dm(_m3); 
	r8=r6+r12, dm(i7,m7)=r6; 
.LN287:
// line 511
	dm(_yn3)=r2; 
.LN288:
// line 512
	r12=dm(m6,i7); 
	r4=_coefs_filter_3; 
	modify(i7,m6); 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN289:
// line 516
	r2=dm(_m3); 
.LN290:
// line 518
	r8=r6+r2; 
	i0=_coefs_filter_3; 
.LN291:
// line 513
	r12=dm(_inRdata); 
.LN292:
// line 518
	b3=r6; i3=r8; l3=500; 
	r4=dm(_mu3); 
.LN293:
// line 513
	F8=F12-F0, r1=dm(i3,m6); 
.LN294:
// line 518
	F4=F8*F4, i4=i0; 
	r5=r2+r5, r12=dm(i0,m6); 
.LN295:
// line 512
	modify(i7,2); 
.LN296:
	dm(_yn3)=r0; 
.LN297:
// line 513
	dm(_err3)=r8; 
.LN298:
// line 518
	F2=F4*F1; 
	lcntr=499, do(pc,.P4L214-1)until lce; 

.P4L208:
//-------------------------------------------------------------------
//   Loop at "process.c" line 517 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     multifunction alu               used   2 out of    3 ( 66.7%)
//     multifunction float multiply    used   2 out of    3 ( 66.7%)
//     multifunction integer multiply  used   2 out of    3 ( 66.7%)
//     multifunction mult              used   2 out of    3 ( 66.7%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction integer add sub   used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
.LN299:
// line 517
	r3=r3+1, dm(i4,m6)=r2; 
.LN300:
// line 518
	F2=F4*F12, r12=dm(i0,m6); 
	//end loop .P4L208; 
//-------------------------------------------------------------------
//   End Kernel for Loop L208
//-------------------------------------------------------------------

.P4L214:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN301:
// line 524
	r8=dm(_delayCtnrIdnetLimit); 
	r4=715827883; 
	r4=r8*r4 (SSF), l3=m13; 
.LN302:
// line 522
	r1=dm(_delayCtnrIdnet); 
.LN303:
// line 524
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN304:
// line 518
	F2=F12+F2; 
.LN305:
// line 522
	r12=r1+1, dm(i4,m6)=r2; 
.LN306:
// line 524
	r2=r4-r8; 
	comp(r12, r2); 
.LN307:
// line 517
	dm(_k_input)=r5; 
.LN308:
// line 524
	if ne jump(pc,.P4L112) (DB); 
.LN309:
// line 517
	dm(_k)=r3; 
.LN310:
// line 522
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
.LN311:
// line 524
	jump(pc,.P4L112) (DB); 
	dm(_delayCtnrIdnet)=r2; 
.LN312:
	dm(_ident3Flag)=r2; 

.P4L105:
.LN313:
// line 476
	r3=500; 
	modify(i7,m7); 
	r12=_inLdataArray_i; 
	r4=_coefs_filter_1_i; 
	r8=i4; 
	dm(i7,m7)=r3; 
	cjump _conv_asm (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN314:
// line 477
	r2=550; 
	r12=dm(_m1_i); 
	r8=274877907; 
	r2=r12+r2; 
	r8=r2*r8 (SSF); 
	r4=ashift r2 by -31; 
	r8=ashift r8 by -6; 
	r8=r8-r4; 
	r8=r8*r3 (SSI); 
	r2=r2-r8; 
.LN315:
// line 483
	r1=r12+r3, m4=r2; 
	r2=_inLdataArray_i; 
	i0=_coefs_filter_1_i; 
	r12=r2+r12, r8=dm(m4,i3); 
	r4=dm(_mu1_i); 
.LN316:
// line 477
	F8=F8-F0, i4=i0; 
.LN317:
// line 483
	b3=r2; i3=r12; l3=500; 
	F4=F8*F4, r2=dm(i3,m6); 
.LN318:
// line 476
	modify(i7,2); 
.LN319:
	dm(_yn1_i)=r0; 
.LN320:
// line 477
	dm(_err1_i)=r8; 
.LN321:
// line 483
	F2=F4*F2, r12=dm(i0,m6); 
	lcntr=499, do(pc,.P4L205-1)until lce; 

.P4L199:
//-------------------------------------------------------------------
//   Loop at "process.c" line 481 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iterations of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 499
//-------------------------------------------------------------------
//   Successfully found modulo schedule with:
//     Initiation Interval (II)                                  = 3
//     Stage Count (SC)                                          = 2
//     MVE Unroll Factor                                         = 1
//     Minimum initiation interval due to recurrences (rec MII)  = 0
//     Minimum initiation interval due to resources (res MII)    = 3.00
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     define dm dag                   used   3 out of    3 (100.0%)
//     dm dag                          used   3 out of    3 (100.0%)
//     memory access                   used   3 out of    6 ( 50.0%)
//     multifunction alu               used   1 out of    3 ( 33.3%)
//     multifunction float multiply    used   1 out of    3 ( 33.3%)
//     multifunction integer multiply  used   1 out of    3 ( 33.3%)
//     multifunction mult              used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
	F2=F12+F2, r12=dm(i3,m6); 
	dm(i4,m6)=r2; 
	F2=F4*F12, r12=dm(i0,m6); 
	//end loop .P4L199; 
//-------------------------------------------------------------------
//   End Kernel for Loop L199
//-------------------------------------------------------------------

.P4L205:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN322:
// line 490
	r8=dm(_delayCtnrIdnetLimit); 
	r4=1431655766; 
	r4=r8*r4 (SSF), l3=m13; 
.LN323:
// line 488
	r0=dm(_delayCtnrIdnet); 
.LN324:
// line 490
	r8=ashift r8 by -31; 
	r4=ashift r4 by -1; 
.LN325:
// line 483
	F2=F12+F2; 
.LN326:
// line 488
	r12=r0+1, dm(i4,m6)=r2; 
.LN327:
// line 490
	r2=r4-r8; 
	comp(r12, r2); 
	if ne jump(pc,.P4L106) (DB); 
.LN328:
// line 481
	dm(_k_input_i)=r1; 
.LN329:
// line 488
	dm(_delayCtnrIdnet)=r12; 
	r2=m13; 
	r12=m14; 
.LN330:
// line 493
	dm(_delayCtnrIdnet)=r2; 
.LN331:
// line 494
	jump(pc,.P4L106) (DB); 
.LN332:
// line 492
	dm(_identFlag)=r2; 
.LN333:
// line 494
	dm(_ident3Flag)=r12; 

.P4L82:
.LN334:
// line 356
	cjump _rand (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN335:
// line 357
	r2=-822083584; 
.LN336:
// line 356
	r12=r0+r0; 
.LN337:
// line 357
	F1=recips F2; 
	r8=1073741824; 
.LN338:
// line 356
	F4=float r12; 
.LN339:
// line 357
	F13=F1*F2; 
	F4=F1*F4, F2=F8-F13; 
	F12=F2*F13; 
	F4=F2*F4, F2=F8-F12; 
	F12=F2*F12; 
	F4=F2*F4, F2=F8-F12; 
	r8=r2; 
	F2=F2*F4, F12=F8-F12; 
	F12=F12*F2; 
	jump(pc,.P4L84) (DB); 
	F2=F12+F2; 
	dm(_noise_n)=r2; 

.P4L80:
.LN340:
// line 322
	jump(pc,.P4L81) (DB); 
	r4=-241; 
	r2=r2 and r4; 

.P4L75:
.LN341:
// line 305
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN342:
	r2=pass r0; 
	if gt jump(pc,.P4L243) (DB); 
.LN343:
// line 312
	r4=dm(_resetFlag); 
	r2=m14; 
.LN344:
// line 305
	r2=dm(_delayCtnr5); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L244) (DB); 
.LN345:
// line 312
	r4=dm(_resetFlag); 
	r2=m14; 
	r2=m13; 
.LN346:
// line 307
	r4=dm(_mu2); 
	r0=r2-1; 
	F4=scalb F4 by r0; 
	jump(pc,.P4L76) (DB); 
.LN347:
// line 306
	dm(_delayCtnr5)=r2; 
.LN348:
// line 307
	dm(_mu2)=r4; 

.P4L71:
.LN349:
// line 299
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN350:
	r2=pass r0; 
	if gt jump(pc,.P4L245) (DB); 
.LN351:
// line 305
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN352:
// line 299
	r2=dm(_delayCtnr4); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L246) (DB); 
.LN353:
// line 305
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN354:
// line 301
	r2=dm(_mu2); 
	F4=F2+F2, r2=m13; 
	jump(pc,.P4L72) (DB); 
	dm(_mu2)=r4; 
.LN355:
// line 300
	dm(_delayCtnr4)=r2; 

.P4L65:
.LN356:
// line 292
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN357:
	r2=pass r0; 
	if gt jump(pc,.P4L247) (DB); 
.LN358:
// line 299
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN359:
// line 292
	r2=dm(_delayCtnr3); 
	r4=dm(_delayCtnrLimit); 
	comp(r2, r4); 
	if lt jump(pc,.P4L248) (DB); 
.LN360:
// line 299
	r2=dm(_resetFlag); 
	r2=pass r2; 
.LN361:
// line 294
	comp(r2, r6), r2=m13; 
	if ne jump(pc,.P4L70) (DB); 
.LN362:
// line 293
	dm(_delayCtnr3)=r2; 
	nop; 
.LN363:
// line 294
	jump(pc,.P4L249) (DB); 
	dm(_resetFlag)=r2; 
.LN364:
// line 299
	r2=dm(_resetFlag); 

.P4L70:
.LN365:
// line 295
	jump(pc,.P4L66) (DB); 
	r2=m14; 
	dm(_resetFlag)=r2; 

.P4L21:
.LN366:
// line 256
	jump(pc,.P4L18) (DB); 
	r2=m13; 
	dm(_identFlag)=r2; 

.P4L16:
.LN367:
// line 249
	jump(pc,.P4L13) (DB); 
	r2=m13; 
	dm(_fxlmsFlag)=r2; 

.P4L5:
.LN368:
// line 240
	cjump _readDAIpin (DB); dm(i7,m7)=r2; dm(i7,m7)=pc; 
.LN369:
	r2=pass r0; 
	if le jump(pc,.P4L250) (DB); 
.LN370:
// line 241
	r4=524288; 
	nop; 
.LN371:
// line 240
	r2=dm(_delayCtnr3); 
	jump(pc,.P4L6) (DB); 
	r2=r2+1; 
	dm(_delayCtnr3)=r2; 

.P4L224:
.LN372:
// line 631
	r5=dm(-14,i6); 
	r6=dm(-13,i6); 
	r7=dm(-12,i6); 
	r9=dm(-11,i6); 
	r13=dm(-10,i6); 
	b3=dm(-9,i6); 
	m0=dm(-8,i6); 
	i0=dm(-7,i6); 
	i1=dm(-6,i6); 
	i2=dm(-5,i6); 
	i3=dm(-4,i6); 
	i12=dm(m7,i6); 
	jump(m14,i12) (DB); 
	i5=dm(-3,i6); 
	rframe; 

.LN._process.end:
._process.end:
	.global _process;
	.type _process,STT_FUNC;

	.file_attr ProjectName="FeLMS_with_A3";
	.file_attr FuncName="_handle_LED";
	.file_attr FuncName="_readDAIpin";
	.file_attr FuncName="_flagTest";
	.file_attr FuncName="_process";
	.file_attr Content="CodeData";
.epctext.end:

	.extern _setDAIproc;
	.type _setDAIproc,STT_FUNC;
	.extern _conv_asm;
	.type _conv_asm,STT_FUNC;
	.extern _clrDAIproc;
	.type _clrDAIproc,STT_FUNC;
	.extern _rand;
	.type _rand,STT_FUNC;

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.var =
		0x01,0x11,0x01,0x03,0x08,0x13,0x0B,0x10,0x06,0x43,0x06,0x1B,
		0x08,0x25,0x08,0x42,0x0B,0x00,0x00,0x02,0x24,0x00,0x03,0x08,
		0x3E,0x0B,0x0B,0x0F,0x00,0x00,0x03,0x16,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x00,0x00,0x04,0x13,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x0B,0x0F,0x00,0x00,0x05,0x0D,0x00,0x03,0x08,0x32,
		0x0B,0x49,0x13,0x38,0x09,0x00,0x00,0x06,0x15,0x01,0x01,0x13,
		0x03,0x08,0x32,0x0B,0x27,0x0C,0x00,0x00,0x07,0x15,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x27,0x0C,0x49,0x13,0x00,0x00,0x08,
		0x05,0x00,0x03,0x08,0x49,0x13,0x00,0x00,0x09,0x2E,0x01,0x01,
		0x13,0x03,0x08,0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x3F,
		0x0C,0x20,0x0B,0x00,0x00,0x0A,0x05,0x00,0x03,0x08,0x49,0x13,
		0x02,0x09,0x34,0x0C,0x00,0x00,0x0B,0x0B,0x01,0x01,0x13,0x11,
		0x01,0x12,0x01,0x00,0x00,0x0C,0x2E,0x01,0x01,0x13,0x03,0x08,
		0x32,0x0B,0x11,0x01,0x12,0x01,0x27,0x0C,0x49,0x13,0x3F,0x0C,
		0x20,0x0B,0x00,0x00,0x0D,0x34,0x00,0x03,0x08,0x32,0x0B,0x49,
		0x13,0x02,0x09,0x2C,0x06,0x3F,0x0C,0x00,0x00,0x0E,0x01,0x01,
		0x01,0x13,0x49,0x13,0x00,0x00,0x0F,0x21,0x00,0x37,0x0F,0x22,
		0x0F,0x2F,0x0F,0x00,0x00,0x00;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.var =
		0x3A,0x0F,0x00,0x00,0x02,0x00;
	.var = .epcabbrev;
	.var =
		0x04,0x01,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,
		0x01;
	.var = .epcline;
	.var =
		0x00,0x00,0x00,0x00,0x45,0x3A,0x5C,0x4A,0x61,0x6B,0x61,0x62,
		0x5F,0x54,0x61,0x6D,0x61,0x73,0x5C,0x53,0x7A,0x61,0x6B,0x64,
		0x6F,0x6C,0x67,0x6F,0x7A,0x61,0x74,0x5C,0x32,0x33,0x2E,0x31,
		0x31,0x2E,0x30,0x33,0x20,0x65,0x4C,0x4D,0x53,0x20,0x2D,0x20,
		0x63,0x68,0x65,0x72,0x72,0x79,0x5C,0x50,0x68,0x61,0x73,0x65,
		0x32,0x00,0x43,0x2F,0x43,0x2B,0x2B,0x20,0x43,0x6F,0x6D,0x70,
		0x69,0x6C,0x65,0x72,0x20,0x3A,0x20,0x53,0x48,0x41,0x52,0x43,
		0x20,0x76,0x65,0x72,0x73,0x69,0x6F,0x6E,0x20,0x37,0x2E,0x32,
		0x2E,0x30,0x2E,0x30,0x20,0x28,0x4D,0x61,0x79,0x20,0x20,0x31,
		0x20,0x32,0x30,0x30,0x36,0x20,0x32,0x33,0x3A,0x31,0x36,0x3A,
		0x34,0x31,0x29,0x0A,0x20,0x20,0x43,0x6F,0x70,0x79,0x72,0x69,
		0x67,0x68,0x74,0x20,0x28,0x63,0x29,0x20,0x31,0x39,0x39,0x37,
		0x2D,0x32,0x30,0x30,0x36,0x20,0x41,0x6E,0x61,0x6C,0x6F,0x67,
		0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x2C,0x20,0x49,0x6E,
		0x63,0x2E,0x0A,0x20,0x20,0x43,0x6F,0x70,0x79,0x72,0x69,0x67,
		0x68,0x74,0x20,0x28,0x63,0x29,0x20,0x31,0x39,0x39,0x38,0x2D,
		0x32,0x30,0x30,0x33,0x20,0x45,0x64,0x69,0x73,0x6F,0x6E,0x20,
		0x44,0x65,0x73,0x69,0x67,0x6E,0x20,0x47,0x72,0x6F,0x75,0x70,
		0x2C,0x20,0x49,0x6E,0x63,0x2E,0x0A,0x20,0x20,0x43,0x6F,0x70,
		0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x63,0x29,0x20,0x31,
		0x39,0x39,0x37,0x2D,0x31,0x39,0x39,0x39,0x20,0x45,0x64,0x69,
		0x6E,0x62,0x75,0x72,0x67,0x68,0x20,0x50,0x6F,0x72,0x74,0x61,
		0x62,0x6C,0x65,0x20,0x43,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x72,
		0x73,0x2C,0x20,0x4C,0x74,0x64,0x2E,0x0A,0x00,0x00,0x02,0x62,
		0x6F,0x6F,0x6C,0x00,0x02,0x01,0x02,0x77,0x63,0x68,0x61,0x72,
		0x5F,0x74,0x00,0x06,0x01,0x02,0x63,0x68,0x61,0x72,0x00,0x06,
		0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x63,0x68,0x61,
		0x72,0x00,0x06,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,
		0x64,0x20,0x63,0x68,0x61,0x72,0x00,0x08,0x01,0x02,0x73,0x68,
		0x6F,0x72,0x74,0x00,0x05,0x01,0x02,0x73,0x69,0x67,0x6E,0x65,
		0x64,0x20,0x73,0x68,0x6F,0x72,0x74,0x00,0x05,0x01,0x02,0x75,
		0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x73,0x68,0x6F,0x72,
		0x74,0x00,0x07,0x01,0x02,0x69,0x6E,0x74,0x00,0x05,0x01,0x02,
		0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x69,0x6E,0x74,0x00,0x05,
		0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x69,
		0x6E,0x74,0x00,0x07,0x01,0x02,0x6C,0x6F,0x6E,0x67,0x00,0x05,
		0x01,0x02,0x73,0x69,0x67,0x6E,0x65,0x64,0x20,0x6C,0x6F,0x6E,
		0x67,0x00,0x05,0x01,0x02,0x75,0x6E,0x73,0x69,0x67,0x6E,0x65,
		0x64,0x20,0x6C,0x6F,0x6E,0x67,0x00,0x07,0x01,0x02,0x66,0x6C,
		0x6F,0x61,0x74,0x00,0x04,0x01,0x02,0x64,0x6F,0x75,0x62,0x6C,
		0x65,0x00,0x04,0x01,0x02,0x6C,0x6F,0x6E,0x67,0x20,0x64,0x6F,
		0x75,0x62,0x6C,0x65,0x00,0x04,0x02,0x02,0x76,0x6F,0x69,0x64,
		0x20,0x2A,0x00,0x01,0x01,0x03,0x73,0x69,0x67,0x5F,0x61,0x74,
		0x6F,0x6D,0x69,0x63,0x5F,0x74,0x00,0x01,0x9F,0x01,0x00,0x00,
		0x03,0x73,0x69,0x7A,0x65,0x5F,0x74,0x00,0x01,0xDB,0x01,0x00,
		0x00,0x03,0x77,0x63,0x68,0x61,0x72,0x5F,0x74,0x00,0x01,0x9F,
		0x01,0x00,0x00,0x04,0x6A,0x02,0x00,0x00,0x00,0x01,0x02,0x05,
		0x71,0x75,0x6F,0x74,0x00,0x01,0x9F,0x01,0x00,0x00,0x02,0x23,
		0x00,0x05,0x72,0x65,0x6D,0x00,0x01,0x9F,0x01,0x00,0x00,0x02,
		0x23,0x01,0x00,0x03,0x64,0x69,0x76,0x5F,0x74,0x00,0x01,0x46,
		0x02,0x00,0x00,0x04,0x9A,0x02,0x00,0x00,0x00,0x01,0x02,0x05,
		0x71,0x75,0x6F,0x74,0x00,0x01,0xC4,0x01,0x00,0x00,0x02,0x23,
		0x00,0x05,0x72,0x65,0x6D,0x00,0x01,0xC4,0x01,0x00,0x00,0x02,
		0x23,0x01,0x00,0x03,0x6C,0x64,0x69,0x76,0x5F,0x74,0x00,0x01,
		0x76,0x02,0x00,0x00,0x06,0xB0,0x02,0x00,0x00,0x00,0x01,0x01,
		0x00,0x03,0x5F,0x74,0x5F,0x61,0x74,0x65,0x78,0x69,0x74,0x5F,
		0x66,0x70,0x00,0x01,0xA7,0x02,0x00,0x00,0x07,0xDC,0x02,0x00,
		0x00,0x00,0x01,0x01,0x9F,0x01,0x00,0x00,0x08,0x00,0x0E,0x02,
		0x00,0x00,0x08,0x00,0x0E,0x02,0x00,0x00,0x00,0x03,0x5F,0x74,
		0x5F,0x63,0x6F,0x6D,0x70,0x61,0x72,0x65,0x5F,0x66,0x70,0x00,
		0x01,0xC3,0x02,0x00,0x00,0x09,0x2E,0x03,0x00,0x00,0x68,0x61,
		0x6E,0x64,0x6C,0x65,0x5F,0x4C,0x45,0x44,0x00,0x01;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end;
	.var =
		0x01,0x01,0x00,0x0A,0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,
		0x65,0x00,0x9F,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,
		0x00,0x00,0x00;
	.var = .LN1;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x00,0x0C,0x6B,0x03,0x00,0x00,0x72,0x65,0x61,0x64,0x44,
		0x41,0x49,0x70,0x69,0x6E,0x00,0x01;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end;
	.var =
		0x01,0x9F,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x9F,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN5;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x00,0x0C,0xA6,0x03,0x00,0x00,0x66,0x6C,0x61,0x67,0x54,
		0x65,0x73,0x74,0x00,0x01;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end;
	.var =
		0x01,0x9F,0x01,0x00,0x00,0x01,0x00,0x0A,0x6D,0x61,0x73,0x6B,
		0x00,0x9F,0x01,0x00,0x00,0x02,0x86,0x7E,0x00,0x0B,0x00,0x00,
		0x00,0x00;
	.var = .LN8;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x00,0x09,0xEA,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x00,0x01;
	.var = .LN_process;
	.var = .LN._process.end;
	.var =
		0x01,0x01,0x00,0x0B,0x00,0x00,0x00,0x00;
	.var = .LN11;
	.var = .LN._process.end;
	.var =
		0x0B,0xDA,0x03,0x00,0x00;
	.var = .LN313;
	.var = .LN334;
	.var =
		0x00,0x0B,0x00,0x00,0x00,0x00;
	.var = .LN202;
	.var = .LN284;
	.var =
		0x00,0x00,0x00,0x0D,0x69,0x73,0x50,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x69,0x6E,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _isProcessing;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x72,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _rightIn;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x00,0x01,0x2F,0x0F,0x00,0x00,0x05,0x0C;
	.var = _memory;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x73,0x74,0x61,0x74,0x65,0x00,
		0x01,0x1F,0x0F,0x00,0x00,0x05,0x0C;
	.var = _state;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x62,0x75,0x66,0x66,0x5F,0x74,
		0x6D,0x70,0x00,0x01,0x11,0x0F,0x00,0x00,0x05,0x0C;
	.var = _buff_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x5F,0x74,0x6D,0x70,0x00,
		0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_tmp;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x65,
		0x64,0x00,0x01,0x01,0x0F,0x00,0x00,0x05,0x0C;
	.var = _delayed;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x00,0x01,0xF1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input1R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x4C,0x00,0x01,0xE1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input1L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x00,0x01,0xD1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input2R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x4C,0x00,0x01,0xC1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input2L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x52,0x00,0x01,0xB1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input3R;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x33,
		0x4C,0x00,0x01,0xA1,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input3L;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x31,
		0x52,0x32,0x00,0x01,0x91,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input1R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x32,
		0x52,0x32,0x00,0x01,0x81,0x0E,0x00,0x00,0x05,0x0C;
	.var = _input2R2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x00,0x01,0x73,0x0E,0x00,0x00,0x05,0x0C;
	.var = _inputR;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x6E,0x70,0x75,0x74,0x4C,
		0x00,0x01,0x65,0x0E,0x00,0x00,0x05,0x0C;
	.var = _inputL;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x31,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x32,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x33,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _i3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6A,0x00,0x01,0x9F,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _j;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x00,0x01,0x9F,0x01,0x00,
		0x00,0x05,0x0C;
	.var = _k;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x5F,0x69,0x6E,0x70,0x75,
		0x74,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _k_input;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6B,0x5F,0x69,0x6E,0x70,0x75,
		0x74,0x5F,0x69,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _k_input_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x78,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _ix;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x5F,0x69,0x00,0x01,
		0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _m1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x31,0x5F,0x69,0x64,0x00,
		0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _m1_id;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x32,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x33,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _m3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x5F,0x69,
		0x6E,0x64,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _err2_ind;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x5F,0x61,
		0x72,0x72,0x00,0x01,0x55,0x0E,0x00,0x00,0x05,0x0C;
	.var = _err2_arr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x32,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6F,0x75,0x74,0x5F,0x31,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _out_1;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x69,0x5F,0x64,0x65,0x63,0x00,
		0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _i_dec;
	.var =
		0x00,0x00,0x00,0x00,0x01,0x0D,0x66,0x78,0x6C,0x6D,0x73,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _fxlmsFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _identFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x64,0x65,0x6E,0x74,0x33,
		0x46,0x6C,0x61,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _ident3Flag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x72,0x65,0x73,0x65,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _resetFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x32,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x33,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x34,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr4;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x35,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnr5;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnet;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x64,0x65,0x6C,0x61,0x79,0x43,
		0x74,0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x4C,0x69,0x6D,0x69,
		0x74,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _delayCtnrIdnetLimit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x65,0x64,0x5F,0x76,0x61,
		0x6C,0x75,0x65,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _led_value;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x64,0x65,0x63,0x00,0x01,0x47,0x0E,0x00,0x00,0x05,0x0C;
	.var = _coefs_dec;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x52,0x64,0x61,0x74,
		0x61,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _inRdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4C,0x64,0x61,0x74,
		0x61,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _inLdata;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _inNoise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x00,0x01,0x37,0x0E,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,0x01,0x27,0x0E,0x00,
		0x00,0x05,0x0C;
	.var = _inNoiseArray3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4E,0x6F,0x69,0x73,
		0x65,0x41,0x72,0x72,0x61,0x79,0x31,0x5F,0x69,0x00,0x01,0x17,
		0x0E,0x00,0x00,0x05,0x0C;
	.var = _inNoiseArray1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x4C,0x64,0x61,0x74,
		0x61,0x41,0x72,0x72,0x61,0x79,0x5F,0x69,0x00,0x01,0x07,0x0E,
		0x00,0x00,0x05,0x0C;
	.var = _inLdataArray_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x01,0xF7,0x0D,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x31,0x00,0x01,0xE7,
		0x0D,0x00,0x00,0x05,0x0C;
	.var = _un1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x31,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x31,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x31,0x00,0x01,
		0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _err1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x5F,0x69,0x00,0x01,
		0xD7,0x0D,0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x31,0x5F,0x69,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x31,0x5F,0x69,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _yn1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x31,0x5F,0x69,
		0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _err1_i;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x32,0x00,0x01,0xC7,0x0D,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x75,0x6E,0x32,0x00,0x01,0xB7,
		0x0D,0x00,0x00,0x05,0x0C;
	.var = _un2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x70,0x65,0x72,0x66,0x6F,0x72,
		0x6D,0x61,0x6E,0x63,0x65,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _performance;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x41,0x44,0x5F,0x62,0x69,0x74,
		0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _AD_bit;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x46,0x53,0x00,0x01,0x9F,0x01,
		0x00,0x00,0x05,0x0C;
	.var = _FS;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6C,0x61,0x6D,0x62,0x64,0x61,
		0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _lambda;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x62,0x65,0x74,0x61,0x00,0x01,
		0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _beta;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x4C,0x4D,0x53,0x5F,0x6D,
		0x75,0x5F,0x73,0x69,0x6E,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _eLMS_mu_sin;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x4C,0x4D,0x53,0x5F,0x6D,
		0x75,0x5F,0x77,0x68,0x69,0x74,0x65,0x4E,0x6F,0x69,0x73,0x65,
		0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _eLMS_mu_whiteNoise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x64,0x65,0x66,
		0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2def;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x32,0x5F,0x30,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _mu2_0;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x32,0x00,0x01,
		0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _err2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x5F,0x6E,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _inputRfil_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x69,0x6E,0x70,0x75,0x74,0x52,
		0x66,0x69,0x6C,0x00,0x01,0xA7,0x0D,0x00,0x00,0x05,0x0C;
	.var = _inputRfil;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x63,0x6F,0x65,0x66,0x73,0x5F,
		0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0x01,0x97,0x0D,
		0x00,0x00,0x05,0x0C;
	.var = _coefs_filter_3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6D,0x75,0x33,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _mu3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x33,0x00,0x01,0xEC,
		0x01,0x00,0x00,0x05,0x0C;
	.var = _yn3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x65,0x72,0x72,0x33,0x00,0x01,
		0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _err3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x66,0x69,0x6C,0x61,0x33,
		0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _yfila3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x79,0x6E,0x32,0x61,0x72,0x72,
		0x61,0x79,0x00,0x01,0x87,0x0D,0x00,0x00,0x05,0x0C;
	.var = _yn2array;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x31,
		0x00,0x01,0x77,0x0D,0x00,0x00,0x05,0x0C;
	.var = _noise1;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x32,
		0x00,0x01,0x67,0x0D,0x00,0x00,0x05,0x0C;
	.var = _noise2;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x33,
		0x00,0x01,0x57,0x0D,0x00,0x00,0x05,0x0C;
	.var = _noise3;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x5F,
		0x6E,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _noise_n;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x00,
		0x01,0x47,0x0D,0x00,0x00,0x05,0x0C;
	.var = _noise;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x6E,0x6F,0x69,0x73,0x65,0x46,
		0x6C,0x61,0x67,0x00,0x01,0x9F,0x01,0x00,0x00,0x05,0x0C;
	.var = _noiseFlag;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x52,0x69,0x67,0x68,0x74,0x49,
		0x6E,0x50,0x72,0x65,0x76,0x00,0x01,0xEC,0x01,0x00,0x00,0x05,
		0x0C;
	.var = _RightInPrev;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0D,0x61,0x6C,0x70,0x68,0x61,0x00,
		0x01,0xEC,0x01,0x00,0x00,0x05,0x0C;
	.var = _alpha;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x0E,0x57,0x0D,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,0x00,0x0E,0x67,0x0D,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x77,0x0D,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xD1,
		0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x87,0x0D,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x97,0x0D,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0xA7,0x0D,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF4,
		0x03,0x00,0xF3,0x03,0x00,0x0E,0xB7,0x0D,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0xC7,0x0D,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xD0,0x0F,0x00,0xCF,0x0F,
		0x00,0x0E,0xD7,0x0D,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xD0,
		0x0F,0x00,0xCF,0x0F,0x00,0x0E,0xE7,0x0D,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,0x00,0x0E,0xF7,0x0D,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,
		0x00,0x0E,0x07,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF4,
		0x03,0x00,0xF3,0x03,0x00,0x0E,0x17,0x0E,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x27,0x0E,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,
		0x00,0x0E,0x37,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,
		0x03,0x00,0xF4,0x03,0x00,0x0E,0x47,0x0E,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0x55,0x0E,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0x29,0x00,0x28,0x00,0x0E,
		0x65,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,
		0xF4,0x03,0x00,0x0E,0x73,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,
		0x0F,0x2A,0x00,0x29,0x00,0x0E,0x81,0x0E,0x00,0x00,0xEC,0x01,
		0x00,0x00,0x0F,0x2A,0x00,0x29,0x00,0x0E,0x91,0x0E,0x00,0x00,
		0xEC,0x01,0x00,0x00,0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,
		0xA1,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,
		0xF4,0x03,0x00,0x0E,0xB1,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,
		0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,0xC1,0x0E,0x00,0x00,
		0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,
		0xD1,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xD1,0x0F,0x00,
		0xD0,0x0F,0x00,0x0E,0xE1,0x0E,0x00,0x00,0xEC,0x01,0x00,0x00,
		0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0xF1,0x0E,0x00,0x00,
		0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,0xF4,0x03,0x00,0x0E,
		0x01,0x0F,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF5,0x03,0x00,
		0xF4,0x03,0x00,0x0E,0x11,0x0F,0x00,0x00,0xEC,0x01,0x00,0x00,
		0x0F,0xD1,0x0F,0x00,0xD0,0x0F,0x00,0x0E,0x1F,0x0F,0x00,0x00,
		0xEC,0x01,0x00,0x00,0x0F,0x64,0x00,0x63,0x00,0x0E,0x2F,0x0F,
		0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0xF4,0x03,0x00,0xF3,0x03,
		0x00,0x0E,0x00,0x00,0x00,0x00,0xEC,0x01,0x00,0x00,0x0F,0x01,
		0x00,0x00,0x00,0x00;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.var =
		0x89,0x11,0x00,0x00,0x02,0x00,0x9C,0x02,0x00,0x00,0x01,0x01,
		0x01,0xF6,0x0A,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,
		0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,
		0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,
		0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,
		0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,
		0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x00,
		0x9B,0x98,0xEE,0xAA,0x06,0xCB,0x75,0x74,0x74,0x2E,0x68,0x00,
		0x00,0xC2,0xCA,0x8E,0xAA,0x06,0x98,0x11,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x63,0x64,0x65,0x66,
		0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,
		0xA3,0x04,0xAF,0x04,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x43,0x64,0x65,0x66,0x32,0x31,0x33,0x36,
		0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x84,0xA9,
		0x02,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,
		0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,
		0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,
		0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,
		0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,
		0x5C,0x64,0x65,0x66,0x32,0x31,0x33,0x36,0x34,0x2E,0x68,0x00,
		0x01,0xC2,0xC4,0xD8,0xA3,0x04,0xD6,0x04,0x43,0x3A,0x5C,0x50,
		0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,
		0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,
		0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,
		0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,
		0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x64,0x65,0x66,0x32,
		0x31,0x33,0x36,0x33,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,
		0x04,0x83,0x8B,0x08,0x43,0x3A,0x5C,0x50,0x72,0x6F,0x67,0x72,
		0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,0x73,0x5C,0x41,0x6E,0x61,
		0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,0x69,0x63,0x65,0x73,0x5C,
		0x56,0x69,0x73,0x75,0x61,0x6C,0x44,0x53,0x50,0x20,0x34,0x2E,
		0x35,0x5C,0x32,0x31,0x33,0x78,0x78,0x5C,0x69,0x6E,0x63,0x6C,
		0x75,0x64,0x65,0x5C,0x73,0x69,0x67,0x6E,0x61,0x6C,0x2E,0x68,
		0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,0x91,0x55,0x43,0x3A,0x5C,
		0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20,0x46,0x69,0x6C,0x65,
		0x73,0x5C,0x41,0x6E,0x61,0x6C,0x6F,0x67,0x20,0x44,0x65,0x76,
		0x69,0x63,0x65,0x73,0x5C,0x56,0x69,0x73,0x75,0x61,0x6C,0x44,
		0x53,0x50,0x20,0x34,0x2E,0x35,0x5C,0x32,0x31,0x33,0x78,0x78,
		0x5C,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x5C,0x73,0x74,0x64,
		0x6C,0x69,0x62,0x2E,0x68,0x00,0x01,0xC2,0xC4,0xD8,0xA3,0x04,
		0x9F,0x68,0x66,0x69,0x6C,0x74,0x5F,0x6E,0x75,0x6D,0x2E,0x68,
		0x00,0x00,0xAE,0xD3,0xA3,0xAA,0x06,0xF9,0x01,0x63,0x6F,0x65,
		0x66,0x5F,0x64,0x65,0x63,0x2E,0x64,0x61,0x74,0x00,0x00,0xF2,
		0xF1,0x97,0xA3,0x06,0xB4,0x03,0x41,0x32,0x2E,0x64,0x61,0x74,
		0x00,0x00,0xAA,0xB1,0xB3,0xAA,0x06,0x8C,0x3D,0x41,0x32,0x5F,
		0x69,0x2E,0x64,0x61,0x74,0x00,0x00,0x86,0x97,0xEE,0xAA,0x06,
		0xA1,0x39,0x41,0x33,0x2E,0x64,0x61,0x74,0x00,0x00,0x8F,0x97,
		0xEE,0xAA,0x06,0xBA,0x40,0x00,0x00,0x05,0x02;
	.var = .LN_handle_LED;
	.var =
		0x04,0x01,0x05,0x1F,0x03,0x9A,0x05,0x01,0x00,0x05,0x02;
	.var = .LN1;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN2;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN3;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN4;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN._handle_LED.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_readDAIpin;
	.var =
		0x04,0x01,0x05,0x19,0x03,0x87,0x05,0x01,0x00,0x05,0x02;
	.var = .LN5;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN6;
	.var =
		0x05,0x06,0x12,0x00,0x05,0x02;
	.var = .LN7;
	.var =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.var = .LN._readDAIpin.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_flagTest;
	.var =
		0x04,0x01,0x05,0x17,0x03,0xF8,0x04,0x01,0x00,0x05,0x02;
	.var = .LN8;
	.var =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.var = .LN9;
	.var =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.var = .LN10;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN._flagTest.end;
	.var =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.var = .LN_process;
	.var =
		0x04,0x01,0x05,0x01,0xC8,0x00,0x05,0x02;
	.var = .LN11;
	.var =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.var = .LN12;
	.var =
		0x05,0x0F,0x18,0x00,0x05,0x02;
	.var = .LN13;
	.var =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN14;
	.var =
		0x15,0x00,0x05,0x02;
	.var = .LN15;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN16;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN17;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN18;
	.var =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.var = .LN19;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN20;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN21;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN22;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN23;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN24;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN25;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN26;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN27;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN28;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN29;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN30;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN31;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN32;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN33;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN34;
	.var =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN35;
	.var =
		0x05,0x0D,0x10,0x00,0x05,0x02;
	.var = .LN36;
	.var =
		0x05,0x06,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN37;
	.var =
		0x05,0x0D,0x0F,0x00,0x05,0x02;
	.var = .LN38;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN39;
	.var =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.var = .LN40;
	.var =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.var = .LN41;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN42;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN43;
	.var =
		0x05,0x19,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN44;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN45;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN46;
	.var =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.var = .LN47;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN48;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN49;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN50;
	.var =
		0x05,0x1B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN51;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN52;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN53;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN54;
	.var =
		0x05,0x1B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN55;
	.var =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.var = .LN56;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN57;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN58;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN59;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN60;
	.var =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.var = .LN61;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN62;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN63;
	.var =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN64;
	.var =
		0x05,0x0F,0x11,0x00,0x05,0x02;
	.var = .LN65;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN66;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN67;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN68;
	.var =
		0x05,0x0F,0x0F,0x00,0x05,0x02;
	.var = .LN69;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN70;
	.var =
		0x05,0x11,0x28,0x00,0x05,0x02;
	.var = .LN71;
	.var =
		0x05,0x02,0x03,0x61,0x01,0x00,0x05,0x02;
	.var = .LN72;
	.var =
		0x05,0x11,0x28,0x00,0x05,0x02;
	.var = .LN73;
	.var =
		0x05,0x06,0x03,0x63,0x01,0x00,0x05,0x02;
	.var = .LN74;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN75;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN76;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN77;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN78;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN79;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN80;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN81;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN82;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN83;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN84;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN85;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN86;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN87;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN88;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN89;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN90;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN91;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN92;
	.var =
		0x05,0x06,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN93;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN94;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN95;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN96;
	.var =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.var = .LN97;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN98;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN99;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN100;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN101;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN102;
	.var =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.var = .LN103;
	.var =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.var = .LN104;
	.var =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.var = .LN105;
	.var =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.var = .LN106;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN107;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN108;
	.var =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.var = .LN109;
	.var =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.var = .LN110;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN111;
	.var =
		0x05,0x1A,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN112;
	.var =
		0x05,0x11,0x10,0x00,0x05,0x02;
	.var = .LN113;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN114;
	.var =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.var = .LN115;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN116;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN117;
	.var =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.var = .LN118;
	.var =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.var = .LN119;
	.var =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.var = .LN120;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN121;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN122;
	.var =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.var = .LN123;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN124;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN125;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN126;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN127;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN128;
	.var =
		0x11,0x00,0x05,0x02;
	.var = .LN129;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN130;
	.var =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN131;
	.var =
		0x05,0x03,0x15,0x00,0x05,0x02;
	.var = .LN132;
	.var =
		0x05,0x06,0x03,0x75,0x01,0x00,0x05,0x02;
	.var = .LN133;
	.var =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.var = .LN134;
	.var =
		0x05,0x06,0x19,0x00,0x05,0x02;
	.var = .LN135;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN136;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN137;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN138;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN139;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN140;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN141;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN142;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN143;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN144;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN145;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN146;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN147;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN148;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN149;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN150;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN151;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN152;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN153;
	.var =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN154;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN155;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN156;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN157;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN158;
	.var =
		0x05,0x19,0x0F,0x00,0x05,0x02;
	.var = .LN159;
	.var =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.var = .LN160;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN161;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN162;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN163;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN164;
	.var =
		0x05,0x16,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN165;
	.var =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.var = .LN166;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN167;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN168;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN169;
	.var =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.var = .LN170;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN171;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN172;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN173;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN174;
	.var =
		0x05,0x08,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN175;
	.var =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.var = .LN176;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN177;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN178;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN179;
	.var =
		0x05,0x08,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN180;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN181;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN182;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN183;
	.var =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.var = .LN184;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN185;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN186;
	.var =
		0x05,0x04,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN187;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN188;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN189;
	.var =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN190;
	.var =
		0x05,0x05,0x10,0x00,0x05,0x02;
	.var = .LN191;
	.var =
		0x05,0x03,0x13,0x00,0x05,0x02;
	.var = .LN192;
	.var =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN193;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN194;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN195;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN196;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN197;
	.var =
		0x05,0x02,0x16,0x00,0x05,0x02;
	.var = .LN198;
	.var =
		0x05,0x03,0x03,0x73,0x01,0x00,0x05,0x02;
	.var = .LN199;
	.var =
		0x05,0x02,0x47,0x00,0x05,0x02;
	.var = .LN200;
	.var =
		0x05,0x11,0x0E,0x00,0x05,0x02;
	.var = .LN201;
	.var =
		0x05,0x02,0x21,0x00,0x05,0x02;
	.var = .LN202;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN203;
	.var =
		0x05,0x02,0x45,0x00,0x05,0x02;
	.var = .LN204;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN205;
	.var =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN206;
	.var =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.var = .LN207;
	.var =
		0x0C,0x00,0x05,0x02;
	.var = .LN208;
	.var =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN209;
	.var =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.var = .LN210;
	.var =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.var = .LN211;
	.var =
		0x05,0x0F,0x1B,0x00,0x05,0x02;
	.var = .LN212;
	.var =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.var = .LN213;
	.var =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.var = .LN214;
	.var =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN215;
	.var =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.var = .LN216;
	.var =
		0x05,0x03,0x03,0xA5,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN217;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN218;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN219;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN220;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN221;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN222;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN223;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN224;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN225;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN226;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN227;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN228;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN229;
	.var =
		0x05,0x13,0x0B,0x00,0x05,0x02;
	.var = .LN230;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN231;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN232;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN233;
	.var =
		0x05,0x13,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN234;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN235;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN236;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN237;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN238;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN239;
	.var =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.var = .LN240;
	.var =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.var = .LN241;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN242;
	.var =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.var = .LN243;
	.var =
		0x05,0x14,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN244;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN245;
	.var =
		0x0D,0x00,0x05,0x02;
	.var = .LN246;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN247;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN248;
	.var =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.var = .LN249;
	.var =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.var = .LN250;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN251;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN252;
	.var =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.var = .LN253;
	.var =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.var = .LN254;
	.var =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.var = .LN255;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN256;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN257;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN258;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN259;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN260;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN261;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN262;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN263;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN264;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN265;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN266;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN267;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN268;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN269;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN270;
	.var =
		0x05,0x03,0x03,0x74,0x01,0x00,0x05,0x02;
	.var = .LN271;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN272;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN273;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN274;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN275;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN276;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN277;
	.var =
		0x05,0x1C,0x03,0x72,0x01,0x00,0x05,0x02;
	.var = .LN278;
	.var =
		0x05,0x10,0x15,0x00,0x05,0x02;
	.var = .LN279;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN280;
	.var =
		0x05,0x10,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN281;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN282;
	.var =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN283;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN284;
	.var =
		0x05,0x11,0x03,0xB3,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN285;
	.var =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.var = .LN286;
	.var =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN287;
	.var =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN288;
	.var =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.var = .LN289;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN290;
	.var =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.var = .LN291;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN292;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN293;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN294;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN295;
	.var =
		0x05,0x11,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN296;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN297;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN298;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN299;
	.var =
		0x05,0x12,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN300;
	.var =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.var = .LN301;
	.var =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.var = .LN302;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN303;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN304;
	.var =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN305;
	.var =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.var = .LN306;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN307;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN308;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN309;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN310;
	.var =
		0x0E,0x00,0x05,0x02;
	.var = .LN311;
	.var =
		0x05,0x3D,0x0B,0x00,0x05,0x02;
	.var = .LN312;
	.var =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.var = .LN313;
	.var =
		0x05,0x13,0x03,0x50,0x01,0x00,0x05,0x02;
	.var = .LN314;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN315;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN316;
	.var =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN317;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN318;
	.var =
		0x05,0x13,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN319;
	.var =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.var = .LN320;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN321;
	.var =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.var = .LN322;
	.var =
		0x05,0x03,0x10,0x00,0x05,0x02;
	.var = .LN323;
	.var =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN324;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN325;
	.var =
		0x05,0x07,0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN326;
	.var =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.var = .LN327;
	.var =
		0x0B,0x00,0x05,0x02;
	.var = .LN328;
	.var =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN329;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN330;
	.var =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.var = .LN331;
	.var =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.var = .LN332;
	.var =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN333;
	.var =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.var = .LN334;
	.var =
		0x05,0x1B,0x03,0xF6,0x7E,0x01,0x00,0x05,0x02;
	.var = .LN335;
	.var =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.var = .LN336;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN337;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN338;
	.var =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN339;
	.var =
		0x0A,0x00,0x05,0x02;
	.var = .LN340;
	.var =
		0x05,0x06,0x03,0x5D,0x01,0x00,0x05,0x02;
	.var = .LN341;
	.var =
		0x05,0x23,0x03,0x6F,0x01,0x00,0x05,0x02;
	.var = .LN342;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN343;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN344;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN345;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN346;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN347;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN348;
	.var =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.var = .LN349;
	.var =
		0x05,0x23,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN350;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN351;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN352;
	.var =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.var = .LN353;
	.var =
		0x0F,0x00,0x05,0x02;
	.var = .LN354;
	.var =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN355;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN356;
	.var =
		0x05,0x2B,0x03,0x78,0x01,0x00,0x05,0x02;
	.var = .LN357;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN358;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN359;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN360;
	.var =
		0x10,0x00,0x05,0x02;
	.var = .LN361;
	.var =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.var = .LN362;
	.var =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN363;
	.var =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.var = .LN364;
	.var =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.var = .LN365;
	.var =
		0x05,0x0C,0x03,0x7C,0x01,0x00,0x05,0x02;
	.var = .LN366;
	.var =
		0x03,0x59,0x01,0x00,0x05,0x02;
	.var = .LN367;
	.var =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.var = .LN368;
	.var =
		0x05,0x26,0x03,0x77,0x01,0x00,0x05,0x02;
	.var = .LN369;
	.var =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.var = .LN370;
	.var =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.var = .LN371;
	.var =
		0x05,0x32,0x03,0x7F,0x01,0x00,0x05,0x02;
	.var = .LN372;
	.var =
		0x05,0x01,0x03,0x87,0x03,0x01,0x00,0x05,0x02;
	.var = .LN._process.end;
	.var =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.var =
		0x88,0x04,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x3E,0x0F,0x00,0x00,0xF0,0x02,0x00,0x00,0x68,0x61,0x6E,0x64,
		0x6C,0x65,0x5F,0x4C,0x45,0x44,0x00,0x2E,0x03,0x00,0x00,0x72,
		0x65,0x61,0x64,0x44,0x41,0x49,0x70,0x69,0x6E,0x00,0x6B,0x03,
		0x00,0x00,0x66,0x6C,0x61,0x67,0x54,0x65,0x73,0x74,0x00,0xA6,
		0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x21,
		0x04,0x00,0x00,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x00,0x39,0x04,
		0x00,0x00,0x73,0x74,0x61,0x74,0x65,0x00,0x50,0x04,0x00,0x00,
		0x62,0x75,0x66,0x66,0x5F,0x74,0x6D,0x70,0x00,0x6A,0x04,0x00,
		0x00,0x69,0x5F,0x74,0x6D,0x70,0x00,0x81,0x04,0x00,0x00,0x64,
		0x65,0x6C,0x61,0x79,0x65,0x64,0x00,0x9A,0x04,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x31,0x52,0x00,0xB3,0x04,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x31,0x4C,0x00,0xCC,0x04,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x32,0x52,0x00,0xE5,0x04,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x32,0x4C,0x00,0xFE,0x04,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x33,0x52,0x00,0x17,0x05,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x33,0x4C,0x00,0x30,0x05,0x00,0x00,0x69,
		0x6E,0x70,0x75,0x74,0x31,0x52,0x32,0x00,0x4A,0x05,0x00,0x00,
		0x69,0x6E,0x70,0x75,0x74,0x32,0x52,0x32,0x00,0x94,0x05,0x00,
		0x00,0x69,0x31,0x00,0xA8,0x05,0x00,0x00,0x69,0x32,0x00,0xBC,
		0x05,0x00,0x00,0x69,0x33,0x00,0xD0,0x05,0x00,0x00,0x6A,0x00,
		0xE3,0x05,0x00,0x00,0x6B,0x00,0xF6,0x05,0x00,0x00,0x6B,0x5F,
		0x69,0x6E,0x70,0x75,0x74,0x00,0x0F,0x06,0x00,0x00,0x6B,0x5F,
		0x69,0x6E,0x70,0x75,0x74,0x5F,0x69,0x00,0x2A,0x06,0x00,0x00,
		0x69,0x78,0x00,0x3E,0x06,0x00,0x00,0x6D,0x31,0x00,0x52,0x06,
		0x00,0x00,0x6D,0x31,0x5F,0x69,0x00,0x68,0x06,0x00,0x00,0x6D,
		0x31,0x5F,0x69,0x64,0x00,0x7F,0x06,0x00,0x00,0x6D,0x32,0x00,
		0x93,0x06,0x00,0x00,0x6D,0x33,0x00,0xA7,0x06,0x00,0x00,0x65,
		0x72,0x72,0x32,0x5F,0x69,0x6E,0x64,0x00,0xC1,0x06,0x00,0x00,
		0x65,0x72,0x72,0x32,0x5F,0x61,0x72,0x72,0x00,0xDB,0x06,0x00,
		0x00,0x6F,0x75,0x74,0x5F,0x32,0x00,0x20,0x07,0x00,0x00,0x66,
		0x78,0x6C,0x6D,0x73,0x46,0x6C,0x61,0x67,0x00,0x3B,0x07,0x00,
		0x00,0x69,0x64,0x65,0x6E,0x74,0x46,0x6C,0x61,0x67,0x00,0x56,
		0x07,0x00,0x00,0x69,0x64,0x65,0x6E,0x74,0x33,0x46,0x6C,0x61,
		0x67,0x00,0x72,0x07,0x00,0x00,0x72,0x65,0x73,0x65,0x74,0x46,
		0x6C,0x61,0x67,0x00,0x8D,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,
		0x79,0x43,0x74,0x6E,0x72,0x4C,0x69,0x6D,0x69,0x74,0x00,0xAD,
		0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,
		0x00,0xC8,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,
		0x6E,0x72,0x32,0x00,0xE4,0x07,0x00,0x00,0x64,0x65,0x6C,0x61,
		0x79,0x43,0x74,0x6E,0x72,0x33,0x00,0x00,0x08,0x00,0x00,0x64,
		0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x34,0x00,0x1C,0x08,
		0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x35,
		0x00,0x38,0x08,0x00,0x00,0x64,0x65,0x6C,0x61,0x79,0x43,0x74,
		0x6E,0x72,0x49,0x64,0x6E,0x65,0x74,0x00,0x58,0x08,0x00,0x00,
		0x64,0x65,0x6C,0x61,0x79,0x43,0x74,0x6E,0x72,0x49,0x64,0x6E,
		0x65,0x74,0x4C,0x69,0x6D,0x69,0x74,0x00,0x7D,0x08,0x00,0x00,
		0x6C,0x65,0x64,0x5F,0x76,0x61,0x6C,0x75,0x65,0x00,0x98,0x08,
		0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x64,0x65,0x63,0x00,
		0xB3,0x08,0x00,0x00,0x69,0x6E,0x52,0x64,0x61,0x74,0x61,0x00,
		0xCC,0x08,0x00,0x00,0x69,0x6E,0x4C,0x64,0x61,0x74,0x61,0x00,
		0xE5,0x08,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x00,
		0xFE,0x08,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x41,
		0x72,0x72,0x61,0x79,0x31,0x00,0x1D,0x09,0x00,0x00,0x69,0x6E,
		0x4E,0x6F,0x69,0x73,0x65,0x41,0x72,0x72,0x61,0x79,0x33,0x00,
		0x3C,0x09,0x00,0x00,0x69,0x6E,0x4E,0x6F,0x69,0x73,0x65,0x41,
		0x72,0x72,0x61,0x79,0x31,0x5F,0x69,0x00,0x5D,0x09,0x00,0x00,
		0x69,0x6E,0x4C,0x64,0x61,0x74,0x61,0x41,0x72,0x72,0x61,0x79,
		0x5F,0x69,0x00,0x7D,0x09,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,
		0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x31,0x00,0x9D,0x09,
		0x00,0x00,0x75,0x6E,0x31,0x00,0xB2,0x09,0x00,0x00,0x6D,0x75,
		0x31,0x00,0xC7,0x09,0x00,0x00,0x79,0x6E,0x31,0x00,0xDC,0x09,
		0x00,0x00,0x65,0x72,0x72,0x31,0x00,0xF2,0x09,0x00,0x00,0x63,
		0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,
		0x31,0x5F,0x69,0x00,0x14,0x0A,0x00,0x00,0x6D,0x75,0x31,0x5F,
		0x69,0x00,0x2B,0x0A,0x00,0x00,0x79,0x6E,0x31,0x5F,0x69,0x00,
		0x42,0x0A,0x00,0x00,0x65,0x72,0x72,0x31,0x5F,0x69,0x00,0x5A,
		0x0A,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,0x5F,0x66,0x69,0x6C,
		0x74,0x65,0x72,0x5F,0x32,0x00,0x7A,0x0A,0x00,0x00,0x75,0x6E,
		0x32,0x00,0x8F,0x0A,0x00,0x00,0x70,0x65,0x72,0x66,0x6F,0x72,
		0x6D,0x61,0x6E,0x63,0x65,0x00,0xAC,0x0A,0x00,0x00,0x41,0x44,
		0x5F,0x62,0x69,0x74,0x00,0xC4,0x0A,0x00,0x00,0x46,0x53,0x00,
		0xD8,0x0A,0x00,0x00,0x6C,0x61,0x6D,0x62,0x64,0x61,0x00,0xF0,
		0x0A,0x00,0x00,0x62,0x65,0x74,0x61,0x00,0x06,0x0B,0x00,0x00,
		0x65,0x4C,0x4D,0x53,0x5F,0x6D,0x75,0x5F,0x73,0x69,0x6E,0x00,
		0x23,0x0B,0x00,0x00,0x65,0x4C,0x4D,0x53,0x5F,0x6D,0x75,0x5F,
		0x77,0x68,0x69,0x74,0x65,0x4E,0x6F,0x69,0x73,0x65,0x00,0x47,
		0x0B,0x00,0x00,0x6D,0x75,0x32,0x00,0x5C,0x0B,0x00,0x00,0x6D,
		0x75,0x32,0x64,0x65,0x66,0x00,0x74,0x0B,0x00,0x00,0x6D,0x75,
		0x32,0x5F,0x30,0x00,0x8B,0x0B,0x00,0x00,0x79,0x6E,0x32,0x00,
		0xA0,0x0B,0x00,0x00,0x65,0x72,0x72,0x32,0x00,0xB6,0x0B,0x00,
		0x00,0x69,0x6E,0x70,0x75,0x74,0x52,0x66,0x69,0x6C,0x5F,0x6E,
		0x00,0xD3,0x0B,0x00,0x00,0x69,0x6E,0x70,0x75,0x74,0x52,0x66,
		0x69,0x6C,0x00,0xEE,0x0B,0x00,0x00,0x63,0x6F,0x65,0x66,0x73,
		0x5F,0x66,0x69,0x6C,0x74,0x65,0x72,0x5F,0x33,0x00,0x0E,0x0C,
		0x00,0x00,0x6D,0x75,0x33,0x00,0x23,0x0C,0x00,0x00,0x79,0x6E,
		0x33,0x00,0x38,0x0C,0x00,0x00,0x65,0x72,0x72,0x33,0x00,0x4E,
		0x0C,0x00,0x00,0x79,0x66,0x69,0x6C,0x61,0x33,0x00,0x66,0x0C,
		0x00,0x00,0x79,0x6E,0x32,0x61,0x72,0x72,0x61,0x79,0x00,0x80,
		0x0C,0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x31,0x00,0x98,0x0C,
		0x00,0x00,0x6E,0x6F,0x69,0x73,0x65,0x32,0x00,0xB0,0x0C,0x00,
		0x00,0x6E,0x6F,0x69,0x73,0x65,0x33,0x00,0xC8,0x0C,0x00,0x00,
		0x6E,0x6F,0x69,0x73,0x65,0x5F,0x6E,0x00,0xE1,0x0C,0x00,0x00,
		0x6E,0x6F,0x69,0x73,0x65,0x00,0xF8,0x0C,0x00,0x00,0x6E,0x6F,
		0x69,0x73,0x65,0x46,0x6C,0x61,0x67,0x00,0x13,0x0D,0x00,0x00,
		0x52,0x69,0x67,0x68,0x74,0x49,0x6E,0x50,0x72,0x65,0x76,0x00,
		0x30,0x0D,0x00,0x00,0x61,0x6C,0x70,0x68,0x61,0x00,0x00,0x00,
		0x00,0x00;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.var =
		0x30,0x00,0x00,0x00,0x02,0x00;
	.var = .epcdebug;
	.var =
		0x01,0x00;
	.var = .LN_handle_LED;
	.var = .LN._handle_LED.end-.LN_handle_LED;
	.var = .LN_readDAIpin;
	.var = .LN._readDAIpin.end-.LN_readDAIpin;
	.var = .LN_flagTest;
	.var = .LN._flagTest.end-.LN_flagTest;
	.var = .LN_process;
	.var = .LN._process.end-.LN_process;
	.var =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section .annotations SHT_DEBUGINFO;

	.align 1;
.epcannot:
	.type .epcannot,STT_OBJECT;
	.var =
		0x01,0x00,0x00,0x00,0xE4,0x15,0x00,0x00,0x2A,0x00,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x0C,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x54,0x00,0x00,0x00,0x16,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x4D,0x6F,0x6E,0x20,0x4E,0x6F,
		0x76,0x20,0x32,0x30,0x20,0x31,0x38,0x3A,0x34,0x35,0x3A,0x34,
		0x32,0x20,0x32,0x30,0x32,0x33,0x0A,0x00,0x36,0x00,0x00,0x00,
		0x52,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
		0x2D,0x63,0x20,0x2D,0x66,0x69,0x6C,0x65,0x2D,0x61,0x74,0x74,
		0x72,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x4E,0x61,0x6D,
		0x65,0x3D,0x46,0x65,0x4C,0x4D,0x53,0x5F,0x77,0x69,0x74,0x68,
		0x5F,0x41,0x33,0x20,0x2D,0x4F,0x20,0x2D,0x4F,0x76,0x31,0x30,
		0x30,0x20,0x2D,0x67,0x20,0x2D,0x73,0x61,0x76,0x65,0x2D,0x74,
		0x65,0x6D,0x70,0x73,0x20,0x2D,0x70,0x61,0x74,0x68,0x2D,0x6F,
		0x75,0x74,0x70,0x75,0x74,0x20,0x44,0x65,0x62,0x75,0x67,0x20,
		0x2D,0x45,0x44,0x20,0x2D,0x6E,0x6F,0x2D,0x6D,0x75,0x6C,0x74,
		0x69,0x6C,0x69,0x6E,0x65,0x20,0x2D,0x64,0x6F,0x75,0x62,0x6C,
		0x65,0x2D,0x73,0x69,0x7A,0x65,0x2D,0x33,0x32,0x20,0x2D,0x66,
		0x6C,0x61,0x67,0x73,0x2D,0x63,0x6F,0x6D,0x70,0x69,0x6C,0x65,
		0x72,0x20,0x2D,0x2D,0x64,0x69,0x61,0x67,0x5F,0x77,0x61,0x72,
		0x6E,0x69,0x6E,0x67,0x2C,0x69,0x6D,0x70,0x6C,0x69,0x63,0x69,
		0x74,0x5F,0x66,0x75,0x6E,0x63,0x5F,0x64,0x65,0x63,0x6C,0x20,
		0x2D,0x77,0x61,0x72,0x6E,0x2D,0x70,0x72,0x6F,0x74,0x6F,0x73,
		0x20,0x2D,0x66,0x6F,0x72,0x63,0x65,0x2D,0x63,0x69,0x72,0x63,
		0x62,0x75,0x66,0x20,0x2D,0x70,0x72,0x6F,0x63,0x20,0x41,0x44,
		0x53,0x50,0x2D,0x32,0x31,0x33,0x36,0x34,0x20,0x2D,0x6F,0x20,
		0x44,0x65,0x62,0x75,0x67,0x5C,0x70,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x2E,0x64,0x6F,0x6A,0x20,0x2D,0x4D,0x4D,0x00,0x60,0x00,
		0x00,0x00,0x6D,0x01,0x00,0x00,0x16,0x00,0x00,0x00,0x2E,0x00,
		0x00,0x00,0x41,0x44,0x53,0x50,0x2D,0x32,0x31,0x33,0x36,0x34,
		0x00,0x5E,0x01,0x00,0x00,0x9F,0x01,0x00,0x00,0x16,0x00,0x00,
		0x00,0x2D,0x00,0x00,0x00,0x30,0x2E,0x32,0x00,0x79,0x01,0x00,
		0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x81,
		0x01,0x00,0x00,0x9B,0x02,0x00,0x00,0x06,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB9,0x01,0x00,0x00,0x8B,
		0x01,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,
		0x6F,0x72,0x64,0x73,0x00,0xAF,0x01,0x00,0x00,0xE0,0x01,0x00,
		0x00,0x8B,0x01,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x31,
		0x2D,0x72,0x32,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,
		0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,0xC5,0x01,0x00,0x00,
		0x0A,0x02,0x00,0x00,0x8B,0x01,0x00,0x00,0x33,0x00,0x00,0x00,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xEC,0x01,
		0x00,0x00,0x88,0x02,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x02,0x00,0x00,0xF6,0x01,
		0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x77,0x6F,
		0x72,0x64,0x73,0x00,0x1A,0x02,0x00,0x00,0x44,0x02,0x00,0x00,
		0xF6,0x01,0x00,0x00,0x34,0x00,0x00,0x00,0x7B,0x72,0x30,0x2C,
		0x72,0x32,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,0x00,
		0x30,0x02,0x00,0x00,0x6E,0x02,0x00,0x00,0xF6,0x01,0x00,0x00,
		0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x50,0x02,0x00,0x00,0x79,0x02,0x00,0x00,0x05,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x88,0x02,
		0x00,0x00,0x5A,0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x02,0x00,
		0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0x7E,0x02,0x00,0x00,
		0xA5,0x02,0x00,0x00,0x5A,0x02,0x00,0x00,0x34,0x00,0x00,0x00,
		0x7B,0x72,0x30,0x2C,0x69,0x31,0x32,0x2C,0x61,0x63,0x63,0x7D,
		0x00,0x94,0x02,0x00,0x00,0xCF,0x02,0x00,0x00,0x5A,0x02,0x00,
		0x00,0x33,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0xB1,0x02,0x00,0x00,0xBF,0x00,0x00,0x00,0x06,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE9,
		0x02,0x00,0x00,0xBB,0x02,0x00,0x00,0x30,0x00,0x00,0x00,0x0E,
		0x00,0x00,0x00,0x77,0x6F,0x72,0x64,0x73,0x00,0xDF,0x02,0x00,
		0x00,0x30,0x03,0x00,0x00,0xBB,0x02,0x00,0x00,0x34,0x00,0x00,
		0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,0x34,0x2C,0x72,
		0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,0x69,0x31,0x32,
		0x2C,0x6D,0x34,0x2C,0x73,0x30,0x2C,0x73,0x32,0x2C,0x73,0x34,
		0x2C,0x61,0x63,0x63,0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,0x63,
		0x2C,0x6C,0x63,0x6E,0x74,0x72,0x7D,0x00,0xF5,0x02,0x00,0x00,
		0x64,0x03,0x00,0x00,0xBB,0x02,0x00,0x00,0x35,0x00,0x00,0x00,
		0x7B,0x72,0x33,0x2C,0x72,0x35,0x2D,0x72,0x37,0x2C,0x72,0x39,
		0x2C,0x72,0x31,0x33,0x2C,0x69,0x30,0x2D,0x69,0x33,0x2C,0x69,
		0x35,0x2C,0x6C,0x33,0x2C,0x62,0x33,0x2C,0x6D,0x30,0x7D,0x00,
		0x3C,0x03,0x00,0x00,0xEC,0x03,0x00,0x00,0xBB,0x02,0x00,0x00,
		0x36,0x00,0x00,0x00,0x7B,0x72,0x30,0x2D,0x72,0x32,0x2C,0x72,
		0x34,0x2C,0x72,0x38,0x2C,0x72,0x31,0x32,0x2C,0x69,0x34,0x2C,
		0x69,0x31,0x32,0x2D,0x69,0x31,0x33,0x2C,0x62,0x34,0x2C,0x62,
		0x31,0x32,0x2D,0x62,0x31,0x33,0x2C,0x6D,0x34,0x2C,0x6D,0x31,
		0x32,0x2C,0x73,0x30,0x2D,0x73,0x31,0x35,0x2C,0x75,0x73,0x74,
		0x61,0x74,0x31,0x2D,0x75,0x73,0x74,0x61,0x74,0x34,0x2C,0x61,
		0x63,0x63,0x2C,0x6D,0x63,0x63,0x2C,0x73,0x63,0x63,0x2C,0x62,
		0x74,0x66,0x2C,0x6C,0x63,0x6E,0x74,0x72,0x2C,0x73,0x6D,0x72,
		0x66,0x2C,0x73,0x6D,0x72,0x62,0x2C,0x73,0x61,0x63,0x63,0x2C,
		0x73,0x6D,0x63,0x63,0x2C,0x73,0x73,0x63,0x63,0x2C,0x73,0x62,
		0x74,0x66,0x7D,0x00,0x70,0x03,0x00,0x00,0x39,0x04,0x00,0x00,
		0xBB,0x02,0x00,0x00,0x37,0x00,0x00,0x00,0x7B,0x72,0x31,0x2D,
		0x72,0x32,0x2C,0x72,0x34,0x2C,0x72,0x36,0x2C,0x72,0x38,0x2D,
		0x72,0x39,0x2C,0x72,0x31,0x32,0x2D,0x72,0x31,0x33,0x2C,0x69,
		0x34,0x7D,0x00,0xF8,0x03,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,
		0x73,0x73,0x2E,0x63,0x00,0x1B,0x04,0x00,0x00,0x0B,0x01,0x00,
		0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x4D,0x04,0x00,0x00,0x25,0x04,0x00,0x00,0x0B,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xB7,0x05,0x00,
		0x00,0x25,0x04,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x31,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,
		0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x31,0x20,
		0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,
		0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x20,0x35,
		0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x59,0x04,0x00,0x00,0x03,
		0x06,0x00,0x00,0x25,0x04,0x00,0x00,0x16,0x00,0x00,0x00,0x02,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xC7,0x05,0x00,0x00,0x0B,0x01,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xE5,0x05,0x00,0x00,0x0E,
		0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x17,0x06,0x00,0x00,0xEF,0x05,0x00,0x00,0x0B,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x81,
		0x07,0x00,0x00,0xEF,0x05,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,
		0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0x23,0x06,0x00,
		0x00,0x91,0x07,0x00,0x00,0xEF,0x05,0x00,0x00,0x16,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0xDD,0x07,0x00,0x00,0xEF,0x05,0x00,
		0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xA1,0x07,0x00,0x00,0x0E,
		0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xBF,0x07,0x00,0x00,0x13,0x01,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF1,0x07,0x00,
		0x00,0xC9,0x07,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x03,0x00,0x00,0x00,0x5B,0x09,0x00,0x00,0xC9,0x07,0x00,
		0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,0x67,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,0x6D,
		0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,
		0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x36,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x00,0xFD,0x07,0x00,0x00,0x6B,0x09,0x00,0x00,0xC9,
		0x07,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xB7,
		0x09,0x00,0x00,0xC9,0x07,0x00,0x00,0x1C,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0x7B,0x09,0x00,0x00,0x13,0x01,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x99,0x09,0x00,0x00,0x19,
		0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0xCB,0x09,0x00,0x00,0xA3,0x09,0x00,0x00,0x0B,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x35,
		0x0B,0x00,0x00,0xA3,0x09,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,
		0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x64,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x70,0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x73,0x68,0x69,
		0x66,0x74,0x20,0x69,0x6D,0x6D,0x65,0x64,0x69,0x61,0x74,0x65,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x34,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0xD7,0x09,0x00,
		0x00,0x45,0x0B,0x00,0x00,0xA3,0x09,0x00,0x00,0x16,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x91,0x0B,0x00,0x00,0xA3,0x09,0x00,
		0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x55,0x0B,0x00,0x00,0x19,
		0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0x73,0x0B,0x00,0x00,0x1D,0x01,0x00,0x00,0x06,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA5,0x0B,0x00,
		0x00,0x7D,0x0B,0x00,0x00,0x0B,0x00,0x00,0x00,0x02,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x99,0x0D,0x00,0x00,0x7D,0x0B,0x00,
		0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x70,0x6D,0x20,0x64,0x61,0x67,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x73,0x68,0x69,0x66,0x74,0x20,0x69,0x6D,0x6D,
		0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,0x31,0x30,0x30,
		0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x65,0x6D,0x6F,0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,
		0x73,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x34,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,
		0x6C,0x75,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x32,0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,
		0x74,0x20,0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x32,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x00,0xB1,0x0B,0x00,
		0x00,0xA9,0x0D,0x00,0x00,0x7D,0x0B,0x00,0x00,0x16,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0xF5,0x0D,0x00,0x00,0x7D,0x0B,0x00,
		0x00,0x1C,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x70,0x72,0x6F,
		0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0xB9,0x0D,0x00,0x00,0x1D,
		0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xD7,0x0D,0x00,0x00,0x4B,0x02,0x00,0x00,0x03,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x0E,0x00,
		0x00,0xE1,0x0D,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,0x00,
		0x00,0x03,0x00,0x00,0x00,0x19,0x0E,0x00,0x00,0xE1,0x0D,0x00,
		0x00,0x10,0x00,0x00,0x00,0xCF,0x07,0x00,0x00,0x25,0x0E,0x00,
		0x00,0xE1,0x0D,0x00,0x00,0x14,0x00,0x00,0x00,0x45,0x0E,0x00,
		0x00,0xE1,0x0D,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,0x00,
		0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xBA,0x10,0x00,0x00,0xE1,0x0D,0x00,
		0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,0x61,
		0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,
		0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,
		0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,
		0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,
		0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,
		0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,
		0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,
		0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,
		0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,
		0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,
		0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,
		0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79,
		0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,
		0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,0x28,
		0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,
		0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,
		0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,
		0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,0x75,
		0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,
		0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,
		0x2E,0x33,0x25,0x29,0x0A,0x00,0x51,0x0E,0x00,0x00,0x70,0x72,
		0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x7E,0x10,0x00,0x00,
		0x4B,0x02,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,
		0x63,0x00,0x9C,0x10,0x00,0x00,0x05,0x02,0x00,0x00,0x03,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xCE,0x10,
		0x00,0x00,0xA6,0x10,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,0x00,
		0x00,0x00,0x03,0x00,0x00,0x00,0xDE,0x10,0x00,0x00,0xA6,0x10,
		0x00,0x00,0x10,0x00,0x00,0x00,0xF3,0x01,0x00,0x00,0xEA,0x10,
		0x00,0x00,0xA6,0x10,0x00,0x00,0x14,0x00,0x00,0x00,0x0A,0x11,
		0x00,0x00,0xA6,0x10,0x00,0x00,0x13,0x00,0x00,0x00,0x03,0x00,
		0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x13,0x00,0x00,0xA6,0x10,
		0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,0x64,
		0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,0x6D,
		0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,
		0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,
		0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,
		0x6D,0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,
		0x36,0x2E,0x37,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,
		0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,
		0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,
		0x64,0x20,0x20,0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,
		0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,
		0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,
		0x6D,0x75,0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,
		0x20,0x32,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,
		0x20,0x33,0x20,0x28,0x20,0x36,0x36,0x2E,0x37,0x25,0x29,0x0A,
		0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,0x72,
		0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,0x20,
		0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,0x20,
		0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,
		0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,
		0x63,0x74,0x69,0x6F,0x6E,0x20,0x69,0x6E,0x74,0x65,0x67,0x65,
		0x72,0x20,0x61,0x64,0x64,0x20,0x73,0x75,0x62,0x20,0x20,0x20,
		0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,
		0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,
		0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,0x16,0x11,0x00,0x00,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,0x00,0x43,0x13,0x00,
		0x00,0x05,0x02,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,
		0x2E,0x63,0x00,0x61,0x13,0x00,0x00,0xE1,0x01,0x00,0x00,0x03,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,
		0x13,0x00,0x00,0x6B,0x13,0x00,0x00,0x0B,0x00,0x00,0x00,0x01,
		0x00,0x00,0x00,0x03,0x00,0x00,0x00,0xA3,0x13,0x00,0x00,0x6B,
		0x13,0x00,0x00,0x10,0x00,0x00,0x00,0xF3,0x01,0x00,0x00,0xAF,
		0x13,0x00,0x00,0x6B,0x13,0x00,0x00,0x14,0x00,0x00,0x00,0xCF,
		0x13,0x00,0x00,0x6B,0x13,0x00,0x00,0x13,0x00,0x00,0x00,0x03,
		0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6B,
		0x13,0x00,0x00,0x38,0x00,0x00,0x00,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x64,0x65,0x66,0x69,0x6E,0x65,0x20,0x64,0x6D,0x20,
		0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,
		0x30,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x64,
		0x6D,0x20,0x64,0x61,0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x33,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x31,0x30,0x30,0x2E,0x30,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x65,0x6D,0x6F,
		0x72,0x79,0x20,0x61,0x63,0x63,0x65,0x73,0x73,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x33,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x36,
		0x20,0x28,0x20,0x35,0x30,0x2E,0x30,0x25,0x29,0x0A,0x2F,0x2F,
		0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,
		0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x61,0x6C,0x75,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,
		0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,
		0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,
		0x20,0x20,0x6D,0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,
		0x69,0x6F,0x6E,0x20,0x66,0x6C,0x6F,0x61,0x74,0x20,0x6D,0x75,
		0x6C,0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x20,0x20,0x75,0x73,
		0x65,0x64,0x20,0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,
		0x66,0x20,0x20,0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,
		0x33,0x25,0x29,0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,
		0x75,0x6C,0x74,0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,
		0x20,0x69,0x6E,0x74,0x65,0x67,0x65,0x72,0x20,0x6D,0x75,0x6C,
		0x74,0x69,0x70,0x6C,0x79,0x20,0x20,0x75,0x73,0x65,0x64,0x20,
		0x20,0x20,0x31,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,
		0x20,0x20,0x33,0x20,0x28,0x20,0x33,0x33,0x2E,0x33,0x25,0x29,
		0x0A,0x2F,0x2F,0x20,0x20,0x20,0x20,0x20,0x6D,0x75,0x6C,0x74,
		0x69,0x66,0x75,0x6E,0x63,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x75,
		0x6C,0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x75,0x73,0x65,0x64,0x20,0x20,0x20,0x31,
		0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x20,0x20,0x20,0x33,
		0x20,0x28,0x20,0x33,0x33,0x2E,0x33,0x25,0x29,0x0A,0x00,0xDB,
		0x13,0x00,0x00,0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x2E,0x63,
		0x00,0xC3,0x15,0x00,0x00,0xE1,0x01,0x00,0x00,0x03,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcannot.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 1;
	.global _memory;
	.type _memory,STT_OBJECT;
	.var _memory[1];
._memory.end:
	.align 2;
	.global _state;
	.type _state,STT_OBJECT;
	.var _state[500];
._state.end:
	.align 2;
	.global _buff_tmp;
	.type _buff_tmp,STT_OBJECT;
	.var _buff_tmp[100];
._buff_tmp.end:
	.align 1;
_i_tmp:
	.global _i_tmp;
	.type _i_tmp,STT_OBJECT;
	.var ..TW0[1] =
		 0x00000000;
._i_tmp.end:
	.align 4;
	.global _delayed;
	.type _delayed,STT_OBJECT;
	.var _delayed[2001];
._delayed.end:
	.align 1;
_i1:
	.global _i1;
	.type _i1,STT_OBJECT;
	.var ..TW1[1] =
		 0x00000000;
._i1.end:
	.align 1;
_i2:
	.global _i2;
	.type _i2,STT_OBJECT;
	.var ..TW2[1] =
		 0x00000000;
._i2.end:
	.align 1;
_i3:
	.global _i3;
	.type _i3,STT_OBJECT;
	.var ..TW3[1] =
		 0x00000000;
._i3.end:
	.align 1;
_m1:
	.global _m1;
	.type _m1,STT_OBJECT;
	.var ..TW4[1] =
		 0x00000000;
._m1.end:
	.align 1;
_m1_i:
	.global _m1_i;
	.type _m1_i,STT_OBJECT;
	.var ..TW5[1] =
		 0x00000000;
._m1_i.end:
	.align 1;
_m1_id:
	.global _m1_id;
	.type _m1_id,STT_OBJECT;
	.var ..TW6[1] =
		 0x000001C1;
._m1_id.end:
	.align 1;
_m2:
	.global _m2;
	.type _m2,STT_OBJECT;
	.var ..TW7[1] =
		 0x00000000;
._m2.end:
	.align 1;
_m3:
	.global _m3;
	.type _m3,STT_OBJECT;
	.var ..TW8[1] =
		 0x00000000;
._m3.end:
	.align 1;
_err2_ind:
	.global _err2_ind;
	.type _err2_ind,STT_OBJECT;
	.var ..TW9[1] =
		 0x00000000;
._err2_ind.end:
	.align 2;
	.global _err2_arr;
	.type _err2_arr,STT_OBJECT;
	.var _err2_arr[501];
._err2_arr.end:
	.align 1;
_fxlmsFlag:
	.global _fxlmsFlag;
	.type _fxlmsFlag,STT_OBJECT;
	.var ..TW10[1] =
		 0x00000000;
._fxlmsFlag.end:
	.align 1;
_identFlag:
	.global _identFlag;
	.type _identFlag,STT_OBJECT;
	.var ..TW11[1] =
		 0x00000000;
._identFlag.end:
	.align 1;
_ident3Flag:
	.global _ident3Flag;
	.type _ident3Flag,STT_OBJECT;
	.var ..TW12[1] =
		 0x00000000;
._ident3Flag.end:
	.align 1;
_resetFlag:
	.global _resetFlag;
	.type _resetFlag,STT_OBJECT;
	.var ..TW13[1] =
		 0x00000001;
._resetFlag.end:
	.align 1;
_delayCtnrLimit:
	.global _delayCtnrLimit;
	.type _delayCtnrLimit,STT_OBJECT;
	.var ..TW14[1] =
		 0x000009C4;
._delayCtnrLimit.end:
	.align 1;
_delayCtnr:
	.global _delayCtnr;
	.type _delayCtnr,STT_OBJECT;
	.var ..TW15[1] =
		 0x00000000;
._delayCtnr.end:
	.align 1;
_delayCtnr2:
	.global _delayCtnr2;
	.type _delayCtnr2,STT_OBJECT;
	.var ..TW16[1] =
		 0x00000000;
._delayCtnr2.end:
	.align 1;
_delayCtnr3:
	.global _delayCtnr3;
	.type _delayCtnr3,STT_OBJECT;
	.var ..TW17[1] =
		 0x00000000;
._delayCtnr3.end:
	.align 1;
_delayCtnr4:
	.global _delayCtnr4;
	.type _delayCtnr4,STT_OBJECT;
	.var ..TW18[1] =
		 0x00000000;
._delayCtnr4.end:
	.align 1;
_delayCtnr5:
	.global _delayCtnr5;
	.type _delayCtnr5,STT_OBJECT;
	.var ..TW19[1] =
		 0x00000000;
._delayCtnr5.end:
	.align 1;
_delayCtnrIdnet:
	.global _delayCtnrIdnet;
	.type _delayCtnrIdnet,STT_OBJECT;
	.var ..TW20[1] =
		 0x00000000;
._delayCtnrIdnet.end:
	.align 1;
_delayCtnrIdnetLimit:
	.global _delayCtnrIdnetLimit;
	.type _delayCtnrIdnetLimit,STT_OBJECT;
	.var ..TW21[1] =
		 0x0007A120;
._delayCtnrIdnetLimit.end:
	.align 1;
_led_value:
	.global _led_value;
	.type _led_value,STT_OBJECT;
	.var ..TW22[1] =
		 0x00000000;
._led_value.end:

	.section/pm/DOUBLE32 seg_pmda;

	.align 4;
_coefs_dec:
	.global _coefs_dec;
	.type _coefs_dec,STT_OBJECT;
	.var ..TW23[41] =
		 0xBAA6FC59, 0xBBF8DF7A, 0xBC2F5771, 0xBC8EED03,
		 0xBCCB48D4, 0xBD061B6D, 0xBD249907, 0xBD3C9ABB,
		 0xBD492685, 0xBD458DDE, 0xBD2E264E, 0xBD00E9D5,
		 0xBC784018, 0x3BBE4042, 0x3CF6F08D, 0x3D65D399,
		 0x3DA72192, 0x3DD5D788, 0x3DFACA36, 0x3E093E1D,
		 0x3E0D527E, 0x3E093E1D, 0x3DFACA36, 0x3DD5D788,
		 0x3DA72192, 0x3D65D399, 0x3CF6F08D, 0x3BBE4042,
		 0xBC784018, 0xBD00E9D5, 0xBD2E264E, 0xBD458DDE,
		 0xBD492685, 0xBD3C9ABB, 0xBD249907, 0xBD061B6D,
		 0xBCCB48D4, 0xBC8EED03, 0xBC2F5771, 0xBBF8DF7A,
		 0xBAA6FC59;
._coefs_dec.end:

	.section/dm/DOUBLE32 seg_dmda;

	.align 2;
_coefs_filter_1:
	.global _coefs_filter_1;
	.type _coefs_filter_1,STT_OBJECT;
	.var ..TW24[500] =
		 0x39DF2209, 0x3A2E9475, 0x3A171DF1, 0x3A6DDA18,
		 0x3A6D4A27, 0xBA8ABB28, 0xBB0A2B11, 0x388AFDE3,
		 0x3A9A301D, 0xB8DFA746, 0xB92DC8F4, 0x3A58F1C5,
		 0x3A028099, 0xB9F26029, 0xB9DEF9EF, 0x385B31CD,
		 0xB8FD6BA4, 0xB9204F54, 0x3ADE2CE8, 0x3C9D63DD,
		 0x3D043531, 0xBDC11A3F, 0xBE6528DB, 0x3D95BE5E,
		 0x3EDA9A9E, 0x3E3FAC5B, 0xBE50F83D, 0xBE3C2781,
		 0x3D350D46, 0x3DB0CE40, 0xBD8518D4, 0xBD992E68,
		 0x3D493196, 0x3CE85372, 0xBD70A2DA, 0xBD0BD4AF,
		 0x3B66B0EA, 0xBCCB901F, 0xBC815E71, 0x3CA73779,
		 0xBC50227C, 0xBD2D8535, 0xBC113F02, 0x3C300902,
		 0x38D17C39, 0xBAE0F7D3, 0x3A812BD7, 0x39D55D7C,
		 0x3945822F, 0xBB8A32A4, 0xBC212E07, 0xBBA2F670,
		 0x3BC41815, 0x3BD2600B, 0xBC15DEAA, 0xBC407412,
		 0x3CA0EB81, 0x3CF5718E, 0xBC063CE7, 0xBCBE91DA,
		 0x3AA410D7, 0x3BEF6FF6, 0x3ADECD97, 0x3C78EB04,
		 0x3CAB33D6, 0x3B4C0DC5, 0xBBB2C46D, 0x3B629840,
		 0x3B81B587, 0xBA63B440, 0xBA00DA7E, 0xBBC3E1A4,
		 0xBC1AF87A, 0x3BD400B0, 0x3CAA2F31, 0x3C0A0443,
		 0xBB914AF8, 0x3BB913EB, 0x3C5F3732, 0x3B4F2359,
		 0xBBB81685, 0xBAF757CE, 0x3A654FC5, 0xB97AB96C,
		 0x3B3ED966, 0x3BDFEFCB, 0x3BCC68E0, 0x3ADC1069,
		 0xBB78AEC5, 0xBBCF4185, 0xBB014E9C, 0x3BE2CF5A,
		 0x3BD6A0FC, 0xBAF328EF, 0xBB0ADEF7, 0xBB155529,
		 0xBC1F2D51, 0xBBA8AAA6, 0x3C047F7C, 0x3BCEA46A,
		 0xBBA5B3D1, 0xBC123B20, 0xBBABF134, 0xBA98C9A6,
		 0x39C15923, 0xBA82D4F9, 0xBB715090, 0xBAF62455,
		 0x3B9C3B09, 0x3B53F84C, 0xBBEFE79B, 0xBB89532F,
		 0x3C0D4D8F, 0x3B382F03, 0xBC111648, 0x3940C91A,
		 0x3C236576, 0xBAA8A0D7, 0xBC43F7DC, 0xBB37CB34,
		 0x3C200931, 0x3C017369, 0xBB0D3F59, 0xBBA2B0BC,
		 0x3A7B95E2, 0x3A08FA4A, 0xBC14288E, 0xBC39D7A8,
		 0xBB024646, 0x3C0778DA, 0x3C09FC62, 0xBB06D6C8,
		 0xBBFE65A6, 0xBADD8F3F, 0x3B545060, 0xBABA7687,
		 0xBBC369EA, 0xBB08D337, 0x3B0606D5, 0xBB04DF32,
		 0xBBD74B41, 0xBA361321, 0x3C0C00D4, 0x3BFA3063,
		 0x39AA6307, 0xBADC9B22, 0xB72FAA5B, 0xBACA3E71,
		 0xBB786B47, 0xBA68B451, 0x3BB1A6AA, 0x3BA6A9C3,
		 0x3926ADD8, 0x3B47A1E0, 0x3BE0194B, 0xB8C34271,
		 0xBBC621B2, 0xBA411CC8, 0x3B539E00, 0xBB3CD4BF,
		 0xBBC9B5FB, 0x3B0ACB70, 0x3C2AF90D, 0x3BB5BBEE,
		 0xBBE2A62F, 0xBC0E153E, 0x3B0977A1, 0x3C0F8021,
		 0x3B5CDA98, 0xBBACAFCB, 0xBBA44814, 0x3B3566DB,
		 0x3BB56B96, 0x3AD85FB5, 0xBA9E7808, 0xBAAE3436,
		 0xBB259908, 0xBB3F40C8, 0x3B22E4BB, 0x3BDDE1D9,
		 0x3B48E543, 0xBADE5558, 0xBB2ED71E, 0xBB1657B8,
		 0xBAD3F150, 0xB9294468, 0x3B4C3E6F, 0x3BA026B8,
		 0x3A381A5F, 0xBB808D46, 0xBB2D3FDD, 0x36CFFF9D,
		 0x3ABCDD96, 0x3B40B984, 0xBA0BAB5C, 0xBB9F8F79,
		 0xBA15A1C5, 0x3B7FFA5D, 0xB9131DEF, 0xBB203465,
		 0x3B29E7CB, 0x3B2FCF17, 0xBB5C8EB5, 0xBB2C25E8,
		 0x3B1B8D39, 0x3B180E15, 0xBA128111, 0xBAF4F30F,
		 0xBAE1CBCD, 0xBABB4703, 0xBAD40649, 0x39F796B2,
		 0x3B6AE9CD, 0x3ABF0ADF, 0xBAF8D04D, 0xBAA01859,
		 0xBA972DC3, 0xBB2967C2, 0xBA6674B0, 0x3A8DC6F3,
		 0xBA817BFE, 0xBB40069D, 0xBAED5BC3, 0xBA1FD6B1,
		 0xB9B0FF72, 0xBA1A8E28, 0xBA6E7722, 0xBA86CECD,
		 0xBA85AE76, 0xBA752515, 0xBAC4C3C9, 0xBA8F7C76,
		 0x3A3300BB, 0x3A6CA26E, 0xB9041084, 0xBA7F1F43,
		 0xB9C4D1FD, 0x3B130254, 0x3B61402C, 0x3AEA494D,
		 0x39BB7F73, 0x391513C9, 0xBAB2351E, 0xBB420168,
		 0xB9C479C9, 0x3B687DF1, 0x3B50A351, 0xB9267A3B,
		 0xBB1E1188, 0xBA14096B, 0x3B2D4E8F, 0x3B0ED517,
		 0x3A9FEA50, 0x3A8D9CA8, 0xBAF7D40E, 0xBB652CB5,
		 0x3A578B2F, 0x3BA41B5E, 0x3A03217A, 0xBBBD40B2,
		 0xBA9E06CE, 0x3B6C1F6E, 0xBAE0F015, 0xBB5C32D6,
		 0x399E56DF, 0xBA5500E7, 0xBB1268A5, 0x39EB7F6A,
		 0x3AA68D44, 0xBB1017E7, 0xBB17829D, 0x3B3A796A,
		 0x3B4F77D0, 0xBB49B92F, 0xBB3DB480, 0x3B91EFE5,
		 0x3B4FAE2C, 0xBB8C4023, 0xBB108CCE, 0x3B44D075,
		 0xB9B494E3, 0xBADE95A8, 0x3B587C12, 0x3B542A1A,
		 0xB9F38F9A, 0x398C9DB2, 0x3B1B79C0, 0xB96B1AFE,
		 0xBB915449, 0xBB340EB5, 0x3B356552, 0x3B022918,
		 0xBAFF9ED1, 0xBA3C2052, 0xB9AE4BED, 0xBB38A688,
		 0xBA028A75, 0x3B5668CD, 0x3A35CD61, 0xBAED393F,
		 0x39F8B29C, 0xB9FC4AB7, 0xBB6AE179, 0xB8AFA2B0,
		 0x3AEDFC64, 0xBB960C64, 0xBBC07683, 0x3B48E5BE,
		 0x3C05869D, 0x3AB9370D, 0xBBC3F73A, 0xBBAE9260,
		 0xBB2275B8, 0x3A3BB076, 0x3BA51E51, 0x3B908178,
		 0xBAB8CD4A, 0xBB417FEC, 0x39D0A6A0, 0xB9CE8C86,
		 0xBB41575F, 0x382E36F0, 0x3B43DAE4, 0x3A28ABDC,
		 0xBAD33936, 0xBA0081F9, 0x3B12C91A, 0x3B25FFFC,
		 0xBABAF2FF, 0xBAE500B8, 0x3B07C51F, 0x3A7BF96D,
		 0xBAF11D8F, 0xB996CED4, 0x3ABF933F, 0x3A3EEC86,
		 0x3A3517D9, 0x3B07545C, 0x3B347C66, 0x3AEB6FDE,
		 0xB9B38611, 0xBAE15F79, 0xBA800E47, 0x3A9C4FE9,
		 0x3B2D1419, 0x3AA0E2DC, 0xBB174FD9, 0xBB704345,
		 0xB981D604, 0x3B4FBC0E, 0x3AA69658, 0xB98E4CEF,
		 0x3ACA06F7, 0x3A6C997F, 0xBB2AD693, 0xBB7B028B,
		 0xBAB39994, 0x3A77583F, 0x3AF3E541, 0x3B53D416,
		 0x3ABCEAA5, 0xBB489A58, 0xBB190F42, 0x3AEAEDC7,
		 0x3B5CF776, 0x3AFCEEA7, 0xBA95F089, 0xBAABB684,
		 0x36BFD052, 0xBB229167, 0xBB34BAC7, 0x3B25E324,
		 0x3B62E918, 0xBA28CF21, 0xB98C05C9, 0x3B2E49D6,
		 0x3AA70EDD, 0xBAF101E7, 0xBA689D0D, 0x3ADBC1E7,
		 0x39E22B59, 0xBB2C6F28, 0xBB0ED13C, 0x3A96CD92,
		 0x3B02513F, 0xBAA3356B, 0xBB81567B, 0xBB46BF59,
		 0xB9E0D563, 0x3A0E62BD, 0xBAB16C11, 0xBB48EFBD,
		 0x39080A78, 0x3B9B19CF, 0x3B364094, 0xBB3D69E0,
		 0xBB77AE66, 0xB8D0B0EF, 0x3AECAF67, 0x3A5F3B74,
		 0xB9440351, 0x3A2D2F4D, 0x3AC28F65, 0xBA8D1836,
		 0xBB8B3010, 0xBB596EB9, 0x39ADEDF3, 0x3AA3BDD4,
		 0xBAFF7CAB, 0xBB76D793, 0xBA4BFCD4, 0x3B09BF44,
		 0x3A8FB08D, 0xB9582CCB, 0x3A2B8B85, 0x3ACB6E4C,
		 0x3932C726, 0x38F9FDC3, 0x3BA36AE8, 0x3BC7610E,
		 0xBACCCDC7, 0xBBB4C874, 0x393E902B, 0x3BAA101F,
		 0x3B185B67, 0xBB15D387, 0xBAB43654, 0x395D4291,
		 0xBAA9A235, 0xBA250C49, 0x3B0E541E, 0x3A824079,
		 0xBA752C8D, 0x3AB33CE1, 0x3AE58623, 0xBB075149,
		 0xBB51633F, 0xBA2AFB47, 0x39FC0FB2, 0x3A091AB2,
		 0x3A3E9DCE, 0xBA6375C4, 0xBB141DC3, 0xB9950CFC,
		 0x3B19E092, 0x3A8F503D, 0xBB1FC9A0, 0xBB386086,
		 0x39B721B9, 0x3B418A7E, 0x3AB1FE82, 0xBB188C07,
		 0xBB19FDAE, 0x3A024C68, 0x3A29DD1E, 0xBADE03F8,
		 0xBA6DD8FC, 0x3B1E0A51, 0x3B05D5EC, 0xBA9D434E,
		 0xB9AFF10F, 0x3B5C3F09, 0x3B6888C3, 0x3A3EEA81,
		 0xBA8C7495, 0xBA29053B, 0xB85205C2, 0x390E84C3,
		 0x3B0570D1, 0x3B18A8FB, 0xBAD89EA5, 0xBB7E422E,
		 0xBA6E48D0, 0x3B038752, 0x3A8C2E0C, 0xBABFF1BD,
		 0xBAC2CD6A, 0x3A3E8875, 0x3A8AC049, 0xBA0AD88E,
		 0xBA977535, 0xB9B68AB2, 0x3AB948C3, 0x3AB8E6D5,
		 0xBA13CDEF, 0xBA665BC9, 0x3A92E314, 0x3B09C5E3,
		 0xB9EC87CA, 0xBB70C08F, 0xBB34D6B4, 0x3AEDE99B,
		 0x3B4D1A27, 0x38A04DE4, 0xBB03645A, 0xBB1BFC94,
		 0xBAA3DA42, 0x399FD662, 0xBA8FFB4E, 0xBB2E1061;
._coefs_filter_1.end:
	.align 1;
_mu1:
	.global _mu1;
	.type _mu1,STT_OBJECT;
	.var ..TW25[1] =
		 0x38D1B718;
._mu1.end:
	.align 1;
_yn1:
	.global _yn1;
	.type _yn1,STT_OBJECT;
	.var ..TW26[1] =
		 0x00000000;
._yn1.end:
	.align 1;
_err1:
	.global _err1;
	.type _err1,STT_OBJECT;
	.var ..TW27[1] =
		 0x00000000;
._err1.end:
	.align 2;
_coefs_filter_1_i:
	.global _coefs_filter_1_i;
	.type _coefs_filter_1_i,STT_OBJECT;
	.var ..TW28[500] =
		 0xBD6DD7D5, 0xBCFE3844, 0xBDDFFE6B, 0xBDC02238,
		 0xBDE29670, 0xBE5DB257, 0xBD8F84DB, 0xBE8CC0BB,
		 0xBE463A69, 0xBE16DC46, 0xBECB602E, 0xBDE5DE18,
		 0xBEC8C7D5, 0xBEA35C17, 0xBE56BD4A, 0xBF1BE2F1,
		 0xBDB62694, 0xBF1EB4E1, 0xBED9D172, 0xBDBECE53,
		 0xBF78604B, 0x3E78FE2A, 0xBF0F2A94, 0xBEEAD79D,
		 0x3F828098, 0xBF639A61, 0x3F9FEBE4, 0x3FD62076,
		 0xBF5C8C61, 0x3F60836F, 0x3E8359A1, 0xBF2BA149,
		 0x3E81862A, 0xBD8594DA, 0xBEB2298A, 0xBE3AD6D8,
		 0x3E168681, 0xBDF6ECF1, 0xBE2D8C78, 0x3E69A2DE,
		 0x3D55D86B, 0xBE241ABE, 0x3CAB8B09, 0x3E38FB90,
		 0xBDAD9D80, 0xBDECF8FF, 0x3E1A43D3, 0xBDE78596,
		 0xBE3C8942, 0x3E10E02C, 0x3C80EE8E, 0xBDB7AA22,
		 0x3DDB0B1C, 0x3DEE9CFC, 0xBD2840B3, 0x3C193D98,
		 0x3E046123, 0xBD7C587C, 0xBD9E11F1, 0x3D316395,
		 0xBCF6966B, 0x3CF894D7, 0x3D989D23, 0x3D0FD523,
		 0x3D2388FC, 0x3D740CE5, 0x3D21FDED, 0x3CF32783,
		 0x3DF6816B, 0x3DD1A508, 0x3D8AEC38, 0x3DD3C7E1,
		 0x3D338989, 0x3D526BA5, 0x3CB3478C, 0xBD055FEB,
		 0xBC9C8790, 0xBD0B8B07, 0x3C8F8C9F, 0x39C67B28,
		 0x3D5F7F5F, 0x3DD52289, 0x3CC0B38B, 0x3D4C4159,
		 0x3D1E06B0, 0x3D312A60, 0x3CD97573, 0x3C21821B,
		 0x3D09879B, 0xBD527658, 0xBBC90376, 0x3C62B915,
		 0xBD387831, 0xBC3930CD, 0xB826B43C, 0xBC0C3269,
		 0xBC1EE46B, 0x3D275BF3, 0x3D37F028, 0x3C43545F,
		 0x3CD5C452, 0x3C1FAE25, 0xBB73DC22, 0x3C82CCE4,
		 0x3CD73640, 0xBC155B91, 0x3B1EE816, 0x3C2DD590,
		 0xBBEA5F7C, 0x3A9433C1, 0xBB80B718, 0x3D2AC6B0,
		 0x3B5F4B15, 0xBA9C8AD5, 0x3D66CDBD, 0xBBF3B1DB,
		 0x3CA78680, 0x3CE11E94, 0xBC02799B, 0xBC66A9B4,
		 0xBBC95252, 0xBA85AF36, 0xBD5A6A67, 0xBC181C6A,
		 0xBCF5F0F5, 0xBD4EA62D, 0x3C9F5839, 0xBC3362FB,
		 0xBC70327C, 0xBC755035, 0xBCF3A192, 0xBCDBA1C3,
		 0xBCDE164B, 0xBC16FD31, 0xBCE9DAB5, 0xBC58FCD2,
		 0x3B998784, 0xBC230B0C, 0xBAC69B14, 0x3CB2793F,
		 0x3C912B22, 0x3C03CE78, 0x3A5B8E38, 0x39AB6B86,
		 0xBC919E89, 0x3A1D0F71, 0x3C58256A, 0xBD24A0BC,
		 0x3A972D40, 0x3A130DFE, 0xBCF75A6A, 0x3C2B2D3F,
		 0xBC491259, 0xBBCD0996, 0xBC5888C7, 0xBB849675,
		 0x3A158A9F, 0xBCB55856, 0x3CE3113D, 0xBD0BA797,
		 0xBBFC0D75, 0x3CBF08B9, 0xBD24FBD9, 0x3D27A14C,
		 0xBC991205, 0xBCAC1CAC, 0x3CE1D335, 0xBD180BF0,
		 0x3C8C1422, 0x3BD2E895, 0x3BF021C3, 0x3BD4C844,
		 0xBC88C94D, 0x3CCC7C17, 0x3B1377AE, 0x3B2BCD8F,
		 0x3CE4FB58, 0xBBFFD69A, 0xBC0E2ED1, 0x3D08BBC6,
		 0x3C639318, 0x3C0B7304, 0x3D1B0104, 0x3CAAE52D,
		 0x3B977112, 0x3B0E122D, 0x3CC28AA8, 0x3C316C26,
		 0xBBB709AB, 0x3C8B7656, 0xBCB57665, 0xBBDDD9D2,
		 0x3C3760EA, 0xBC2B059F, 0x3CA7BC78, 0xBB186E02,
		 0x3B901786, 0x3BDBF1AE, 0xBCCBE794, 0x3CA4BFCD,
		 0x3BE0D02B, 0xBC3BEF1F, 0x3CE73B38, 0xBBDDDAF6,
		 0x3A9B5F5C, 0x3C18B9AA, 0xBC7B5A6B, 0xB9B9A84C,
		 0xBD0D0BCF, 0x3BA22E8C, 0xBC816479, 0xBCFE0DE3,
		 0x3CE8EE2E, 0xBD2FBC8D, 0xBB88BEA0, 0x3C03C0BC,
		 0xBCF23917, 0x3D02E422, 0xBD0FF8E7, 0x3BC9A163,
		 0xBC2495C1, 0xBD3BBCFB, 0x3D3B92DE, 0xBD641CA4,
		 0x3C50383E, 0x3D220017, 0xBD3642D6, 0x3D64285B,
		 0xBC0D6793, 0xBBD0FED7, 0x3CE30040, 0xBCEFB5C6,
		 0x3C2711AF, 0xBC391601, 0x3BB4DEEB, 0x3A7DAF3F,
		 0xBCC4B492, 0x3C955254, 0xBD02F69F, 0xBC918770,
		 0x3BCCA30B, 0xBD0BFCF3, 0xBC142164, 0xBC2AFDB7,
		 0xBC9B63A6, 0xBA7B2889, 0xBA43E244, 0xBAB05B10,
		 0xBC892F07, 0xBCA8DA39, 0xBC1E70C4, 0xBCDFDEE5,
		 0xBCB75931, 0x3B2EB8A7, 0xBCB1C8A7, 0xBC4406AE,
		 0xBB52D9D3, 0xBD0DAD96, 0x3BF75B94, 0xBB599338,
		 0xBB8502AE, 0x3CA7FDA4, 0xBC573C87, 0x3D0AE500,
		 0x3C98852F, 0xBB66F788, 0x3D2DD309, 0x3C10D433,
		 0x3D03F036, 0x3C6CC5CF, 0x3C08C538, 0x3D21E8F4,
		 0xBB82AAC8, 0x3D1A2EA9, 0x3C672220, 0x3BF91570,
		 0x3D0C6B9E, 0xBC2CC011, 0x3C038701, 0x3B6FABC1,
		 0x3B49B81E, 0x3C02700F, 0xBACCCDFB, 0x3A907267,
		 0xBC25B8CC, 0x3C8ED690, 0xBC6E7E5D, 0xBB30A87C,
		 0x3C7A424A, 0xBC9C69C9, 0x3CFCBBF9, 0x397B9534,
		 0x3C79A810, 0x3D1273DD, 0xBBFE6112, 0x3CA7F269,
		 0xBBFE22D2, 0x3BDE334A, 0xBB04D482, 0xBC0E7FC3,
		 0x3CB3528B, 0xBCCEF77B, 0x3C8E9EC9, 0x3AA221BA,
		 0xBC558789, 0x3D0640E6, 0xBCE42891, 0x3C9619B2,
		 0xBB8C48BF, 0xBD04739B, 0x3CDB4E0E, 0xBD3EA99C,
		 0x3BD0F987, 0x3B6132E8, 0xBD282F29, 0x3C847B89,
		 0xBD1F3B50, 0xBBF1DF66, 0xBB3AFA1A, 0xBCB9D883,
		 0x3C22A42B, 0xBC70CB69, 0x3CA15CC1, 0x3B20C3B5,
		 0x3C526E96, 0x3CAC9081, 0xBC564C36, 0x3CF68069,
		 0xBCA4442D, 0xBC1B65AB, 0x3C9D4627, 0xBD35398E,
		 0x3BBF4509, 0xBCBE5EF8, 0xBCC91837, 0x3C793188,
		 0xBCF75185, 0x3C460F7A, 0xBC906B3B, 0xBC1E98BC,
		 0xBB81D96F, 0xBD03C3B8, 0xBB6EF971, 0xBD146F24,
		 0xBC24AD32, 0xBCBB6A12, 0xBC2B2E43, 0x3C4CC00A,
		 0xBC76B63E, 0x3D04A561, 0x3B51B922, 0x3BC0AA4F,
		 0x3CF873F2, 0xBBAA7288, 0x36BDA850, 0x3A39FCB4,
		 0xBCA9A1F5, 0xBCD3D505, 0xBB0AD59B, 0xBD1412D5,
		 0xBC41D762, 0x3B8596DD, 0xBCE3D0E0, 0x3C8B842E,
		 0x3BFAF277, 0x3B5565BA, 0x3C90076F, 0x3C5CF069,
		 0x3C623946, 0xB9B4E1B8, 0x398EA040, 0xBA3E7464,
		 0xBC9D83A7, 0xBC597FA9, 0xBCA6835B, 0xBC1CC469,
		 0xBB7FAE84, 0x3AD2E53D, 0x3C959634, 0xBC71B61E,
		 0x3CEB6C54, 0xBB6DB19F, 0xBCCD5F49, 0x3D19A146,
		 0xBD0C2723, 0x3C137CBC, 0x3C0848C4, 0xBD09245C,
		 0x3CDD5065, 0xBCB15524, 0x3B97A16E, 0x3BCF7248,
		 0xBC362D8F, 0x3C54E379, 0xBCA6559A, 0x3C3C887C,
		 0xBC2ECD78, 0xBC384AAE, 0x3C5F94F5, 0xBC539D9C,
		 0x3CAB5E5E, 0x3C2B102D, 0x3CA5A66D, 0x3CC759BF,
		 0x3B9439AF, 0x3CF1A194, 0x3BA9635D, 0x3C4E2D5A,
		 0x3C4E98AE, 0xBC1809C8, 0x3C4E80A9, 0xBBAF3257,
		 0xBC00C9A5, 0x3B52923B, 0xBA8BE2F2, 0xBB6A69C6,
		 0xBB7F90DA, 0x3B61E633, 0xBBF5C648, 0xBC0BBD2F,
		 0x3C77D626, 0xBC7E2002, 0xBC34B49F, 0x3CD2B8E8,
		 0xBCD159EE, 0xBC191A6E, 0x3CA82A01, 0xBCD22E1D,
		 0x38D44F07, 0x3C3A58DF, 0xBC58C799, 0x3B8FFAAC,
		 0xBBD112F0, 0xBB3C8128, 0xBC8F5859, 0xBCB3A9E4,
		 0x3C2857FC, 0xBCCF715D, 0xBC45F762, 0x3A5DCA31,
		 0xBCC6E9C7, 0xBC1D7FC1, 0xBCBDEF3A, 0x3BA8C2F0,
		 0xBCA48743, 0xBCA93530, 0x3CF2390D, 0xBD0B4B82,
		 0xBAE6916D, 0x3CD13875, 0xBCE414F7, 0x3C2F3E52,
		 0xB9B94612, 0xBC8D80C7, 0x3BCFE213, 0xBD011649,
		 0x3C4DE22D, 0xBC1A2427, 0xBD2203D6, 0x3D45E57A,
		 0xBD2746DB, 0xBC0E2379, 0x3D3B36CD, 0xBD503DBF,
		 0x3CDCDDEE, 0xBBB3418A, 0xBC5F6B84, 0x3C0526BC,
		 0xBD16595B, 0x3CD8EDD9, 0xBD2705D4, 0x3BAAC003,
		 0x3C907E54, 0xBD34BDB4, 0x3D1CC17C, 0xBC8D7C2F,
		 0xBA9C4798, 0x3C86E662, 0xBCAA59B4, 0x3CFE885C,
		 0xBC79F422, 0x3BF20CDC, 0x3C7D88C4, 0xBCE1579E,
		 0x3C12CA6A, 0xBC4C5A45, 0xBC66E345, 0xBC222B1B,
		 0xBBDDC291, 0x3B81D27F, 0xBCA74259, 0x3C87DEB5,
		 0x3A97C71C, 0xBBE66448, 0x3D0EFB0C, 0xBB09DB12,
		 0x3C5921A1, 0x3C754947, 0xBAC936D5, 0x3C004FC5;
._coefs_filter_1_i.end:
	.align 1;
_mu1_i:
	.global _mu1_i;
	.type _mu1_i,STT_OBJECT;
	.var ..TW29[1] =
		 0x3A83126F;
._mu1_i.end:
	.align 1;
_yn1_i:
	.global _yn1_i;
	.type _yn1_i,STT_OBJECT;
	.var ..TW30[1] =
		 0x00000000;
._yn1_i.end:
	.align 1;
_err1_i:
	.global _err1_i;
	.type _err1_i,STT_OBJECT;
	.var ..TW31[1] =
		 0x00000000;
._err1_i.end:
	.align 1;
_performance:
	.global _performance;
	.type _performance,STT_OBJECT;
	.var ..TW32[1] =
		 0x00000000;
._performance.end:
	.align 1;
_AD_bit:
	.global _AD_bit;
	.type _AD_bit,STT_OBJECT;
	.var ..TW33[1] =
		 0x00000018;
._AD_bit.end:
	.align 1;
_FS:
	.global _FS;
	.type _FS,STT_OBJECT;
	.var ..TW34[1] =
		 0x00199993;
._FS.end:
	.align 1;
_lambda:
	.global _lambda;
	.type _lambda,STT_OBJECT;
	.var ..TW35[1] =
		 0x3C23D70A;
._lambda.end:
	.align 1;
_beta:
	.global _beta;
	.type _beta,STT_OBJECT;
	.var ..TW36[1] =
		 0x3F800000;
._beta.end:
	.align 1;
_eLMS_mu_sin:
	.global _eLMS_mu_sin;
	.type _eLMS_mu_sin,STT_OBJECT;
	.var ..TW37[1] =
		 0x38D1B717;
._eLMS_mu_sin.end:
	.align 1;
_eLMS_mu_whiteNoise:
	.global _eLMS_mu_whiteNoise;
	.type _eLMS_mu_whiteNoise,STT_OBJECT;
	.var ..TW38[1] =
		 0x3BC49BA6;
._eLMS_mu_whiteNoise.end:
	.align 1;
_mu2:
	.global _mu2;
	.type _mu2,STT_OBJECT;
	.var ..TW39[1] =
		 0x3BC49BA6;
._mu2.end:
	.align 1;
_mu2def:
	.global _mu2def;
	.type _mu2def,STT_OBJECT;
	.var ..TW40[1] =
		 0x3BC49BA6;
._mu2def.end:
	.align 1;
_mu2_0:
	.global _mu2_0;
	.type _mu2_0,STT_OBJECT;
	.var ..TW41[1] =
		 0x37FBA882;
._mu2_0.end:
	.align 1;
_yn2:
	.global _yn2;
	.type _yn2,STT_OBJECT;
	.var ..TW42[1] =
		 0x00000000;
._yn2.end:
	.align 1;
_err2:
	.global _err2;
	.type _err2,STT_OBJECT;
	.var ..TW43[1] =
		 0x00000000;
._err2.end:
	.align 1;
_inputRfil_n:
	.global _inputRfil_n;
	.type _inputRfil_n,STT_OBJECT;
	.var ..TW44[1] =
		 0x00000000;
._inputRfil_n.end:
	.align 2;
_coefs_filter_3:
	.global _coefs_filter_3;
	.type _coefs_filter_3,STT_OBJECT;
	.var ..TW45[500] =
		 0x39106B8A, 0x37CA4862, 0xB9240976, 0xB9512500,
		 0x376FF785, 0x393A47C3, 0x385487F9, 0xB885EAFF,
		 0xB80DA238, 0x36EABEE0, 0x37F80758, 0x38B8DDF3,
		 0x390C558B, 0x3793D13E, 0xB88F2F6F, 0xB7C877A9,
		 0x378CF422, 0x38DC1171, 0x390C94FC, 0xB7B30829,
		 0xB96429AC, 0xB76CC38A, 0x39F8CB05, 0x39A30F59,
		 0xB9B62814, 0xB9AB9AE4, 0x38D6521A, 0x38C92AC4,
		 0xB8329934, 0x389C5971, 0x38074FCE, 0xB95019CE,
		 0xB7F2E412, 0x3959DC28, 0xB872EEEE, 0xB969FBF9,
		 0x3826067D, 0x39295D61, 0x3801A8C4, 0x38C5D9AB,
		 0x396E4B51, 0xBA0A1093, 0xBB03E7B7, 0xBA9ECECC,
		 0x3B2D24DC, 0x3B9ACAD9, 0x3B1783F1, 0xBAFB41E3,
		 0xBB61F783, 0xB98AF19D, 0x3B46FCE7, 0x3AF0B77E,
		 0xBADE0077, 0xBB7D001B, 0xBB4C7625, 0x383CBA3A,
		 0x3AEFFF8D, 0x39833839, 0xBA9B70AD, 0xBA4E2C71,
		 0xB9C0825E, 0xB81CF8B7, 0x3A0F325E, 0x3A1E728A,
		 0x391C432C, 0xB9BCF6F3, 0xB9DDB3F8, 0x39B82D98,
		 0x3A6E4B9F, 0xB92070B4, 0xBAC02988, 0xBA808558,
		 0x398DBDDF, 0x3A88B7BC, 0x3A31A7D5, 0xBA4AABED,
		 0xBA6058E0, 0x3A16CC92, 0x3A9DB4E3, 0x3A400768,
		 0x393DFDDC, 0x3A3DDBFB, 0x3A9D6D7F, 0xB97ADE92,
		 0xBAA462CD, 0x39390B4F, 0x3AB61994, 0x39B90E64,
		 0xBA875144, 0xBA12BB53, 0x3A419091, 0x3A5F38A6,
		 0x399B3D54, 0x393F2B37, 0x32D66070, 0xB9C6E535,
		 0x394E59E9, 0x3AA92180, 0x3A585189, 0xBA405B21,
		 0xBA2E19ED, 0x3A65230E, 0x3A8C2681, 0xB9D9B954,
		 0xBA9E45BE, 0xB89E4BE9, 0x3A93A243, 0x39BF1151,
		 0xBA71CF8B, 0xBA4CCD21, 0xB9A62FF7, 0xB9984487,
		 0xB8A4B3CA, 0xBA0209FA, 0xBA82AEC7, 0x391C305C,
		 0x3AAADAA2, 0x39F4E4FD, 0xBA543703, 0xBA664A5F,
		 0xBA0B6091, 0xB9EA5EA9, 0x37598076, 0x3A63CAB8,
		 0x3ABB8999, 0x3A477CF4, 0xBA829D91, 0xBAD09E88,
		 0xBA632243, 0xBA4E3890, 0xB9F74FE6, 0x3A8F2592,
		 0x3AB133D1, 0xB9C0E4FF, 0xBA88D69D, 0xB8F208C4,
		 0x39619BB2, 0x3635AA55, 0x39F29F46, 0x3A4B9F71,
		 0x386822DD, 0xBA15716D, 0xB9498191, 0x394ED660,
		 0xB9DCA5FA, 0xBAAADE35, 0xBA692D86, 0x3A4817A5,
		 0x3AC6B107, 0x3A209CDF, 0xB9FF549A, 0xBA758FD9,
		 0xBA4E8640, 0xB819570A, 0x3A844278, 0x3AABF6F1,
		 0x398BFBA4, 0xBA185BAC, 0xB975C414, 0xB9B61D59,
		 0xBA91EFD9, 0xBA0217D8, 0x3A695923, 0x3A68CD66,
		 0xB94799BD, 0xBA2CED1C, 0xB8E4DD42, 0x39A6E239,
		 0x39294A37, 0x38492AA5, 0x3949C317, 0x39A56BCC,
		 0x398819C3, 0x38B8FD26, 0x39B8F69D, 0x3A285BDB,
		 0x3805051F, 0xB9E28D59, 0xB987988D, 0xB8A35083,
		 0x39B29325, 0x3A262E07, 0x3A0AA8D4, 0x39DEA071,
		 0xB7C310B4, 0xBA0980A2, 0xB9B06E2B, 0x38FACF21,
		 0x3A085853, 0x3A28B429, 0xB90FBD3B, 0xBA9C7B17,
		 0xBA8EF5E2, 0xB8845BDE, 0x39CF8FBE, 0xB89DB812,
		 0xB9977D54, 0x399BB73C, 0x39F59A7C, 0xB9B71E7C,
		 0xBA722190, 0xB9FAB061, 0x3997D0E5, 0x39FA08A4,
		 0x39CA2DA2, 0x39DAFE4C, 0xB95B941D, 0xBA909760,
		 0xBA20FCAC, 0x3A5464C0, 0x3A525867, 0xBA0ABA38,
		 0xBA49F756, 0x380A37E0, 0x394FDB7F, 0xB8C70288,
		 0xB906B167, 0xB84C78A8, 0x381FF6B1, 0x3998ECC2,
		 0x39FE02EA, 0x39A26B0F, 0xB8795EC3, 0xB95A47DE,
		 0xB8E6A046, 0x374B1EA4, 0xB83FAAF6, 0x37B474B2,
		 0x3A093B8D, 0x3A69030B, 0x39E0AC5B, 0xBA104D3B,
		 0xBA682EF5, 0xB9731F13, 0x39BC2D00, 0x393DAC87,
		 0xB95766C3, 0xB8D12407, 0x39A73CCC, 0x3925BF05,
		 0xBA0EE54A, 0xBA20E2B0, 0xB4C6679B, 0x3985B567,
		 0x38BB26DE, 0xB8B43FDE, 0xB946AFB0, 0x360CFAAA,
		 0x39A6B062, 0x391186D2, 0xB98E675B, 0xB984B2D0,
		 0xB77407F7, 0x3989F5AE, 0x3A01B141, 0x3951A7F4,
		 0xB9DBB3A7, 0xBA031621, 0x33107BC8, 0x392468D3,
		 0x3875F8DB, 0x391130FE, 0x38E84FF2, 0x38F3E6B8,
		 0x399BCDF9, 0x38E2E9DE, 0xB9B6C0FC, 0xB96F140B,
		 0x39E869EA, 0x3A4D529E, 0x39C92706, 0xB974F6AC,
		 0xB9735259, 0x39382AC3, 0x381342C6, 0xB99D7355,
		 0x39589930, 0x3A6E19E9, 0x39D3A5FE, 0xBA48B2FD,
		 0xBA6FEDC2, 0xB729B351, 0x398CF133, 0xB9E4C063,
		 0xB9C34D06, 0x39D23880, 0xB7BAC2C1, 0xBA4A2D2C,
		 0x389DB6F9, 0x3A698226, 0xB942D0D4, 0xBA896885,
		 0xB97ED8BD, 0x39B1AD45, 0x3844A637, 0xB91D3C7E,
		 0xB8A89FAB, 0x35ED8329, 0xB91ACE1A, 0xB97D4195,
		 0x3931FB13, 0x39A6BF47, 0xB91FE536, 0xB9A7CE27,
		 0x38C2C078, 0x399F855C, 0xB893F224, 0xBA133344,
		 0xBA248302, 0xB960866C, 0x39E9C480, 0x3A4B3107,
		 0x393D2614, 0xBA21BEE9, 0xB9A8B193, 0x39F9100A,
		 0x395ECC28, 0xBA2D2681, 0xBA051D70, 0x39D64762,
		 0x3A2E7B46, 0x390F9445, 0xB9D5BCDD, 0xB9DC3AB7,
		 0x39096A59, 0x3A11EF8E, 0x3A1CEA0A, 0x39C8D15D,
		 0x392013C6, 0x39410079, 0xB7A58DC1, 0xB960604E,
		 0x38968A15, 0x37852D49, 0xB988078B, 0xB89912DA,
		 0x38D444A3, 0x37E1B935, 0xB96E9D26, 0xB9970FE7,
		 0x39238C1C, 0x39CCD83E, 0x36EDB6EF, 0xB9755460,
		 0x3908345A, 0x3998F15C, 0x392E0620, 0x39C1FC4E,
		 0x39592F50, 0xBA141156, 0xB9F27C78, 0x399E7E4F,
		 0x39F54322, 0x39C37331, 0x3967E39D, 0xB913EFB1,
		 0xB956EB96, 0xB7C63316, 0x38A127A8, 0x396A0BBB,
		 0x39A39810, 0x391C4585, 0x385DA9DC, 0xB844635C,
		 0xB9CFCD8D, 0xB997C669, 0x399FA174, 0x395DF46F,
		 0xB9B51D4F, 0xB8C97A75, 0x3944FC8A, 0xBA197FEE,
		 0xBA5E258C, 0x3930747E, 0x39F83596, 0xB98E4E8B,
		 0xB9593CE3, 0x39378C24, 0xBA03E0AB, 0xBA5BCF90,
		 0x3928D298, 0x3A83C35C, 0x39B5E73E, 0xBA3B5ADE,
		 0xB9F09A2E, 0x39969054, 0x39841FE0, 0xB7913E0B,
		 0xB7A5CAB1, 0x38DB82A9, 0x378AB749, 0xB8B5ED3B,
		 0xB6E55D5F, 0xB965A3BB, 0xB9C4B12B, 0xB88C8827,
		 0x39052FE0, 0xB8A20EC7, 0xB95F8A88, 0xB8BAAB29,
		 0xB7485F8D, 0xB9085E78, 0xB9875939, 0xB87C55AD,
		 0x39FAB269, 0x3A19681E, 0xB8CFA024, 0xB9F69D4C,
		 0x393AE22D, 0x3A4E8A59, 0x39BE6EFE, 0xB985CB10,
		 0x392982ED, 0x3A31C6E1, 0x38E7A243, 0xB9D269EE,
		 0xB8AE159A, 0xB8AA8348, 0xB9F057AE, 0xB995676B,
		 0xB88E34F5, 0xB98335CB, 0xB944CE74, 0x396DCF6E,
		 0x399AFBDB, 0xB7A141B4, 0x38AA7BAE, 0x3A04B075,
		 0x39C7D1FC, 0xB8D091F7, 0xB81170C5, 0x396EA5AB,
		 0xB921BB0C, 0xB9B2531A, 0x39A844B9, 0x3A220486,
		 0xB7E07E2F, 0xBA35C114, 0xBA201AEC, 0xB904C40F,
		 0x3932FA80, 0x398950A1, 0x398F34FD, 0x392F616E,
		 0xB99F1179, 0xBA3B81E0, 0xB926D14D, 0x3A2BFEAE,
		 0x39CC12FE, 0xB9342F14, 0xB790E3D6, 0xB8596930,
		 0xBA0A272A, 0xB9A5A8FD, 0x39DE3FA1, 0x39F749B9,
		 0xB728EF28, 0xB97D8940, 0xB9ED9A27, 0xB9DC0939,
		 0x393EB139, 0x3A034B1F, 0x38EADFD6, 0xB974DBD3,
		 0xB91A65EF, 0x392943BF, 0x39897CAB, 0xB82C4FDC,
		 0xB94944FA, 0xB8C0326C, 0xB8ADD78B, 0x38AB38E8,
		 0x39A06F4D, 0x399AAF8B, 0x399EFD6C, 0x396816E7,
		 0xB99D061C, 0xBA50C695, 0xBA1FA1A7, 0x38ED808E,
		 0x3A0FCE1B, 0x39E57888, 0x3944A318, 0x37607122,
		 0xB92825E7, 0xB99C87E7, 0xB94731E7, 0x3928868C,
		 0x39F1511A, 0x39881D32, 0xB9A8DEA6, 0xBA0465DA,
		 0xB9062D9C, 0x39045AFF, 0x37B89338, 0x398E914D,
		 0x3A1B04E4, 0xB8C037D9, 0xBA3BA131, 0xB87CB090;
._coefs_filter_3.end:
	.align 1;
_mu3:
	.global _mu3;
	.type _mu3,STT_OBJECT;
	.var ..TW46[1] =
		 0x38D1B718;
._mu3.end:
	.align 1;
_yn3:
	.global _yn3;
	.type _yn3,STT_OBJECT;
	.var ..TW47[1] =
		 0x00000000;
._yn3.end:
	.align 1;
_err3:
	.global _err3;
	.type _err3,STT_OBJECT;
	.var ..TW48[1] =
		 0x00000000;
._err3.end:
	.align 1;
_yfila3:
	.global _yfila3;
	.type _yfila3,STT_OBJECT;
	.var ..TW49[1] =
		 0x00000000;
._yfila3.end:
	.align 1;
_noiseFlag:
	.global _noiseFlag;
	.type _noiseFlag,STT_OBJECT;
	.var ..TW50[1] =
		 0x00000000;
._noiseFlag.end:
	.align 1;
_RightInPrev:
	.global _RightInPrev;
	.type _RightInPrev,STT_OBJECT;
	.var ..TW51[1] =
		 0x00000000;
._RightInPrev.end:
	.align 1;
_alpha:
	.global _alpha;
	.type _alpha,STT_OBJECT;
	.var ..TW52[1] =
		 0x3727C5AC;
._alpha.end:

	.align 4;
	.var _input1R[501];
	.weak _input1R;
	.align 4;
	.var _input1L[501];
	.weak _input1L;
	.align 4;
	.var _input2R[2001];
	.weak _input2R;
	.align 4;
	.var _input2L[2001];
	.weak _input2L;
	.align 4;
	.var _input3R[501];
	.weak _input3R;
	.align 4;
	.var _input3L[501];
	.weak _input3L;
	.align 4;
	.var _input1R2[501];
	.weak _input1R2;
	.align 4;
	.var _input2R2[2001];
	.weak _input2R2;
	.align 1;
	.var _j[1];
	.weak _j;
	.align 1;
	.var _k[1];
	.weak _k;
	.align 1;
	.var _k_input[1];
	.weak _k_input;
	.align 1;
	.var _k_input_i[1];
	.weak _k_input_i;
	.align 1;
	.var _ix[1];
	.weak _ix;
	.align 1;
	.var _out_2[1];
	.weak _out_2;
	.align 1;
	.var _inRdata[1];
	.weak _inRdata;
	.align 1;
	.var _inLdata[1];
	.weak _inLdata;
	.align 1;
	.var _inNoise[1];
	.weak _inNoise;
	.align 2;
	.var _inNoiseArray1[501];
	.weak _inNoiseArray1;
	.align 2;
	.var _inNoiseArray3[501];
	.weak _inNoiseArray3;
	.align 2;
	.var _inNoiseArray1_i[501];
	.weak _inNoiseArray1_i;
	.align 2;
	.var _inLdataArray_i[501];
	.weak _inLdataArray_i;
	.align 2;
	.var _un1[500];
	.weak _un1;
	.align 2;
	.var _coefs_filter_2[2000];
	.weak _coefs_filter_2;
	.align 2;
	.var _un2[2000];
	.weak _un2;
	.align 2;
	.var _inputRfil[2001];
	.weak _inputRfil;
	.align 2;
	.var _yn2array[501];
	.weak _yn2array;
	.align 2;
	.var _noise1[501];
	.weak _noise1;
	.align 2;
	.var _noise2[2001];
	.weak _noise2;
	.align 2;
	.var _noise3[501];
	.weak _noise3;
	.align 1;
	.var _noise_n[1];
	.weak _noise_n;
	.align 2;
	.var _noise[2000];
	.weak _noise;

	.extern _isProcessing;
	.type _isProcessing,STT_OBJECT;
	.extern _rightIn;
	.type _rightIn,STT_OBJECT;
	.extern _inputR;
	.type _inputR,STT_OBJECT;
	.extern _inputL;
	.type _inputL,STT_OBJECT;
	.extern _out_1;
	.type _out_1,STT_OBJECT;
	.extern _i_dec;
	.type _i_dec,STT_OBJECT;
